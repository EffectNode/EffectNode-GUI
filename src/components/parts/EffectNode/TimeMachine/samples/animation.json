{"output":{"html":"<!DOCTYPE html>\n<html>\n  <head>\n    <meta charset=\"UTF-8\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge,chrome=1\">\n    <meta name=\"viewport\" content=\"width=device-width,initial-scale=1\">\n\n    <title>WebGL</title>\n\n    <meta name=\"author\" content=\"loklok\">\n    <meta name=\"description\" content=\"WebGL Art\">\n    <meta name=\"keywords\" content=\"WebGL, Art\">\n\n    <style type=\"text/css\">\n    </style>\n\n  </head>\n  <body>\n    <div id=\"app-attach-point\"></div>\n    \n    <script required src=\"https://cdnjs.cloudflare.com/ajax/libs/vue/2.5.2/vue.min.js\"></script>\n    <script required src=\"https://cdnjs.cloudflare.com/ajax/libs/vue-router/3.0.1/vue-router.min.js\"></script>\n    <script required src=\"https://cdnjs.cloudflare.com/ajax/libs/tween.js/16.3.5/Tween.min.js\"></script>\n    <script required src=\"https://cdnjs.cloudflare.com/ajax/libs/three.js/88/three.min.js\" integrity=\"sha256-6fhm481uY9c152qGWIVgE7KbzaCj5WjCi3BGIpZef2E=\" crossorigin=\"anonymous\"></script>\n    <script required src=\"https://threejs.org/examples/js/GPUComputationRenderer.js\"></script>\n  <script>\n  (function RunRunUnicorn(){\n    var app = \"\\n(function(){\\n  /* eslint-disable */\\n/** vim: et:ts=4:sw=4:sts=4\\n * @license RequireJS 2.3.5 Copyright jQuery Foundation and other contributors.\\n * Released under MIT license, https://github.com/requirejs/requirejs/blob/master/LICENSE\\n */\\n//Not using strict: uneven strict support in browsers, #392, and causes\\n//problems with requirejs.exec()/transpiler plugins that may not be strict.\\n/*jslint regexp: true, nomen: true, sloppy: true */\\n/*global window, navigator, document, importScripts, setTimeout, opera */\\n\\nvar requireJSRequire, require, define;\\n(function (global, setTimeout) {\\n    var req, s, head, baseElement, dataMain, src,\\n        interactiveScript, currentlyAddingScript, mainScript, subPath,\\n        version = '2.3.5',\\n        commentRegExp = /\\\\/\\\\*[\\\\s\\\\S]*?\\\\*\\\\/|([^:\\\"'=]|^)\\\\/\\\\/.*$/mg,\\n        cjsRequireRegExp = /[^.]\\\\s*require\\\\s*\\\\(\\\\s*[\\\"']([^'\\\"\\\\s]+)[\\\"']\\\\s*\\\\)/g,\\n        jsSuffixRegExp = /\\\\.js$/,\\n        currDirRegExp = /^\\\\.\\\\//,\\n        op = Object.prototype,\\n        ostring = op.toString,\\n        hasOwn = op.hasOwnProperty,\\n        isBrowser = !!(typeof window !== 'undefined' && typeof navigator !== 'undefined' && window.document),\\n        isWebWorker = !isBrowser && typeof importScripts !== 'undefined',\\n        //PS3 indicates loaded and complete, but need to wait for complete\\n        //specifically. Sequence is 'loading', 'loaded', execution,\\n        // then 'complete'. The UA check is unfortunate, but not sure how\\n        //to feature test w/o causing perf issues.\\n        readyRegExp = isBrowser && navigator.platform === 'PLAYSTATION 3' ?\\n                      /^complete$/ : /^(complete|loaded)$/,\\n        defContextName = '_',\\n        //Oh the tragedy, detecting opera. See the usage of isOpera for reason.\\n        isOpera = typeof opera !== 'undefined' && opera.toString() === '[object Opera]',\\n        contexts = {},\\n        cfg = {},\\n        globalDefQueue = [],\\n        useInteractive = false;\\n\\n    //Could match something like ')//comment', do not lose the prefix to comment.\\n    function commentReplace(match, singlePrefix) {\\n        return singlePrefix || '';\\n    }\\n\\n    function isFunction(it) {\\n        return ostring.call(it) === '[object Function]';\\n    }\\n\\n    function isArray(it) {\\n        return ostring.call(it) === '[object Array]';\\n    }\\n\\n    /**\\n     * Helper function for iterating over an array. If the func returns\\n     * a true value, it will break out of the loop.\\n     */\\n    function each(ary, func) {\\n        if (ary) {\\n            var i;\\n            for (i = 0; i < ary.length; i += 1) {\\n                if (ary[i] && func(ary[i], i, ary)) {\\n                    break;\\n                }\\n            }\\n        }\\n    }\\n\\n    /**\\n     * Helper function for iterating over an array backwards. If the func\\n     * returns a true value, it will break out of the loop.\\n     */\\n    function eachReverse(ary, func) {\\n        if (ary) {\\n            var i;\\n            for (i = ary.length - 1; i > -1; i -= 1) {\\n                if (ary[i] && func(ary[i], i, ary)) {\\n                    break;\\n                }\\n            }\\n        }\\n    }\\n\\n    function hasProp(obj, prop) {\\n        return hasOwn.call(obj, prop);\\n    }\\n\\n    function getOwn(obj, prop) {\\n        return hasProp(obj, prop) && obj[prop];\\n    }\\n\\n    /**\\n     * Cycles over properties in an object and calls a function for each\\n     * property value. If the function returns a truthy value, then the\\n     * iteration is stopped.\\n     */\\n    function eachProp(obj, func) {\\n        var prop;\\n        for (prop in obj) {\\n            if (hasProp(obj, prop)) {\\n                if (func(obj[prop], prop)) {\\n                    break;\\n                }\\n            }\\n        }\\n    }\\n\\n    /**\\n     * Simple function to mix in properties from source into target,\\n     * but only if target does not already have a property of the same name.\\n     */\\n    function mixin(target, source, force, deepStringMixin) {\\n        if (source) {\\n            eachProp(source, function (value, prop) {\\n                if (force || !hasProp(target, prop)) {\\n                    if (deepStringMixin && typeof value === 'object' && value &&\\n                        !isArray(value) && !isFunction(value) &&\\n                        !(value instanceof RegExp)) {\\n\\n                        if (!target[prop]) {\\n                            target[prop] = {};\\n                        }\\n                        mixin(target[prop], value, force, deepStringMixin);\\n                    } else {\\n                        target[prop] = value;\\n                    }\\n                }\\n            });\\n        }\\n        return target;\\n    }\\n\\n    //Similar to Function.prototype.bind, but the 'this' object is specified\\n    //first, since it is easier to read/figure out what 'this' will be.\\n    function bind(obj, fn) {\\n        return function () {\\n            return fn.apply(obj, arguments);\\n        };\\n    }\\n\\n    function scripts() {\\n        return document.getElementsByTagName('script');\\n    }\\n\\n    function defaultOnError(err) {\\n        throw err;\\n    }\\n\\n    //Allow getting a global that is expressed in\\n    //dot notation, like 'a.b.c'.\\n    function getGlobal(value) {\\n        if (!value) {\\n            return value;\\n        }\\n        var g = global;\\n        each(value.split('.'), function (part) {\\n            g = g[part];\\n        });\\n        return g;\\n    }\\n\\n    /**\\n     * Constructs an error with a pointer to an URL with more information.\\n     * @param {String} id the error ID that maps to an ID on a web page.\\n     * @param {String} message human readable error.\\n     * @param {Error} [err] the original error, if there is one.\\n     *\\n     * @returns {Error}\\n     */\\n    function makeError(id, msg, err, requireModules) {\\n        var e = new Error(msg + '\\\\nhttp://requirejs.org/docs/errors.html#' + id);\\n        e.requireType = id;\\n        e.requireModules = requireModules;\\n        if (err) {\\n            e.originalError = err;\\n        }\\n        return e;\\n    }\\n\\n    if (typeof define !== 'undefined') {\\n        //If a define is already in play via another AMD loader,\\n        //do not overwrite.\\n        return;\\n    }\\n\\n    if (typeof requirejs !== 'undefined') {\\n        if (isFunction(requirejs)) {\\n            //Do not overwrite an existing requirejs instance.\\n            return;\\n        }\\n        cfg = requirejs;\\n        requirejs = undefined;\\n    }\\n\\n    //Allow for a require config object\\n    if (typeof require !== 'undefined' && !isFunction(require)) {\\n        //assume it is a config object.\\n        cfg = require;\\n        require = undefined;\\n    }\\n\\n    function newContext(contextName) {\\n        var inCheckLoaded, Module, context, handlers,\\n            checkLoadedTimeoutId,\\n            config = {\\n                //Defaults. Do not set a default for map\\n                //config to speed up normalize(), which\\n                //will run faster if there is no default.\\n                waitSeconds: 7,\\n                baseUrl: './',\\n                paths: {},\\n                bundles: {},\\n                pkgs: {},\\n                shim: {},\\n                config: {}\\n            },\\n            registry = {},\\n            //registry of just enabled modules, to speed\\n            //cycle breaking code when lots of modules\\n            //are registered, but not activated.\\n            enabledRegistry = {},\\n            undefEvents = {},\\n            defQueue = [],\\n            defined = {},\\n            urlFetched = {},\\n            bundlesMap = {},\\n            requireCounter = 1,\\n            unnormalizedCounter = 1;\\n\\n        /**\\n         * Trims the . and .. from an array of path segments.\\n         * It will keep a leading path segment if a .. will become\\n         * the first path segment, to help with module name lookups,\\n         * which act like paths, but can be remapped. But the end result,\\n         * all paths that use this function should look normalized.\\n         * NOTE: this method MODIFIES the input array.\\n         * @param {Array} ary the array of path segments.\\n         */\\n        function trimDots(ary) {\\n            var i, part;\\n            for (i = 0; i < ary.length; i++) {\\n                part = ary[i];\\n                if (part === '.') {\\n                    ary.splice(i, 1);\\n                    i -= 1;\\n                } else if (part === '..') {\\n                    // If at the start, or previous value is still ..,\\n                    // keep them so that when converted to a path it may\\n                    // still work when converted to a path, even though\\n                    // as an ID it is less than ideal. In larger point\\n                    // releases, may be better to just kick out an error.\\n                    if (i === 0 || (i === 1 && ary[2] === '..') || ary[i - 1] === '..') {\\n                        continue;\\n                    } else if (i > 0) {\\n                        ary.splice(i - 1, 2);\\n                        i -= 2;\\n                    }\\n                }\\n            }\\n        }\\n\\n        /**\\n         * Given a relative module name, like ./something, normalize it to\\n         * a real name that can be mapped to a path.\\n         * @param {String} name the relative name\\n         * @param {String} baseName a real name that the name arg is relative\\n         * to.\\n         * @param {Boolean} applyMap apply the map config to the value. Should\\n         * only be done if this normalization is for a dependency ID.\\n         * @returns {String} normalized name\\n         */\\n        function normalize(name, baseName, applyMap) {\\n            var pkgMain, mapValue, nameParts, i, j, nameSegment, lastIndex,\\n                foundMap, foundI, foundStarMap, starI, normalizedBaseParts,\\n                baseParts = (baseName && baseName.split('/')),\\n                map = config.map,\\n                starMap = map && map['*'];\\n\\n            //Adjust any relative paths.\\n            if (name) {\\n                name = name.split('/');\\n                lastIndex = name.length - 1;\\n\\n                // If wanting node ID compatibility, strip .js from end\\n                // of IDs. Have to do this here, and not in nameToUrl\\n                // because node allows either .js or non .js to map\\n                // to same file.\\n                if (config.nodeIdCompat && jsSuffixRegExp.test(name[lastIndex])) {\\n                    name[lastIndex] = name[lastIndex].replace(jsSuffixRegExp, '');\\n                }\\n\\n                // Starts with a '.' so need the baseName\\n                if (name[0].charAt(0) === '.' && baseParts) {\\n                    //Convert baseName to array, and lop off the last part,\\n                    //so that . matches that 'directory' and not name of the baseName's\\n                    //module. For instance, baseName of 'one/two/three', maps to\\n                    //'one/two/three.js', but we want the directory, 'one/two' for\\n                    //this normalization.\\n                    normalizedBaseParts = baseParts.slice(0, baseParts.length - 1);\\n                    name = normalizedBaseParts.concat(name);\\n                }\\n\\n                trimDots(name);\\n                name = name.join('/');\\n            }\\n\\n            //Apply map config if available.\\n            if (applyMap && map && (baseParts || starMap)) {\\n                nameParts = name.split('/');\\n\\n                outerLoop: for (i = nameParts.length; i > 0; i -= 1) {\\n                    nameSegment = nameParts.slice(0, i).join('/');\\n\\n                    if (baseParts) {\\n                        //Find the longest baseName segment match in the config.\\n                        //So, do joins on the biggest to smallest lengths of baseParts.\\n                        for (j = baseParts.length; j > 0; j -= 1) {\\n                            mapValue = getOwn(map, baseParts.slice(0, j).join('/'));\\n\\n                            //baseName segment has config, find if it has one for\\n                            //this name.\\n                            if (mapValue) {\\n                                mapValue = getOwn(mapValue, nameSegment);\\n                                if (mapValue) {\\n                                    //Match, update name to the new value.\\n                                    foundMap = mapValue;\\n                                    foundI = i;\\n                                    break outerLoop;\\n                                }\\n                            }\\n                        }\\n                    }\\n\\n                    //Check for a star map match, but just hold on to it,\\n                    //if there is a shorter segment match later in a matching\\n                    //config, then favor over this star map.\\n                    if (!foundStarMap && starMap && getOwn(starMap, nameSegment)) {\\n                        foundStarMap = getOwn(starMap, nameSegment);\\n                        starI = i;\\n                    }\\n                }\\n\\n                if (!foundMap && foundStarMap) {\\n                    foundMap = foundStarMap;\\n                    foundI = starI;\\n                }\\n\\n                if (foundMap) {\\n                    nameParts.splice(0, foundI, foundMap);\\n                    name = nameParts.join('/');\\n                }\\n            }\\n\\n            // If the name points to a package's name, use\\n            // the package main instead.\\n            pkgMain = getOwn(config.pkgs, name);\\n\\n            return pkgMain ? pkgMain : name;\\n        }\\n\\n        function removeScript(name) {\\n            if (isBrowser) {\\n                each(scripts(), function (scriptNode) {\\n                    if (scriptNode.getAttribute('data-requiremodule') === name &&\\n                            scriptNode.getAttribute('data-requirecontext') === context.contextName) {\\n                        scriptNode.parentNode.removeChild(scriptNode);\\n                        return true;\\n                    }\\n                });\\n            }\\n        }\\n\\n        function hasPathFallback(id) {\\n            var pathConfig = getOwn(config.paths, id);\\n            if (pathConfig && isArray(pathConfig) && pathConfig.length > 1) {\\n                //Pop off the first array value, since it failed, and\\n                //retry\\n                pathConfig.shift();\\n                context.require.undef(id);\\n\\n                //Custom require that does not do map translation, since\\n                //ID is \\\"absolute\\\", already mapped/resolved.\\n                context.makeRequire(null, {\\n                    skipMap: true\\n                })([id]);\\n\\n                return true;\\n            }\\n        }\\n\\n        //Turns a plugin!resource to [plugin, resource]\\n        //with the plugin being undefined if the name\\n        //did not have a plugin prefix.\\n        function splitPrefix(name) {\\n            var prefix,\\n                index = name ? name.indexOf('!') : -1;\\n            if (index > -1) {\\n                prefix = name.substring(0, index);\\n                name = name.substring(index + 1, name.length);\\n            }\\n            return [prefix, name];\\n        }\\n\\n        /**\\n         * Creates a module mapping that includes plugin prefix, module\\n         * name, and path. If parentModuleMap is provided it will\\n         * also normalize the name via require.normalize()\\n         *\\n         * @param {String} name the module name\\n         * @param {String} [parentModuleMap] parent module map\\n         * for the module name, used to resolve relative names.\\n         * @param {Boolean} isNormalized: is the ID already normalized.\\n         * This is true if this call is done for a define() module ID.\\n         * @param {Boolean} applyMap: apply the map config to the ID.\\n         * Should only be true if this map is for a dependency.\\n         *\\n         * @returns {Object}\\n         */\\n        function makeModuleMap(name, parentModuleMap, isNormalized, applyMap) {\\n            var url, pluginModule, suffix, nameParts,\\n                prefix = null,\\n                parentName = parentModuleMap ? parentModuleMap.name : null,\\n                originalName = name,\\n                isDefine = true,\\n                normalizedName = '';\\n\\n            //If no name, then it means it is a require call, generate an\\n            //internal name.\\n            if (!name) {\\n                isDefine = false;\\n                name = '_@r' + (requireCounter += 1);\\n            }\\n\\n            nameParts = splitPrefix(name);\\n            prefix = nameParts[0];\\n            name = nameParts[1];\\n\\n            if (prefix) {\\n                prefix = normalize(prefix, parentName, applyMap);\\n                pluginModule = getOwn(defined, prefix);\\n            }\\n\\n            //Account for relative paths if there is a base name.\\n            if (name) {\\n                if (prefix) {\\n                    if (isNormalized) {\\n                        normalizedName = name;\\n                    } else if (pluginModule && pluginModule.normalize) {\\n                        //Plugin is loaded, use its normalize method.\\n                        normalizedName = pluginModule.normalize(name, function (name) {\\n                            return normalize(name, parentName, applyMap);\\n                        });\\n                    } else {\\n                        // If nested plugin references, then do not try to\\n                        // normalize, as it will not normalize correctly. This\\n                        // places a restriction on resourceIds, and the longer\\n                        // term solution is not to normalize until plugins are\\n                        // loaded and all normalizations to allow for async\\n                        // loading of a loader plugin. But for now, fixes the\\n                        // common uses. Details in #1131\\n                        normalizedName = name.indexOf('!') === -1 ?\\n                                         normalize(name, parentName, applyMap) :\\n                                         name;\\n                    }\\n                } else {\\n                    //A regular module.\\n                    normalizedName = normalize(name, parentName, applyMap);\\n\\n                    //Normalized name may be a plugin ID due to map config\\n                    //application in normalize. The map config values must\\n                    //already be normalized, so do not need to redo that part.\\n                    nameParts = splitPrefix(normalizedName);\\n                    prefix = nameParts[0];\\n                    normalizedName = nameParts[1];\\n                    isNormalized = true;\\n\\n                    url = context.nameToUrl(normalizedName);\\n                }\\n            }\\n\\n            //If the id is a plugin id that cannot be determined if it needs\\n            //normalization, stamp it with a unique ID so two matching relative\\n            //ids that may conflict can be separate.\\n            suffix = prefix && !pluginModule && !isNormalized ?\\n                     '_unnormalized' + (unnormalizedCounter += 1) :\\n                     '';\\n\\n            return {\\n                prefix: prefix,\\n                name: normalizedName,\\n                parentMap: parentModuleMap,\\n                unnormalized: !!suffix,\\n                url: url,\\n                originalName: originalName,\\n                isDefine: isDefine,\\n                id: (prefix ?\\n                        prefix + '!' + normalizedName :\\n                        normalizedName) + suffix\\n            };\\n        }\\n\\n        function getModule(depMap) {\\n            var id = depMap.id,\\n                mod = getOwn(registry, id);\\n\\n            if (!mod) {\\n                mod = registry[id] = new context.Module(depMap);\\n            }\\n\\n            return mod;\\n        }\\n\\n        function on(depMap, name, fn) {\\n            var id = depMap.id,\\n                mod = getOwn(registry, id);\\n\\n            if (hasProp(defined, id) &&\\n                    (!mod || mod.defineEmitComplete)) {\\n                if (name === 'defined') {\\n                    fn(defined[id]);\\n                }\\n            } else {\\n                mod = getModule(depMap);\\n                if (mod.error && name === 'error') {\\n                    fn(mod.error);\\n                } else {\\n                    mod.on(name, fn);\\n                }\\n            }\\n        }\\n\\n        function onError(err, errback) {\\n            var ids = err.requireModules,\\n                notified = false;\\n\\n            if (errback) {\\n                errback(err);\\n            } else {\\n                each(ids, function (id) {\\n                    var mod = getOwn(registry, id);\\n                    if (mod) {\\n                        //Set error on module, so it skips timeout checks.\\n                        mod.error = err;\\n                        if (mod.events.error) {\\n                            notified = true;\\n                            mod.emit('error', err);\\n                        }\\n                    }\\n                });\\n\\n                if (!notified) {\\n                    req.onError(err);\\n                }\\n            }\\n        }\\n\\n        /**\\n         * Internal method to transfer globalQueue items to this context's\\n         * defQueue.\\n         */\\n        function takeGlobalQueue() {\\n            //Push all the globalDefQueue items into the context's defQueue\\n            if (globalDefQueue.length) {\\n                each(globalDefQueue, function(queueItem) {\\n                    var id = queueItem[0];\\n                    if (typeof id === 'string') {\\n                        context.defQueueMap[id] = true;\\n                    }\\n                    defQueue.push(queueItem);\\n                });\\n                globalDefQueue = [];\\n            }\\n        }\\n\\n        handlers = {\\n            'require': function (mod) {\\n                if (mod.require) {\\n                    return mod.require;\\n                } else {\\n                    return (mod.require = context.makeRequire(mod.map));\\n                }\\n            },\\n            'exports': function (mod) {\\n                mod.usingExports = true;\\n                if (mod.map.isDefine) {\\n                    if (mod.exports) {\\n                        return (defined[mod.map.id] = mod.exports);\\n                    } else {\\n                        return (mod.exports = defined[mod.map.id] = {});\\n                    }\\n                }\\n            },\\n            'module': function (mod) {\\n                if (mod.module) {\\n                    return mod.module;\\n                } else {\\n                    return (mod.module = {\\n                        id: mod.map.id,\\n                        uri: mod.map.url,\\n                        config: function () {\\n                            return getOwn(config.config, mod.map.id) || {};\\n                        },\\n                        exports: mod.exports || (mod.exports = {})\\n                    });\\n                }\\n            }\\n        };\\n\\n        function cleanRegistry(id) {\\n            //Clean up machinery used for waiting modules.\\n            delete registry[id];\\n            delete enabledRegistry[id];\\n        }\\n\\n        function breakCycle(mod, traced, processed) {\\n            var id = mod.map.id;\\n\\n            if (mod.error) {\\n                mod.emit('error', mod.error);\\n            } else {\\n                traced[id] = true;\\n                each(mod.depMaps, function (depMap, i) {\\n                    var depId = depMap.id,\\n                        dep = getOwn(registry, depId);\\n\\n                    //Only force things that have not completed\\n                    //being defined, so still in the registry,\\n                    //and only if it has not been matched up\\n                    //in the module already.\\n                    if (dep && !mod.depMatched[i] && !processed[depId]) {\\n                        if (getOwn(traced, depId)) {\\n                            mod.defineDep(i, defined[depId]);\\n                            mod.check(); //pass false?\\n                        } else {\\n                            breakCycle(dep, traced, processed);\\n                        }\\n                    }\\n                });\\n                processed[id] = true;\\n            }\\n        }\\n\\n        function checkLoaded() {\\n            var err, usingPathFallback,\\n                waitInterval = config.waitSeconds * 1000,\\n                //It is possible to disable the wait interval by using waitSeconds of 0.\\n                expired = waitInterval && (context.startTime + waitInterval) < new Date().getTime(),\\n                noLoads = [],\\n                reqCalls = [],\\n                stillLoading = false,\\n                needCycleCheck = true;\\n\\n            //Do not bother if this call was a result of a cycle break.\\n            if (inCheckLoaded) {\\n                return;\\n            }\\n\\n            inCheckLoaded = true;\\n\\n            //Figure out the state of all the modules.\\n            eachProp(enabledRegistry, function (mod) {\\n                var map = mod.map,\\n                    modId = map.id;\\n\\n                //Skip things that are not enabled or in error state.\\n                if (!mod.enabled) {\\n                    return;\\n                }\\n\\n                if (!map.isDefine) {\\n                    reqCalls.push(mod);\\n                }\\n\\n                if (!mod.error) {\\n                    //If the module should be executed, and it has not\\n                    //been inited and time is up, remember it.\\n                    if (!mod.inited && expired) {\\n                        if (hasPathFallback(modId)) {\\n                            usingPathFallback = true;\\n                            stillLoading = true;\\n                        } else {\\n                            noLoads.push(modId);\\n                            removeScript(modId);\\n                        }\\n                    } else if (!mod.inited && mod.fetched && map.isDefine) {\\n                        stillLoading = true;\\n                        if (!map.prefix) {\\n                            //No reason to keep looking for unfinished\\n                            //loading. If the only stillLoading is a\\n                            //plugin resource though, keep going,\\n                            //because it may be that a plugin resource\\n                            //is waiting on a non-plugin cycle.\\n                            return (needCycleCheck = false);\\n                        }\\n                    }\\n                }\\n            });\\n\\n            if (expired && noLoads.length) {\\n                //If wait time expired, throw error of unloaded modules.\\n                err = makeError('timeout', 'Load timeout for modules: ' + noLoads, null, noLoads);\\n                err.contextName = context.contextName;\\n                return onError(err);\\n            }\\n\\n            //Not expired, check for a cycle.\\n            if (needCycleCheck) {\\n                each(reqCalls, function (mod) {\\n                    breakCycle(mod, {}, {});\\n                });\\n            }\\n\\n            //If still waiting on loads, and the waiting load is something\\n            //other than a plugin resource, or there are still outstanding\\n            //scripts, then just try back later.\\n            if ((!expired || usingPathFallback) && stillLoading) {\\n                //Something is still waiting to load. Wait for it, but only\\n                //if a timeout is not already in effect.\\n                if ((isBrowser || isWebWorker) && !checkLoadedTimeoutId) {\\n                    checkLoadedTimeoutId = setTimeout(function () {\\n                        checkLoadedTimeoutId = 0;\\n                        checkLoaded();\\n                    }, 50);\\n                }\\n            }\\n\\n            inCheckLoaded = false;\\n        }\\n\\n        Module = function (map) {\\n            this.events = getOwn(undefEvents, map.id) || {};\\n            this.map = map;\\n            this.shim = getOwn(config.shim, map.id);\\n            this.depExports = [];\\n            this.depMaps = [];\\n            this.depMatched = [];\\n            this.pluginMaps = {};\\n            this.depCount = 0;\\n\\n            /* this.exports this.factory\\n               this.depMaps = [],\\n               this.enabled, this.fetched\\n            */\\n        };\\n\\n        Module.prototype = {\\n            init: function (depMaps, factory, errback, options) {\\n                options = options || {};\\n\\n                //Do not do more inits if already done. Can happen if there\\n                //are multiple define calls for the same module. That is not\\n                //a normal, common case, but it is also not unexpected.\\n                if (this.inited) {\\n                    return;\\n                }\\n\\n                this.factory = factory;\\n\\n                if (errback) {\\n                    //Register for errors on this module.\\n                    this.on('error', errback);\\n                } else if (this.events.error) {\\n                    //If no errback already, but there are error listeners\\n                    //on this module, set up an errback to pass to the deps.\\n                    errback = bind(this, function (err) {\\n                        this.emit('error', err);\\n                    });\\n                }\\n\\n                //Do a copy of the dependency array, so that\\n                //source inputs are not modified. For example\\n                //\\\"shim\\\" deps are passed in here directly, and\\n                //doing a direct modification of the depMaps array\\n                //would affect that config.\\n                this.depMaps = depMaps && depMaps.slice(0);\\n\\n                this.errback = errback;\\n\\n                //Indicate this module has be initialized\\n                this.inited = true;\\n\\n                this.ignore = options.ignore;\\n\\n                //Could have option to init this module in enabled mode,\\n                //or could have been previously marked as enabled. However,\\n                //the dependencies are not known until init is called. So\\n                //if enabled previously, now trigger dependencies as enabled.\\n                if (options.enabled || this.enabled) {\\n                    //Enable this module and dependencies.\\n                    //Will call this.check()\\n                    this.enable();\\n                } else {\\n                    this.check();\\n                }\\n            },\\n\\n            defineDep: function (i, depExports) {\\n                //Because of cycles, defined callback for a given\\n                //export can be called more than once.\\n                if (!this.depMatched[i]) {\\n                    this.depMatched[i] = true;\\n                    this.depCount -= 1;\\n                    this.depExports[i] = depExports;\\n                }\\n            },\\n\\n            fetch: function () {\\n                if (this.fetched) {\\n                    return;\\n                }\\n                this.fetched = true;\\n\\n                context.startTime = (new Date()).getTime();\\n\\n                var map = this.map;\\n\\n                //If the manager is for a plugin managed resource,\\n                //ask the plugin to load it now.\\n                if (this.shim) {\\n                    context.makeRequire(this.map, {\\n                        enableBuildCallback: true\\n                    })(this.shim.deps || [], bind(this, function () {\\n                        return map.prefix ? this.callPlugin() : this.load();\\n                    }));\\n                } else {\\n                    //Regular dependency.\\n                    return map.prefix ? this.callPlugin() : this.load();\\n                }\\n            },\\n\\n            load: function () {\\n                var url = this.map.url;\\n\\n                //Regular dependency.\\n                if (!urlFetched[url]) {\\n                    urlFetched[url] = true;\\n                    context.load(this.map.id, url);\\n                }\\n            },\\n\\n            /**\\n             * Checks if the module is ready to define itself, and if so,\\n             * define it.\\n             */\\n            check: function () {\\n                if (!this.enabled || this.enabling) {\\n                    return;\\n                }\\n\\n                var err, cjsModule,\\n                    id = this.map.id,\\n                    depExports = this.depExports,\\n                    exports = this.exports,\\n                    factory = this.factory;\\n\\n                if (!this.inited) {\\n                    // Only fetch if not already in the defQueue.\\n                    if (!hasProp(context.defQueueMap, id)) {\\n                        this.fetch();\\n                    }\\n                } else if (this.error) {\\n                    this.emit('error', this.error);\\n                } else if (!this.defining) {\\n                    //The factory could trigger another require call\\n                    //that would result in checking this module to\\n                    //define itself again. If already in the process\\n                    //of doing that, skip this work.\\n                    this.defining = true;\\n\\n                    if (this.depCount < 1 && !this.defined) {\\n                        if (isFunction(factory)) {\\n                            //If there is an error listener, favor passing\\n                            //to that instead of throwing an error. However,\\n                            //only do it for define()'d  modules. require\\n                            //errbacks should not be called for failures in\\n                            //their callbacks (#699). However if a global\\n                            //onError is set, use that.\\n                            if ((this.events.error && this.map.isDefine) ||\\n                                req.onError !== defaultOnError) {\\n                                try {\\n                                    exports = context.execCb(id, factory, depExports, exports);\\n                                } catch (e) {\\n                                    err = e;\\n                                }\\n                            } else {\\n                                exports = context.execCb(id, factory, depExports, exports);\\n                            }\\n\\n                            // Favor return value over exports. If node/cjs in play,\\n                            // then will not have a return value anyway. Favor\\n                            // module.exports assignment over exports object.\\n                            if (this.map.isDefine && exports === undefined) {\\n                                cjsModule = this.module;\\n                                if (cjsModule) {\\n                                    exports = cjsModule.exports;\\n                                } else if (this.usingExports) {\\n                                    //exports already set the defined value.\\n                                    exports = this.exports;\\n                                }\\n                            }\\n\\n                            if (err) {\\n                                err.requireMap = this.map;\\n                                err.requireModules = this.map.isDefine ? [this.map.id] : null;\\n                                err.requireType = this.map.isDefine ? 'define' : 'require';\\n                                return onError((this.error = err));\\n                            }\\n\\n                        } else {\\n                            //Just a literal value\\n                            exports = factory;\\n                        }\\n\\n                        this.exports = exports;\\n\\n                        if (this.map.isDefine && !this.ignore) {\\n                            defined[id] = exports;\\n\\n                            if (req.onResourceLoad) {\\n                                var resLoadMaps = [];\\n                                each(this.depMaps, function (depMap) {\\n                                    resLoadMaps.push(depMap.normalizedMap || depMap);\\n                                });\\n                                req.onResourceLoad(context, this.map, resLoadMaps);\\n                            }\\n                        }\\n\\n                        //Clean up\\n                        cleanRegistry(id);\\n\\n                        this.defined = true;\\n                    }\\n\\n                    //Finished the define stage. Allow calling check again\\n                    //to allow define notifications below in the case of a\\n                    //cycle.\\n                    this.defining = false;\\n\\n                    if (this.defined && !this.defineEmitted) {\\n                        this.defineEmitted = true;\\n                        this.emit('defined', this.exports);\\n                        this.defineEmitComplete = true;\\n                    }\\n\\n                }\\n            },\\n\\n            callPlugin: function () {\\n                var map = this.map,\\n                    id = map.id,\\n                    //Map already normalized the prefix.\\n                    pluginMap = makeModuleMap(map.prefix);\\n\\n                //Mark this as a dependency for this plugin, so it\\n                //can be traced for cycles.\\n                this.depMaps.push(pluginMap);\\n\\n                on(pluginMap, 'defined', bind(this, function (plugin) {\\n                    var load, normalizedMap, normalizedMod,\\n                        bundleId = getOwn(bundlesMap, this.map.id),\\n                        name = this.map.name,\\n                        parentName = this.map.parentMap ? this.map.parentMap.name : null,\\n                        localRequire = context.makeRequire(map.parentMap, {\\n                            enableBuildCallback: true\\n                        });\\n\\n                    //If current map is not normalized, wait for that\\n                    //normalized name to load instead of continuing.\\n                    if (this.map.unnormalized) {\\n                        //Normalize the ID if the plugin allows it.\\n                        if (plugin.normalize) {\\n                            name = plugin.normalize(name, function (name) {\\n                                return normalize(name, parentName, true);\\n                            }) || '';\\n                        }\\n\\n                        //prefix and name should already be normalized, no need\\n                        //for applying map config again either.\\n                        normalizedMap = makeModuleMap(map.prefix + '!' + name,\\n                                                      this.map.parentMap,\\n                                                      true);\\n                        on(normalizedMap,\\n                            'defined', bind(this, function (value) {\\n                                this.map.normalizedMap = normalizedMap;\\n                                this.init([], function () { return value; }, null, {\\n                                    enabled: true,\\n                                    ignore: true\\n                                });\\n                            }));\\n\\n                        normalizedMod = getOwn(registry, normalizedMap.id);\\n                        if (normalizedMod) {\\n                            //Mark this as a dependency for this plugin, so it\\n                            //can be traced for cycles.\\n                            this.depMaps.push(normalizedMap);\\n\\n                            if (this.events.error) {\\n                                normalizedMod.on('error', bind(this, function (err) {\\n                                    this.emit('error', err);\\n                                }));\\n                            }\\n                            normalizedMod.enable();\\n                        }\\n\\n                        return;\\n                    }\\n\\n                    //If a paths config, then just load that file instead to\\n                    //resolve the plugin, as it is built into that paths layer.\\n                    if (bundleId) {\\n                        this.map.url = context.nameToUrl(bundleId);\\n                        this.load();\\n                        return;\\n                    }\\n\\n                    load = bind(this, function (value) {\\n                        this.init([], function () { return value; }, null, {\\n                            enabled: true\\n                        });\\n                    });\\n\\n                    load.error = bind(this, function (err) {\\n                        this.inited = true;\\n                        this.error = err;\\n                        err.requireModules = [id];\\n\\n                        //Remove temp unnormalized modules for this module,\\n                        //since they will never be resolved otherwise now.\\n                        eachProp(registry, function (mod) {\\n                            if (mod.map.id.indexOf(id + '_unnormalized') === 0) {\\n                                cleanRegistry(mod.map.id);\\n                            }\\n                        });\\n\\n                        onError(err);\\n                    });\\n\\n                    //Allow plugins to load other code without having to know the\\n                    //context or how to 'complete' the load.\\n                    load.fromText = bind(this, function (text, textAlt) {\\n                        /*jslint evil: true */\\n                        var moduleName = map.name,\\n                            moduleMap = makeModuleMap(moduleName),\\n                            hasInteractive = useInteractive;\\n\\n                        //As of 2.1.0, support just passing the text, to reinforce\\n                        //fromText only being called once per resource. Still\\n                        //support old style of passing moduleName but discard\\n                        //that moduleName in favor of the internal ref.\\n                        if (textAlt) {\\n                            text = textAlt;\\n                        }\\n\\n                        //Turn off interactive script matching for IE for any define\\n                        //calls in the text, then turn it back on at the end.\\n                        if (hasInteractive) {\\n                            useInteractive = false;\\n                        }\\n\\n                        //Prime the system by creating a module instance for\\n                        //it.\\n                        getModule(moduleMap);\\n\\n                        //Transfer any config to this other module.\\n                        if (hasProp(config.config, id)) {\\n                            config.config[moduleName] = config.config[id];\\n                        }\\n\\n                        try {\\n                            req.exec(text);\\n                        } catch (e) {\\n                            return onError(makeError('fromtexteval',\\n                                             'fromText eval for ' + id +\\n                                            ' failed: ' + e,\\n                                             e,\\n                                             [id]));\\n                        }\\n\\n                        if (hasInteractive) {\\n                            useInteractive = true;\\n                        }\\n\\n                        //Mark this as a dependency for the plugin\\n                        //resource\\n                        this.depMaps.push(moduleMap);\\n\\n                        //Support anonymous modules.\\n                        context.completeLoad(moduleName);\\n\\n                        //Bind the value of that module to the value for this\\n                        //resource ID.\\n                        localRequire([moduleName], load);\\n                    });\\n\\n                    //Use parentName here since the plugin's name is not reliable,\\n                    //could be some weird string with no path that actually wants to\\n                    //reference the parentName's path.\\n                    plugin.load(map.name, localRequire, load, config);\\n                }));\\n\\n                context.enable(pluginMap, this);\\n                this.pluginMaps[pluginMap.id] = pluginMap;\\n            },\\n\\n            enable: function () {\\n                enabledRegistry[this.map.id] = this;\\n                this.enabled = true;\\n\\n                //Set flag mentioning that the module is enabling,\\n                //so that immediate calls to the defined callbacks\\n                //for dependencies do not trigger inadvertent load\\n                //with the depCount still being zero.\\n                this.enabling = true;\\n\\n                //Enable each dependency\\n                each(this.depMaps, bind(this, function (depMap, i) {\\n                    var id, mod, handler;\\n\\n                    if (typeof depMap === 'string') {\\n                        //Dependency needs to be converted to a depMap\\n                        //and wired up to this module.\\n                        depMap = makeModuleMap(depMap,\\n                                               (this.map.isDefine ? this.map : this.map.parentMap),\\n                                               false,\\n                                               !this.skipMap);\\n                        this.depMaps[i] = depMap;\\n\\n                        handler = getOwn(handlers, depMap.id);\\n\\n                        if (handler) {\\n                            this.depExports[i] = handler(this);\\n                            return;\\n                        }\\n\\n                        this.depCount += 1;\\n\\n                        on(depMap, 'defined', bind(this, function (depExports) {\\n                            if (this.undefed) {\\n                                return;\\n                            }\\n                            this.defineDep(i, depExports);\\n                            this.check();\\n                        }));\\n\\n                        if (this.errback) {\\n                            on(depMap, 'error', bind(this, this.errback));\\n                        } else if (this.events.error) {\\n                            // No direct errback on this module, but something\\n                            // else is listening for errors, so be sure to\\n                            // propagate the error correctly.\\n                            on(depMap, 'error', bind(this, function(err) {\\n                                this.emit('error', err);\\n                            }));\\n                        }\\n                    }\\n\\n                    id = depMap.id;\\n                    mod = registry[id];\\n\\n                    //Skip special modules like 'require', 'exports', 'module'\\n                    //Also, don't call enable if it is already enabled,\\n                    //important in circular dependency cases.\\n                    if (!hasProp(handlers, id) && mod && !mod.enabled) {\\n                        context.enable(depMap, this);\\n                    }\\n                }));\\n\\n                //Enable each plugin that is used in\\n                //a dependency\\n                eachProp(this.pluginMaps, bind(this, function (pluginMap) {\\n                    var mod = getOwn(registry, pluginMap.id);\\n                    if (mod && !mod.enabled) {\\n                        context.enable(pluginMap, this);\\n                    }\\n                }));\\n\\n                this.enabling = false;\\n\\n                this.check();\\n            },\\n\\n            on: function (name, cb) {\\n                var cbs = this.events[name];\\n                if (!cbs) {\\n                    cbs = this.events[name] = [];\\n                }\\n                cbs.push(cb);\\n            },\\n\\n            emit: function (name, evt) {\\n                each(this.events[name], function (cb) {\\n                    cb(evt);\\n                });\\n                if (name === 'error') {\\n                    //Now that the error handler was triggered, remove\\n                    //the listeners, since this broken Module instance\\n                    //can stay around for a while in the registry.\\n                    delete this.events[name];\\n                }\\n            }\\n        };\\n\\n        function callGetModule(args) {\\n            //Skip modules already defined.\\n            if (!hasProp(defined, args[0])) {\\n                getModule(makeModuleMap(args[0], null, true)).init(args[1], args[2]);\\n            }\\n        }\\n\\n        function removeListener(node, func, name, ieName) {\\n            //Favor detachEvent because of IE9\\n            //issue, see attachEvent/addEventListener comment elsewhere\\n            //in this file.\\n            if (node.detachEvent && !isOpera) {\\n                //Probably IE. If not it will throw an error, which will be\\n                //useful to know.\\n                if (ieName) {\\n                    node.detachEvent(ieName, func);\\n                }\\n            } else {\\n                node.removeEventListener(name, func, false);\\n            }\\n        }\\n\\n        /**\\n         * Given an event from a script node, get the requirejs info from it,\\n         * and then removes the event listeners on the node.\\n         * @param {Event} evt\\n         * @returns {Object}\\n         */\\n        function getScriptData(evt) {\\n            //Using currentTarget instead of target for Firefox 2.0's sake. Not\\n            //all old browsers will be supported, but this one was easy enough\\n            //to support and still makes sense.\\n            var node = evt.currentTarget || evt.srcElement;\\n\\n            //Remove the listeners once here.\\n            // removeListener(node, context.onScriptLoad, 'load', 'onreadystatechange');\\n            // removeListener(node, context.onScriptError, 'error');\\n\\n            return {\\n                node: node,\\n                id: node && node.getAttribute('data-requiremodule')\\n            };\\n        }\\n\\n        function intakeDefines() {\\n            var args;\\n\\n            //Any defined modules in the global queue, intake them now.\\n            takeGlobalQueue();\\n\\n            //Make sure any remaining defQueue items get properly processed.\\n            while (defQueue.length) {\\n                args = defQueue.shift();\\n                if (args[0] === null) {\\n                    return onError(makeError('mismatch', 'Mismatched anonymous define() module: ' +\\n                        args[args.length - 1]));\\n                } else {\\n                    //args are id, deps, factory. Should be normalized by the\\n                    //define() function.\\n                    callGetModule(args);\\n                }\\n            }\\n            context.defQueueMap = {};\\n        }\\n\\n        context = {\\n            config: config,\\n            contextName: contextName,\\n            registry: registry,\\n            defined: defined,\\n            urlFetched: urlFetched,\\n            defQueue: defQueue,\\n            defQueueMap: {},\\n            Module: Module,\\n            makeModuleMap: makeModuleMap,\\n            nextTick: req.nextTick,\\n            onError: onError,\\n\\n            /**\\n             * Set a configuration for the context.\\n             * @param {Object} cfg config object to integrate.\\n             */\\n            configure: function (cfg) {\\n                //Make sure the baseUrl ends in a slash.\\n                if (cfg.baseUrl) {\\n                    if (cfg.baseUrl.charAt(cfg.baseUrl.length - 1) !== '/') {\\n                        cfg.baseUrl += '/';\\n                    }\\n                }\\n\\n                // Convert old style urlArgs string to a function.\\n                if (typeof cfg.urlArgs === 'string') {\\n                    var urlArgs = cfg.urlArgs;\\n                    cfg.urlArgs = function(id, url) {\\n                        return (url.indexOf('?') === -1 ? '?' : '&') + urlArgs;\\n                    };\\n                }\\n\\n                //Save off the paths since they require special processing,\\n                //they are additive.\\n                var shim = config.shim,\\n                    objs = {\\n                        paths: true,\\n                        bundles: true,\\n                        config: true,\\n                        map: true\\n                    };\\n\\n                eachProp(cfg, function (value, prop) {\\n                    if (objs[prop]) {\\n                        if (!config[prop]) {\\n                            config[prop] = {};\\n                        }\\n                        mixin(config[prop], value, true, true);\\n                    } else {\\n                        config[prop] = value;\\n                    }\\n                });\\n\\n                //Reverse map the bundles\\n                if (cfg.bundles) {\\n                    eachProp(cfg.bundles, function (value, prop) {\\n                        each(value, function (v) {\\n                            if (v !== prop) {\\n                                bundlesMap[v] = prop;\\n                            }\\n                        });\\n                    });\\n                }\\n\\n                //Merge shim\\n                if (cfg.shim) {\\n                    eachProp(cfg.shim, function (value, id) {\\n                        //Normalize the structure\\n                        if (isArray(value)) {\\n                            value = {\\n                                deps: value\\n                            };\\n                        }\\n                        if ((value.exports || value.init) && !value.exportsFn) {\\n                            value.exportsFn = context.makeShimExports(value);\\n                        }\\n                        shim[id] = value;\\n                    });\\n                    config.shim = shim;\\n                }\\n\\n                //Adjust packages if necessary.\\n                if (cfg.packages) {\\n                    each(cfg.packages, function (pkgObj) {\\n                        var location, name;\\n\\n                        pkgObj = typeof pkgObj === 'string' ? {name: pkgObj} : pkgObj;\\n\\n                        name = pkgObj.name;\\n                        location = pkgObj.location;\\n                        if (location) {\\n                            config.paths[name] = pkgObj.location;\\n                        }\\n\\n                        //Save pointer to main module ID for pkg name.\\n                        //Remove leading dot in main, so main paths are normalized,\\n                        //and remove any trailing .js, since different package\\n                        //envs have different conventions: some use a module name,\\n                        //some use a file name.\\n                        config.pkgs[name] = pkgObj.name + '/' + (pkgObj.main || 'main')\\n                                     .replace(currDirRegExp, '')\\n                                     .replace(jsSuffixRegExp, '');\\n                    });\\n                }\\n\\n                //If there are any \\\"waiting to execute\\\" modules in the registry,\\n                //update the maps for them, since their info, like URLs to load,\\n                //may have changed.\\n                eachProp(registry, function (mod, id) {\\n                    //If module already has init called, since it is too\\n                    //late to modify them, and ignore unnormalized ones\\n                    //since they are transient.\\n                    if (!mod.inited && !mod.map.unnormalized) {\\n                        mod.map = makeModuleMap(id, null, true);\\n                    }\\n                });\\n\\n                //If a deps array or a config callback is specified, then call\\n                //require with those args. This is useful when require is defined as a\\n                //config object before require.js is loaded.\\n                if (cfg.deps || cfg.callback) {\\n                    context.require(cfg.deps || [], cfg.callback);\\n                }\\n            },\\n\\n            makeShimExports: function (value) {\\n                function fn() {\\n                    var ret;\\n                    if (value.init) {\\n                        ret = value.init.apply(global, arguments);\\n                    }\\n                    return ret || (value.exports && getGlobal(value.exports));\\n                }\\n                return fn;\\n            },\\n\\n            makeRequire: function (relMap, options) {\\n                options = options || {};\\n\\n                function localRequire(deps, callback, errback) {\\n                    var id, map, requireMod;\\n\\n                    if (options.enableBuildCallback && callback && isFunction(callback)) {\\n                        callback.__requireJsBuild = true;\\n                    }\\n\\n                    if (typeof deps === 'string') {\\n                        if (isFunction(callback)) {\\n                            //Invalid call\\n                            return onError(makeError('requireargs', 'Invalid require call'), errback);\\n                        }\\n\\n                        //If require|exports|module are requested, get the\\n                        //value for them from the special handlers. Caveat:\\n                        //this only works while module is being defined.\\n                        if (relMap && hasProp(handlers, deps)) {\\n                            return handlers[deps](registry[relMap.id]);\\n                        }\\n\\n                        //Synchronous access to one module. If require.get is\\n                        //available (as in the Node adapter), prefer that.\\n                        if (req.get) {\\n                            return req.get(context, deps, relMap, localRequire);\\n                        }\\n\\n                        //Normalize module name, if it contains . or ..\\n                        map = makeModuleMap(deps, relMap, false, true);\\n                        id = map.id;\\n\\n                        if (!hasProp(defined, id)) {\\n                            return onError(makeError('notloaded', 'Module name \\\"' +\\n                                        id +\\n                                        '\\\" has not been loaded yet for context: ' +\\n                                        contextName +\\n                                        (relMap ? '' : '. Use require([])')));\\n                        }\\n                        return defined[id];\\n                    }\\n\\n                    //Grab defines waiting in the global queue.\\n                    intakeDefines();\\n\\n                    //Mark all the dependencies as needing to be loaded.\\n                    context.nextTick(function () {\\n                        //Some defines could have been added since the\\n                        //require call, collect them.\\n                        intakeDefines();\\n\\n                        requireMod = getModule(makeModuleMap(null, relMap));\\n\\n                        //Store if map config should be applied to this require\\n                        //call for dependencies.\\n                        requireMod.skipMap = options.skipMap;\\n\\n                        requireMod.init(deps, callback, errback, {\\n                            enabled: true\\n                        });\\n\\n                        checkLoaded();\\n                    });\\n\\n                    return localRequire;\\n                }\\n\\n                mixin(localRequire, {\\n                    isBrowser: isBrowser,\\n\\n                    /**\\n                     * Converts a module name + .extension into an URL path.\\n                     * *Requires* the use of a module name. It does not support using\\n                     * plain URLs like nameToUrl.\\n                     */\\n                    toUrl: function (moduleNamePlusExt) {\\n                        var ext,\\n                            index = moduleNamePlusExt.lastIndexOf('.'),\\n                            segment = moduleNamePlusExt.split('/')[0],\\n                            isRelative = segment === '.' || segment === '..';\\n\\n                        //Have a file extension alias, and it is not the\\n                        //dots from a relative path.\\n                        if (index !== -1 && (!isRelative || index > 1)) {\\n                            ext = moduleNamePlusExt.substring(index, moduleNamePlusExt.length);\\n                            moduleNamePlusExt = moduleNamePlusExt.substring(0, index);\\n                        }\\n\\n                        return context.nameToUrl(normalize(moduleNamePlusExt,\\n                                                relMap && relMap.id, true), ext,  true);\\n                    },\\n\\n                    defined: function (id) {\\n                        return hasProp(defined, makeModuleMap(id, relMap, false, true).id);\\n                    },\\n\\n                    specified: function (id) {\\n                        id = makeModuleMap(id, relMap, false, true).id;\\n                        return hasProp(defined, id) || hasProp(registry, id);\\n                    }\\n                });\\n\\n                //Only allow undef on top level require calls\\n                if (!relMap) {\\n                    localRequire.undef = function (id) {\\n                        //Bind any waiting define() calls to this context,\\n                        //fix for #408\\n                        takeGlobalQueue();\\n\\n                        var map = makeModuleMap(id, relMap, true),\\n                            mod = getOwn(registry, id);\\n\\n                        mod.undefed = true;\\n                        removeScript(id);\\n\\n                        delete defined[id];\\n                        delete urlFetched[map.url];\\n                        delete undefEvents[id];\\n\\n                        //Clean queued defines too. Go backwards\\n                        //in array so that the splices do not\\n                        //mess up the iteration.\\n                        eachReverse(defQueue, function(args, i) {\\n                            if (args[0] === id) {\\n                                defQueue.splice(i, 1);\\n                            }\\n                        });\\n                        delete context.defQueueMap[id];\\n\\n                        if (mod) {\\n                            //Hold on to listeners in case the\\n                            //module will be attempted to be reloaded\\n                            //using a different config.\\n                            if (mod.events.defined) {\\n                                undefEvents[id] = mod.events;\\n                            }\\n\\n                            cleanRegistry(id);\\n                        }\\n                    };\\n                }\\n\\n                return localRequire;\\n            },\\n\\n            /**\\n             * Called to enable a module if it is still in the registry\\n             * awaiting enablement. A second arg, parent, the parent module,\\n             * is passed in for context, when this method is overridden by\\n             * the optimizer. Not shown here to keep code compact.\\n             */\\n            enable: function (depMap) {\\n                var mod = getOwn(registry, depMap.id);\\n                if (mod) {\\n                    getModule(depMap).enable();\\n                }\\n            },\\n\\n            /**\\n             * Internal method used by environment adapters to complete a load event.\\n             * A load event could be a script load or just a load pass from a synchronous\\n             * load call.\\n             * @param {String} moduleName the name of the module to potentially complete.\\n             */\\n            completeLoad: function (moduleName) {\\n                var found, args, mod,\\n                    shim = getOwn(config.shim, moduleName) || {},\\n                    shExports = shim.exports;\\n\\n                takeGlobalQueue();\\n\\n                while (defQueue.length) {\\n                    args = defQueue.shift();\\n                    if (args[0] === null) {\\n                        args[0] = moduleName;\\n                        //If already found an anonymous module and bound it\\n                        //to this name, then this is some other anon module\\n                        //waiting for its completeLoad to fire.\\n                        if (found) {\\n                            break;\\n                        }\\n                        found = true;\\n                    } else if (args[0] === moduleName) {\\n                        //Found matching define call for this script!\\n                        found = true;\\n                    }\\n\\n                    callGetModule(args);\\n                }\\n                context.defQueueMap = {};\\n\\n                //Do this after the cycle of callGetModule in case the result\\n                //of those calls/init calls changes the registry.\\n                mod = getOwn(registry, moduleName);\\n\\n                if (!found && !hasProp(defined, moduleName) && mod && !mod.inited) {\\n                    if (config.enforceDefine && (!shExports || !getGlobal(shExports))) {\\n                        if (hasPathFallback(moduleName)) {\\n                            return;\\n                        } else {\\n                            return onError(makeError('nodefine',\\n                                             'No define call for ' + moduleName,\\n                                             null,\\n                                             [moduleName]));\\n                        }\\n                    } else {\\n                        //A script that does not call define(), so just simulate\\n                        //the call for it.\\n                        callGetModule([moduleName, (shim.deps || []), shim.exportsFn]);\\n                    }\\n                }\\n\\n                checkLoaded();\\n            },\\n\\n            /**\\n             * Converts a module name to a file path. Supports cases where\\n             * moduleName may actually be just an URL.\\n             * Note that it **does not** call normalize on the moduleName,\\n             * it is assumed to have already been normalized. This is an\\n             * internal API, not a public one. Use toUrl for the public API.\\n             */\\n            nameToUrl: function (moduleName, ext, skipExt) {\\n                var paths, syms, i, parentModule, url,\\n                    parentPath, bundleId,\\n                    pkgMain = getOwn(config.pkgs, moduleName);\\n\\n                if (pkgMain) {\\n                    moduleName = pkgMain;\\n                }\\n\\n                bundleId = getOwn(bundlesMap, moduleName);\\n\\n                if (bundleId) {\\n                    return context.nameToUrl(bundleId, ext, skipExt);\\n                }\\n\\n                //If a colon is in the URL, it indicates a protocol is used and it is just\\n                //an URL to a file, or if it starts with a slash, contains a query arg (i.e. ?)\\n                //or ends with .js, then assume the user meant to use an url and not a module id.\\n                //The slash is important for protocol-less URLs as well as full paths.\\n                if (req.jsExtRegExp.test(moduleName)) {\\n                    //Just a plain path, not module name lookup, so just return it.\\n                    //Add extension if it is included. This is a bit wonky, only non-.js things pass\\n                    //an extension, this method probably needs to be reworked.\\n                    url = moduleName + (ext || '');\\n                } else {\\n                    //A module that needs to be converted to a path.\\n                    paths = config.paths;\\n\\n                    syms = moduleName.split('/');\\n                    //For each module name segment, see if there is a path\\n                    //registered for it. Start with most specific name\\n                    //and work up from it.\\n                    for (i = syms.length; i > 0; i -= 1) {\\n                        parentModule = syms.slice(0, i).join('/');\\n\\n                        parentPath = getOwn(paths, parentModule);\\n                        if (parentPath) {\\n                            //If an array, it means there are a few choices,\\n                            //Choose the one that is desired\\n                            if (isArray(parentPath)) {\\n                                parentPath = parentPath[0];\\n                            }\\n                            syms.splice(0, i, parentPath);\\n                            break;\\n                        }\\n                    }\\n\\n                    //Join the path parts together, then figure out if baseUrl is needed.\\n                    url = syms.join('/');\\n                    url += (ext || (/^data\\\\:|^blob\\\\:|\\\\?/.test(url) || skipExt ? '' : '.js'));\\n                    url = (url.charAt(0) === '/' || url.match(/^[\\\\w\\\\+\\\\.\\\\-]+:/) ? '' : config.baseUrl) + url;\\n                }\\n\\n                return config.urlArgs && !/^blob\\\\:/.test(url) ?\\n                       url + config.urlArgs(moduleName, url) : url;\\n            },\\n\\n            //Delegates to req.load. Broken out as a separate function to\\n            //allow overriding in the optimizer.\\n            load: function (id, url) {\\n                req.load(context, id, url);\\n            },\\n\\n            /**\\n             * Executes a module callback function. Broken out as a separate function\\n             * solely to allow the build system to sequence the files in the built\\n             * layer in the right sequence.\\n             *\\n             * @private\\n             */\\n            execCb: function (name, callback, args, exports) {\\n                return callback.apply(exports, args);\\n            },\\n\\n            /**\\n             * callback for script loads, used to check status of loading.\\n             *\\n             * @param {Event} evt the event from the browser for the script\\n             * that was loaded.\\n             */\\n            onScriptLoad: function (evt) {\\n                //Using currentTarget instead of target for Firefox 2.0's sake. Not\\n                //all old browsers will be supported, but this one was easy enough\\n                //to support and still makes sense.\\n                if (evt.type === 'load' ||\\n                        (readyRegExp.test((evt.currentTarget || evt.srcElement).readyState))) {\\n                    //Reset interactive script so a script node is not held onto for\\n                    //to long.\\n                    interactiveScript = null;\\n\\n                    //Pull out the name of the module and the context.\\n                    var data = getScriptData(evt);\\n                    context.completeLoad(data.id);\\n                }\\n            },\\n\\n            /**\\n             * Callback for script errors.\\n             */\\n            onScriptError: function (evt) {\\n                var data = getScriptData(evt);\\n                if (!hasPathFallback(data.id)) {\\n                    var parents = [];\\n                    eachProp(registry, function(value, key) {\\n                        if (key.indexOf('_@r') !== 0) {\\n                            each(value.depMaps, function(depMap) {\\n                                if (depMap.id === data.id) {\\n                                    parents.push(key);\\n                                    return true;\\n                                }\\n                            });\\n                        }\\n                    });\\n                    return onError(makeError('scripterror', 'Script error for \\\"' + data.id +\\n                                             (parents.length ?\\n                                             '\\\", needed by: ' + parents.join(', ') :\\n                                             '\\\"'), evt, [data.id]));\\n                }\\n            }\\n        };\\n\\n        context.require = context.makeRequire();\\n        return context;\\n    }\\n\\n    /**\\n     * Main entry point.\\n     *\\n     * If the only argument to require is a string, then the module that\\n     * is represented by that string is fetched for the appropriate context.\\n     *\\n     * If the first argument is an array, then it will be treated as an array\\n     * of dependency string names to fetch. An optional function callback can\\n     * be specified to execute when all of those dependencies are available.\\n     *\\n     * Make a local req variable to help Caja compliance (it assumes things\\n     * on a require that are not standardized), and to give a short\\n     * name for minification/local scope use.\\n     */\\n    req = requirejs = function (deps, callback, errback, optional) {\\n\\n        //Find the right context, use default\\n        var context, config,\\n            contextName = defContextName;\\n\\n        // Determine if have config object in the call.\\n        if (!isArray(deps) && typeof deps !== 'string') {\\n            // deps is a config object\\n            config = deps;\\n            if (isArray(callback)) {\\n                // Adjust args if there are dependencies\\n                deps = callback;\\n                callback = errback;\\n                errback = optional;\\n            } else {\\n                deps = [];\\n            }\\n        }\\n\\n        if (config && config.context) {\\n            contextName = config.context;\\n        }\\n\\n        context = getOwn(contexts, contextName);\\n        if (!context) {\\n            context = contexts[contextName] = req.s.newContext(contextName);\\n        }\\n\\n        if (config) {\\n            context.configure(config);\\n        }\\n\\n        return context.require(deps, callback, errback);\\n    };\\n\\n    /**\\n     * Support require.config() to make it easier to cooperate with other\\n     * AMD loaders on globally agreed names.\\n     */\\n    req.config = function (config) {\\n        return req(config);\\n    };\\n\\n    /**\\n     * Execute something after the current tick\\n     * of the event loop. Override for other envs\\n     * that have a better solution than setTimeout.\\n     * @param  {Function} fn function to execute later.\\n     */\\n    req.nextTick = typeof setTimeout !== 'undefined' ? function (fn) {\\n        setTimeout(fn, 4);\\n    } : function (fn) { fn(); };\\n\\n    /**\\n     * Export require as a global, but only if it does not already exist.\\n     */\\n    if (!requireJSRequire) {\\n        requireJSRequire = req;\\n    }\\n\\n    req.version = version;\\n\\n    //Used to filter out dependencies that are already paths.\\n    req.jsExtRegExp = /^\\\\/|:|\\\\?|\\\\.js$/;\\n    req.isBrowser = isBrowser;\\n    s = req.s = {\\n        contexts: contexts,\\n        newContext: newContext\\n    };\\n\\n    //Create default context.\\n    req({});\\n\\n    //Exports some context-sensitive methods on global require.\\n    each([\\n        'toUrl',\\n        'undef',\\n        'defined',\\n        'specified'\\n    ], function (prop) {\\n        //Reference from contexts instead of early binding to default context,\\n        //so that during builds, the latest instance of the default context\\n        //with its config gets used.\\n        req[prop] = function () {\\n            var ctx = contexts[defContextName];\\n            return ctx.require[prop].apply(ctx, arguments);\\n        };\\n    });\\n\\n    if (isBrowser) {\\n        head = s.head = document.getElementsByTagName('head')[0];\\n        //If BASE tag is in play, using appendChild is a problem for IE6.\\n        //When that browser dies, this can be removed. Details in this jQuery bug:\\n        //http://dev.jquery.com/ticket/2709\\n        baseElement = document.getElementsByTagName('base')[0];\\n        if (baseElement) {\\n            head = s.head = baseElement.parentNode;\\n        }\\n    }\\n\\n    /**\\n     * Any errors that require explicitly generates will be passed to this\\n     * function. Intercept/override it if you want custom error handling.\\n     * @param {Error} err the error object.\\n     */\\n    req.onError = defaultOnError;\\n\\n    /**\\n     * Creates the node for the load command. Only used in browser envs.\\n     */\\n    req.createNode = function (config, moduleName, url) {\\n        var node = config.xhtml ?\\n                document.createElementNS('http://www.w3.org/1999/xhtml', 'html:script') :\\n                document.createElement('script');\\n        node.type = config.scriptType || 'text/javascript';\\n        node.charset = 'utf-8';\\n        node.async = true;\\n        return node;\\n    };\\n\\n    /**\\n     * Does the request to load a module for the browser case.\\n     * Make this a separate function to allow other environments\\n     * to override it.\\n     *\\n     * @param {Object} context the require context to find state.\\n     * @param {String} moduleName the name of the module.\\n     * @param {Object} url the URL to the module.\\n     */\\n    req.load = function (context, moduleName, url) {\\n        var config = (context && context.config) || {},\\n            node;\\n        if (isBrowser) {\\n            //In the browser so use a script tag\\n            node = req.createNode(config, moduleName, url);\\n\\n            node.setAttribute('data-requirecontext', context.contextName);\\n            node.setAttribute('data-requiremodule', moduleName);\\n\\n            //Set up load listener. Test attachEvent first because IE9 has\\n            //a subtle issue in its addEventListener and script onload firings\\n            //that do not match the behavior of all other browsers with\\n            //addEventListener support, which fire the onload event for a\\n            //script right after the script execution. See:\\n            //https://connect.microsoft.com/IE/feedback/details/648057/script-onload-event-is-not-fired-immediately-after-script-execution\\n            //UNFORTUNATELY Opera implements attachEvent but does not follow the script\\n            //script execution mode.\\n            if (node.attachEvent &&\\n                    //Check if node.attachEvent is artificially added by custom script or\\n                    //natively supported by browser\\n                    //read https://github.com/requirejs/requirejs/issues/187\\n                    //if we can NOT find [native code] then it must NOT natively supported.\\n                    //in IE8, node.attachEvent does not have toString()\\n                    //Note the test for \\\"[native code\\\" with no closing brace, see:\\n                    //https://github.com/requirejs/requirejs/issues/273\\n                    !(node.attachEvent.toString && node.attachEvent.toString().indexOf('[native code') < 0) &&\\n                    !isOpera) {\\n                //Probably IE. IE (at least 6-8) do not fire\\n                //script onload right after executing the script, so\\n                //we cannot tie the anonymous define call to a name.\\n                //However, IE reports the script as being in 'interactive'\\n                //readyState at the time of the define call.\\n                useInteractive = true;\\n\\n                node.attachEvent('onreadystatechange', context.onScriptLoad);\\n                //It would be great to add an error handler here to catch\\n                //404s in IE9+. However, onreadystatechange will fire before\\n                //the error handler, so that does not help. If addEventListener\\n                //is used, then IE will fire error before load, but we cannot\\n                //use that pathway given the connect.microsoft.com issue\\n                //mentioned above about not doing the 'script execute,\\n                //then fire the script load event listener before execute\\n                //next script' that other browsers do.\\n                //Best hope: IE10 fixes the issues,\\n                //and then destroys all installs of IE 6-9.\\n                //node.attachEvent('onerror', context.onScriptError);\\n            } else {\\n                node.addEventListener('load', context.onScriptLoad, false);\\n                node.addEventListener('error', context.onScriptError, false);\\n            }\\n            node.src = url;\\n\\n            //Calling onNodeCreated after all properties on the node have been\\n            //set, but before it is placed in the DOM.\\n            if (config.onNodeCreated) {\\n                config.onNodeCreated(node, config, moduleName, url);\\n            }\\n\\n            //For some cache cases in IE 6-8, the script executes before the end\\n            //of the appendChild execution, so to tie an anonymous define\\n            //call to the module name (which is stored on the node), hold on\\n            //to a reference to this node, but clear after the DOM insertion.\\n            currentlyAddingScript = node;\\n            if (baseElement) {\\n                // head.insertBefore(node, baseElement);\\n            } else {\\n                // head.appendChild(node);\\n            }\\n            currentlyAddingScript = null;\\n\\n            context.onScriptLoad({ type: 'load' })\\n\\n            return node;\\n        } else if (isWebWorker) {\\n            try {\\n                //In a web worker, use importScripts. This is not a very\\n                //efficient use of importScripts, importScripts will block until\\n                //its script is downloaded and evaluated. However, if web workers\\n                //are in play, the expectation is that a build has been done so\\n                //that only one script needs to be loaded anyway. This may need\\n                //to be reevaluated if other use cases become common.\\n\\n                // Post a task to the event loop to work around a bug in WebKit\\n                // where the worker gets garbage-collected after calling\\n                // importScripts(): https://webkit.org/b/153317\\n                setTimeout(function() {}, 0);\\n                importScripts(url);\\n\\n                //Account for anonymous modules\\n                context.completeLoad(moduleName);\\n            } catch (e) {\\n                context.onError(makeError('importscripts',\\n                                'importScripts failed for ' +\\n                                    moduleName + ' at ' + url,\\n                                e,\\n                                [moduleName]));\\n            }\\n        }\\n    };\\n\\n    function getInteractiveScript() {\\n        if (interactiveScript && interactiveScript.readyState === 'interactive') {\\n            return interactiveScript;\\n        }\\n\\n        eachReverse(scripts(), function (script) {\\n            if (script.readyState === 'interactive') {\\n                return (interactiveScript = script);\\n            }\\n        });\\n        return interactiveScript;\\n    }\\n\\n    //Look for a data-main script attribute, which could also adjust the baseUrl.\\n    if (isBrowser && !cfg.skipDataMain) {\\n        //Figure out baseUrl. Get it from the script tag with require.js in it.\\n        eachReverse(scripts(), function (script) {\\n            //Set the 'head' where we can append children by\\n            //using the script's parent.\\n            if (!head) {\\n                head = script.parentNode;\\n            }\\n\\n            //Look for a data-main attribute to set main script for the page\\n            //to load. If it is there, the path to data main becomes the\\n            //baseUrl, if it is not already set.\\n            dataMain = script.getAttribute('data-main');\\n            if (dataMain) {\\n                //Preserve dataMain in case it is a path (i.e. contains '?')\\n                mainScript = dataMain;\\n\\n                //Set final baseUrl if there is not already an explicit one,\\n                //but only do so if the data-main value is not a loader plugin\\n                //module ID.\\n                if (!cfg.baseUrl && mainScript.indexOf('!') === -1) {\\n                    //Pull off the directory of data-main for use as the\\n                    //baseUrl.\\n                    src = mainScript.split('/');\\n                    mainScript = src.pop();\\n                    subPath = src.length ? src.join('/')  + '/' : './';\\n\\n                    cfg.baseUrl = subPath;\\n                }\\n\\n                //Strip off any trailing .js since mainScript is now\\n                //like a module name.\\n                mainScript = mainScript.replace(jsSuffixRegExp, '');\\n\\n                //If mainScript is still a path, fall back to dataMain\\n                if (req.jsExtRegExp.test(mainScript)) {\\n                    mainScript = dataMain;\\n                }\\n\\n                //Put the data-main script in the files to load.\\n                cfg.deps = cfg.deps ? cfg.deps.concat(mainScript) : [mainScript];\\n\\n                return true;\\n            }\\n        });\\n    }\\n\\n    /**\\n     * The function that handles definitions of modules. Differs from\\n     * require() in that a string for the module should be the first argument,\\n     * and the function to execute after dependencies are loaded should\\n     * return a value to define the module corresponding to the first argument's\\n     * name.\\n     */\\n    define = function (name, deps, callback) {\\n        var node, context;\\n\\n        //Allow for anonymous modules\\n        if (typeof name !== 'string') {\\n            //Adjust args appropriately\\n            callback = deps;\\n            deps = name;\\n            name = null;\\n        }\\n\\n        //This module may not have dependencies\\n        if (!isArray(deps)) {\\n            callback = deps;\\n            deps = null;\\n        }\\n\\n        //If no name, and callback is a function, then figure out if it a\\n        //CommonJS thing with dependencies.\\n        if (!deps && isFunction(callback)) {\\n            deps = [];\\n            //Remove comments from the callback string,\\n            //look for require calls, and pull them into the dependencies,\\n            //but only if there are function args.\\n            if (callback.length) {\\n                callback\\n                    .toString()\\n                    .replace(commentRegExp, commentReplace)\\n                    .replace(cjsRequireRegExp, function (match, dep) {\\n                        deps.push(dep);\\n                    });\\n\\n                //May be a CommonJS thing even without require calls, but still\\n                //could use exports, and module. Avoid doing exports and module\\n                //work though if it just needs require.\\n                //REQUIRES the function to expect the CommonJS variables in the\\n                //order listed below.\\n                deps = (callback.length === 1 ? ['require'] : ['require', 'exports', 'module']).concat(deps);\\n            }\\n        }\\n\\n        //If in IE 6-8 and hit an anonymous define() call, do the interactive\\n        //work.\\n        if (useInteractive) {\\n            node = currentlyAddingScript || getInteractiveScript();\\n            if (node) {\\n                if (!name) {\\n                    name = node.getAttribute('data-requiremodule');\\n                }\\n                context = contexts[node.getAttribute('data-requirecontext')];\\n            }\\n        }\\n\\n        //Always save off evaluating the def call until the script onload handler.\\n        //This allows multiple modules to be in a file without prematurely\\n        //tracing dependencies, and allows for anonymous module support,\\n        //where the module name is not known until the script onload event\\n        //occurs. If no context, use the global queue, and get it processed\\n        //in the onscript load callback.\\n        if (context) {\\n            context.defQueue.push([name, deps, callback]);\\n            context.defQueueMap[name] = true;\\n        } else {\\n            globalDefQueue.push([name, deps, callback]);\\n        }\\n    };\\n\\n    define.amd = {\\n        jQuery: true\\n    };\\n\\n    /**\\n     * Executes the text. Normally just uses eval, but can be modified\\n     * to use a better, environment-specific call. Only used for transpiling\\n     * loader plugins, not for plain JS modules.\\n     * @param {String} text the text to execute/evaluate.\\n     */\\n    req.exec = function (text) {\\n        /*jslint evil: true */\\n        return eval(text);\\n    };\\n\\n    //Set up with config info.\\n    req(cfg);\\n}(this, (typeof setTimeout === 'undefined' ? undefined : setTimeout)));\\n\\n  function OMG_TvwRIDZZiwqMqqPRrAYIPpFa () {\\n    var self = this;\\n    \\n\\n\\n\\n(function (global, factory) {\\n  if (typeof define === \\\"function\\\" && define.amd) {\\n    define(\\\"@/style.css\\\", [\\\"exports\\\"], factory);\\n  } else if (typeof exports !== \\\"undefined\\\") {\\n    factory(exports);\\n  } else {\\n    var mod = {\\n      exports: {}\\n    };\\n    factory(mod.exports);\\n    global.styleCss = mod.exports;\\n  }\\n})(this, function (exports) {\\n  \\\"use strict\\\";\\n\\n  Object.defineProperty(exports, \\\"__esModule\\\", {\\n    value: true\\n  });\\n  var css = \\\"html, body {\\\\n  width: 100%;\\\\n  height: 100%;\\\\n  margin: 0px;\\\\n  padding: 0px;\\\\n}\\\\nhtml, body, #app {\\\\n  box-sizing: border-box;\\\\n  width: 100%;\\\\n  height: 100%;\\\\n  overflow: hidden;\\\\n}\\\\n.full{\\\\n  width: 100%;\\\\n  height: 100%;\\\\n}\\\";\\n  var head = document.head || document.getElementsByTagName('head')[0];\\n  var style = document.createElement('style');\\n  style.type = 'text/css';\\n\\n  if (style.styleSheet) {\\n    style.styleSheet.cssText = css;\\n  } else {\\n    style.appendChild(document.createTextNode(css));\\n  }\\n\\n  head.appendChild(style);\\n  exports.default = \\\"html, body {\\\\n  width: 100%;\\\\n  height: 100%;\\\\n  margin: 0px;\\\\n  padding: 0px;\\\\n}\\\\nhtml, body, #app {\\\\n  box-sizing: border-box;\\\\n  width: 100%;\\\\n  height: 100%;\\\\n  overflow: hidden;\\\\n}\\\\n.full{\\\\n  width: 100%;\\\\n  height: 100%;\\\\n}\\\";\\n});\\n\\n(function (global, factory) {\\n  if (typeof define === \\\"function\\\" && define.amd) {\\n    define(\\\"@/main.js\\\", [\\\"exports\\\", \\\"@/app.vue\\\", \\\"@/router.js\\\", \\\"@/style.css\\\"], factory);\\n  } else if (typeof exports !== \\\"undefined\\\") {\\n    factory(exports, require(\\\"@/app.vue\\\"), require(\\\"@/router.js\\\"), require(\\\"@/style.css\\\"));\\n  } else {\\n    var mod = {\\n      exports: {}\\n    };\\n    factory(mod.exports, global.appVue, global.routerJs, global.styleCss);\\n    global.mainJs = mod.exports;\\n  }\\n})(this, function (exports, _app, _router) {\\n  \\\"use strict\\\";\\n\\n  Object.defineProperty(exports, \\\"__esModule\\\", {\\n    value: true\\n  });\\n\\n  var _app2 = _interopRequireDefault(_app);\\n\\n  var _router2 = _interopRequireDefault(_router);\\n\\n  function _interopRequireDefault(obj) {\\n    return obj && obj.__esModule ? obj : {\\n      default: obj\\n    };\\n  }\\n\\n  var oldDOM = document.querySelector('#app-attach-point');\\n  var newDOM = document.createElement('div');\\n  newDOM.id = '#app-attach-point';\\n  document.body.appendChild(newDOM);\\n  var target = oldDOM || newDOM;\\n  var app = new Vue({\\n    router: _router2.default,\\n    el: target,\\n    components: {\\n      App: _app2.default\\n    },\\n    template: '<div id=\\\"app\\\"><App /></div>'\\n  });\\n  window.addEventListener('message', function (evt) {\\n    var _evt$data = evt.data,\\n        type = _evt$data.type,\\n        data = _evt$data.data;\\n    window.dispatchEvent(new CustomEvent(type, {\\n      detail: data\\n    }));\\n  }, false);\\n  window.addEventListener('slider', function (_ref) {\\n    var detail = _ref.detail;\\n    console.log(detail);\\n    (window.opener || window.top).dispatchEvent(new CustomEvent('loklok', {\\n      detail: {\\n        rand: Math.random()\\n      }\\n    }));\\n  });\\n  exports.default = app;\\n});\\n\\n(function (global, factory) {\\n  if (typeof define === \\\"function\\\" && define.amd) {\\n    define(\\\"@/router.js\\\", [\\\"exports\\\", \\\"@/webgl/layout/Player.vue\\\", \\\"@/webgl/pages/Home.vue\\\", \\\"@/webgl/pages/Happy.vue\\\"], factory);\\n  } else if (typeof exports !== \\\"undefined\\\") {\\n    factory(exports, require(\\\"@/webgl/layout/Player.vue\\\"), require(\\\"@/webgl/pages/Home.vue\\\"), require(\\\"@/webgl/pages/Happy.vue\\\"));\\n  } else {\\n    var mod = {\\n      exports: {}\\n    };\\n    factory(mod.exports, global.webglLayoutPlayerVue, global.webglPagesHomeVue, global.webglPagesHappyVue);\\n    global.routerJs = mod.exports;\\n  }\\n})(this, function (exports, _Player, _Home, _Happy) {\\n  \\\"use strict\\\";\\n\\n  Object.defineProperty(exports, \\\"__esModule\\\", {\\n    value: true\\n  });\\n\\n  var _Player2 = _interopRequireDefault(_Player);\\n\\n  var _Home2 = _interopRequireDefault(_Home);\\n\\n  var _Happy2 = _interopRequireDefault(_Happy);\\n\\n  function _interopRequireDefault(obj) {\\n    return obj && obj.__esModule ? obj : {\\n      default: obj\\n    };\\n  }\\n\\n  var router = new VueRouter({\\n    mode: 'hash',\\n    routes: [{\\n      path: '/',\\n      component: _Player2.default,\\n      children: [{\\n        path: '',\\n        component: _Home2.default\\n      }, {\\n        path: 'happy',\\n        component: _Happy2.default\\n      }]\\n    }]\\n  });\\n  exports.default = router;\\n});\\n\\n(function (global, factory) {\\n  if (typeof define === \\\"function\\\" && define.amd) {\\n    define(\\\"@/app.vue\\\", [\\\"exports\\\", \\\"@/three.js\\\"], factory);\\n  } else if (typeof exports !== \\\"undefined\\\") {\\n    factory(exports, require(\\\"@/three.js\\\"));\\n  } else {\\n    var mod = {\\n      exports: {}\\n    };\\n    factory(mod.exports, global.threeJs);\\n    global.appVue = mod.exports;\\n  }\\n})(this, function (exports, _three) {\\n  \\\"use strict\\\";\\n\\n  Object.defineProperty(exports, \\\"__esModule\\\", {\\n    value: true\\n  });\\n\\n  var _three2 = _interopRequireDefault(_three);\\n\\n  function _interopRequireDefault(obj) {\\n    return obj && obj.__esModule ? obj : {\\n      default: obj\\n    };\\n  }\\n\\n  function _instanceof(left, right) {\\n    if (right != null && typeof Symbol !== \\\"undefined\\\" && right[Symbol.hasInstance]) {\\n      return right[Symbol.hasInstance](left);\\n    } else {\\n      return left instanceof right;\\n    }\\n  }\\n\\n  var css = \\\"\\\\n\\\\n\\\";\\n  var head = document.head || document.getElementsByTagName('head')[0];\\n  var style = document.createElement('style');\\n  style.type = 'text/css';\\n\\n  if (style.styleSheet) {\\n    style.styleSheet.cssText = css;\\n  } else {\\n    style.appendChild(document.createTextNode(css));\\n  }\\n\\n  function addScope(styleElt, scopeName) {\\n    function process() {\\n      var sheet = styleElt.sheet;\\n      var rules = sheet.cssRules;\\n\\n      for (var i = 0; i < rules.length; ++i) {\\n        var rule = rules[i];\\n        if (rule.type !== 1) continue;\\n        var scopedSelectors = [];\\n        rule.selectorText.split(/s*,s*/).forEach(function (sel) {\\n          scopedSelectors.push(scopeName + ' ' + sel);\\n          var segments = sel.match(/([^ :]+)(.+)?/);\\n          scopedSelectors.push(segments[1] + scopeName + (segments[2] || ''));\\n        });\\n        var scopedRule = scopedSelectors.join(',') + rule.cssText.substr(rule.selectorText.length);\\n        sheet.deleteRule(i);\\n        sheet.insertRule(scopedRule, i);\\n      }\\n    }\\n\\n    try {\\n      // firefox may fail sheet.cssRules with InvalidAccessError\\n      process();\\n    } catch (ex) {\\n      if (_instanceof(ex, DOMException) && ex.code === DOMException.INVALID_ACCESS_ERR) {\\n        styleElt.sheet.disabled = true;\\n        styleElt.addEventListener('load', function onStyleLoaded() {\\n          styleElt.removeEventListener('load', onStyleLoaded); // firefox need this timeout otherwise we have to use document.importNode(style, true)\\n\\n          setTimeout(function () {\\n            process();\\n            styleElt.sheet.disabled = false;\\n          });\\n        });\\n        return;\\n      }\\n\\n      throw ex;\\n    }\\n  }\\n\\n  head.appendChild(style);\\n\\n  if (false) {\\n    addScope(style, '[data-s-1lwl]');\\n  }\\n\\n  exports.default = {\\n    template: \\\"\\\\n  <divdata-s-1lwl>\\\\n    <router-view></router-view>\\\\n  </div>\\\\n\\\",\\n    data: function data() {\\n      return {};\\n    },\\n    created: function created() {},\\n    beforeDestroy: function beforeDestroy() {},\\n    methods: {}\\n  };\\n});\\n\\n(function (global, factory) {\\n  if (typeof define === \\\"function\\\" && define.amd) {\\n    define(\\\"@/webgl/layout/Player.vue\\\", [\\\"exports\\\", \\\"@/webgl/Bundle.js\\\"], factory);\\n  } else if (typeof exports !== \\\"undefined\\\") {\\n    factory(exports, require(\\\"@/webgl/Bundle.js\\\"));\\n  } else {\\n    var mod = {\\n      exports: {}\\n    };\\n    factory(mod.exports, global.webglBundleJs);\\n    global.webglLayoutPlayerVue = mod.exports;\\n  }\\n})(this, function (exports, _Bundle) {\\n  \\\"use strict\\\";\\n\\n  Object.defineProperty(exports, \\\"__esModule\\\", {\\n    value: true\\n  });\\n\\n  var _Bundle2 = _interopRequireDefault(_Bundle);\\n\\n  function _interopRequireDefault(obj) {\\n    return obj && obj.__esModule ? obj : {\\n      default: obj\\n    };\\n  }\\n\\n  function _instanceof(left, right) {\\n    if (right != null && typeof Symbol !== \\\"undefined\\\" && right[Symbol.hasInstance]) {\\n      return right[Symbol.hasInstance](left);\\n    } else {\\n      return left instanceof right;\\n    }\\n  }\\n\\n  var css = \\\"\\\\n.hidden{\\\\n  display: none;\\\\n}\\\\n.full{\\\\n  width: 100%;\\\\n  height: 100%;\\\\n}\\\\n\\\";\\n  var head = document.head || document.getElementsByTagName('head')[0];\\n  var style = document.createElement('style');\\n  style.type = 'text/css';\\n\\n  if (style.styleSheet) {\\n    style.styleSheet.cssText = css;\\n  } else {\\n    style.appendChild(document.createTextNode(css));\\n  }\\n\\n  function addScope(styleElt, scopeName) {\\n    function process() {\\n      var sheet = styleElt.sheet;\\n      var rules = sheet.cssRules;\\n\\n      for (var i = 0; i < rules.length; ++i) {\\n        var rule = rules[i];\\n        if (rule.type !== 1) continue;\\n        var scopedSelectors = [];\\n        rule.selectorText.split(/s*,s*/).forEach(function (sel) {\\n          scopedSelectors.push(scopeName + ' ' + sel);\\n          var segments = sel.match(/([^ :]+)(.+)?/);\\n          scopedSelectors.push(segments[1] + scopeName + (segments[2] || ''));\\n        });\\n        var scopedRule = scopedSelectors.join(',') + rule.cssText.substr(rule.selectorText.length);\\n        sheet.deleteRule(i);\\n        sheet.insertRule(scopedRule, i);\\n      }\\n    }\\n\\n    try {\\n      // firefox may fail sheet.cssRules with InvalidAccessError\\n      process();\\n    } catch (ex) {\\n      if (_instanceof(ex, DOMException) && ex.code === DOMException.INVALID_ACCESS_ERR) {\\n        styleElt.sheet.disabled = true;\\n        styleElt.addEventListener('load', function onStyleLoaded() {\\n          styleElt.removeEventListener('load', onStyleLoaded); // firefox need this timeout otherwise we have to use document.importNode(style, true)\\n\\n          setTimeout(function () {\\n            process();\\n            styleElt.sheet.disabled = false;\\n          });\\n        });\\n        return;\\n      }\\n\\n      throw ex;\\n    }\\n  }\\n\\n  head.appendChild(style);\\n\\n  if (true) {\\n    addScope(style, '[data-s-odu]');\\n  }\\n\\n  exports.default = {\\n    template: \\\"\\\\n  <div class=\\\\\\\"full\\\\\\\" ref=\\\\\\\"full\\\\\\\"data-s-odu>\\\\n\\\\n    <Renderer\\\\n      :alpha=\\\\\\\"false\\\\\\\"\\\\n      ref=\\\\\\\"renderer\\\\\\\"\\\\n      :size=\\\\\\\"size\\\\\\\"\\\\n      @renderer=\\\\\\\"(v) => { renderer = v }\\\\\\\"\\\\n      @toucher=\\\\\\\"(v) => { toucher = v }\\\\\\\"\\\\n    >\\\\n    </Renderer>\\\\n    \\\\n    <keep-alive>\\\\n      <component\\\\n        class=\\\\\\\"hidden\\\\\\\"\\\\n        :is=\\\\\\\"'router-view'\\\\\\\"\\\\n        v-if=\\\\\\\"renderer\\\\\\\"\\\\n        :size=\\\\\\\"size\\\\\\\"\\\\n        :toucher=\\\\\\\"toucher\\\\\\\"\\\\n        :renderer=\\\\\\\"renderer\\\\\\\"\\\\n      >\\\\n      </component>\\\\n    </keep-alive>\\\\n\\\\n  </div>\\\\n\\\",\\n    components: { ..._Bundle2.default\\n    },\\n    computed: {},\\n    methods: {},\\n    data: function data() {\\n      return {\\n        toucher: false,\\n        resizer: function resizer() {},\\n        renderer: false,\\n        size: {\\n          width: 100,\\n          height: 100,\\n          aspect: 1\\n        }\\n      };\\n    },\\n    created: function created() {},\\n    mounted: function mounted() {\\n      var _this = this;\\n\\n      var resizer = this.resizer = function () {\\n        _this.$nextTick(function () {\\n          var rect = _this.$refs.full.getBoundingClientRect();\\n\\n          _this.size = {\\n            width: rect.width,\\n            height: rect.height,\\n            aspect: rect.width / rect.height\\n          };\\n        });\\n      };\\n\\n      window.addEventListener('resize', resizer.bind(this));\\n      resizer();\\n    }\\n  };\\n});\\n\\n(function (global, factory) {\\n  if (typeof define === \\\"function\\\" && define.amd) {\\n    define(\\\"@/webgl/pages/Home.vue\\\", [\\\"exports\\\", \\\"@/webgl/Bundle.js\\\", \\\"@/shader/Simple/vs.vert\\\", \\\"@/shader/Simple/fs.frag\\\"], factory);\\n  } else if (typeof exports !== \\\"undefined\\\") {\\n    factory(exports, require(\\\"@/webgl/Bundle.js\\\"), require(\\\"@/shader/Simple/vs.vert\\\"), require(\\\"@/shader/Simple/fs.frag\\\"));\\n  } else {\\n    var mod = {\\n      exports: {}\\n    };\\n    factory(mod.exports, global.webglBundleJs, global.shaderSimpleVsVert, global.shaderSimpleFsFrag);\\n    global.webglPagesHomeVue = mod.exports;\\n  }\\n})(this, function (exports, _Bundle, _vs, _fs) {\\n  \\\"use strict\\\";\\n\\n  Object.defineProperty(exports, \\\"__esModule\\\", {\\n    value: true\\n  });\\n\\n  var _Bundle2 = _interopRequireDefault(_Bundle);\\n\\n  var _vs2 = _interopRequireDefault(_vs);\\n\\n  var _fs2 = _interopRequireDefault(_fs);\\n\\n  function _interopRequireDefault(obj) {\\n    return obj && obj.__esModule ? obj : {\\n      default: obj\\n    };\\n  }\\n\\n  function _instanceof(left, right) {\\n    if (right != null && typeof Symbol !== \\\"undefined\\\" && right[Symbol.hasInstance]) {\\n      return right[Symbol.hasInstance](left);\\n    } else {\\n      return left instanceof right;\\n    }\\n  }\\n\\n  var css = \\\"\\\\n.full{\\\\n  width: 100%;\\\\n  height: 100%;\\\\n}\\\\n\\\";\\n  var head = document.head || document.getElementsByTagName('head')[0];\\n  var style = document.createElement('style');\\n  style.type = 'text/css';\\n\\n  if (style.styleSheet) {\\n    style.styleSheet.cssText = css;\\n  } else {\\n    style.appendChild(document.createTextNode(css));\\n  }\\n\\n  function addScope(styleElt, scopeName) {\\n    function process() {\\n      var sheet = styleElt.sheet;\\n      var rules = sheet.cssRules;\\n\\n      for (var i = 0; i < rules.length; ++i) {\\n        var rule = rules[i];\\n        if (rule.type !== 1) continue;\\n        var scopedSelectors = [];\\n        rule.selectorText.split(/s*,s*/).forEach(function (sel) {\\n          scopedSelectors.push(scopeName + ' ' + sel);\\n          var segments = sel.match(/([^ :]+)(.+)?/);\\n          scopedSelectors.push(segments[1] + scopeName + (segments[2] || ''));\\n        });\\n        var scopedRule = scopedSelectors.join(',') + rule.cssText.substr(rule.selectorText.length);\\n        sheet.deleteRule(i);\\n        sheet.insertRule(scopedRule, i);\\n      }\\n    }\\n\\n    try {\\n      // firefox may fail sheet.cssRules with InvalidAccessError\\n      process();\\n    } catch (ex) {\\n      if (_instanceof(ex, DOMException) && ex.code === DOMException.INVALID_ACCESS_ERR) {\\n        styleElt.sheet.disabled = true;\\n        styleElt.addEventListener('load', function onStyleLoaded() {\\n          styleElt.removeEventListener('load', onStyleLoaded); // firefox need this timeout otherwise we have to use document.importNode(style, true)\\n\\n          setTimeout(function () {\\n            process();\\n            styleElt.sheet.disabled = false;\\n          });\\n        });\\n        return;\\n      }\\n\\n      throw ex;\\n    }\\n  }\\n\\n  head.appendChild(style);\\n\\n  if (true) {\\n    addScope(style, '[data-s-10u0]');\\n  }\\n\\n  exports.default = {\\n    template: \\\"\\\\n  <div class=\\\\\\\"\\\\\\\"data-s-10u0>\\\\n    <PerspectiveCamera\\\\n      :fov=\\\\\\\"75\\\\\\\"\\\\n      :aspect=\\\\\\\"size.aspect\\\\\\\"\\\\n      :near=\\\\\\\"1\\\\\\\"\\\\n      :far=\\\\\\\"1000\\\\\\\"\\\\n      :position=\\\\\\\"{ x: 0, y: 0, z: 15 }\\\\\\\"\\\\n      @camera=\\\\\\\"(v) => { camera = v; }\\\\\\\"\\\\n    />\\\\n    \\\\n    <Scene @scene=\\\\\\\"(v) => { scene = v; }\\\\\\\">\\\\n      <Object3D pz=\\\\\\\"10\\\\\\\">\\\\n        <PointLight />\\\\n      </Object3D>\\\\n      \\\\n      <Object3D pz=\\\\\\\"0\\\\\\\">\\\\n        <Mesh>\\\\n          <SphereBufferGeometry />\\\\n          <ShaderMaterial :vs=\\\\\\\"simpleVS\\\\\\\" :fs=\\\\\\\"simpleFS\\\\\\\" :uniforms=\\\\\\\"animatable\\\\\\\" />\\\\n        </Mesh>\\\\n      </Object3D>\\\\n    </Scene>\\\\n    \\\\n    <Raycaster v-if=\\\\\\\"camera && toucher && scene\\\\\\\" :scene=\\\\\\\"scene\\\\\\\" :toucher=\\\\\\\"toucher\\\\\\\" :camera=\\\\\\\"camera\\\\\\\" @found=\\\\\\\"(v) => { found = v; }\\\\\\\" @click=\\\\\\\"onClick\\\\\\\">\\\\n    </Raycaster>\\\\n    \\\\n  </div>\\\\n\\\",\\n    name: 'Home',\\n    props: {\\n      toucher: {},\\n      size: {},\\n      renderer: {},\\n      doc: {}\\n    },\\n    components: { ..._Bundle2.default\\n    },\\n    computed: {},\\n    data: function data() {\\n      return {\\n        cam: {\\n          pos: {\\n            x: 3,\\n            y: 5,\\n            z: 10\\n          }\\n        },\\n        ready: false,\\n        cubeCamera: false,\\n        visible: true,\\n        resizer: function resizer() {},\\n        scene: false,\\n        camera: false,\\n        found: [],\\n        animatable: {\\n          time: {\\n            value: 0\\n          }\\n        },\\n        simpleVS: _vs2.default,\\n        simpleFS: _fs2.default\\n      };\\n    },\\n    methods: {\\n      onClick: function onClick(_ref) {\\n        var event = _ref.event,\\n            intersects = _ref.intersects;\\n        this.$router.push({\\n          path: '/happy'\\n        });\\n        this.$forceUpdate();\\n        console.log('Click to happy');\\n      },\\n      setup: function setup() {\\n        this.scene.background = new THREE.Color(0xffffff);\\n      },\\n      renderWebGL: function renderWebGL() {\\n        TWEEN.update();\\n        this.animatable.time.value += 0.01;\\n\\n        if (this.scene && this.camera && this.renderer) {\\n          this.renderer.render(this.scene, this.camera);\\n        }\\n      }\\n    },\\n    watch: {\\n      camera: function camera() {\\n        if (this.camera && this.renderer) {\\n          this.ready = true;\\n        }\\n      },\\n      renderer: function renderer() {\\n        if (this.camera && this.renderer) {\\n          this.ready = true;\\n        }\\n      },\\n      ready: function ready() {\\n        if (this.ready) {\\n          this.setup();\\n        }\\n      }\\n    },\\n    created: function created() {},\\n    activated: function activated() {\\n      var self = this;\\n\\n      function loop(rAFT) {\\n        self.rAFID = window.requestAnimationFrame(loop);\\n        self.renderWebGL(rAFT);\\n      }\\n\\n      self.rAFID = window.requestAnimationFrame(loop);\\n    },\\n    deactivated: function deactivated() {\\n      window.cancelAnimationFrame(this.rAFID);\\n    }\\n  };\\n});\\n\\n(function (global, factory) {\\n  if (typeof define === \\\"function\\\" && define.amd) {\\n    define(\\\"@/webgl/pages/Happy.vue\\\", [\\\"exports\\\", \\\"@/webgl/Bundle.js\\\", \\\"@/shader/Fling/vs.vert\\\", \\\"@/shader/Simple/vs.vert\\\", \\\"@/shader/Simple/fs.frag\\\"], factory);\\n  } else if (typeof exports !== \\\"undefined\\\") {\\n    factory(exports, require(\\\"@/webgl/Bundle.js\\\"), require(\\\"@/shader/Fling/vs.vert\\\"), require(\\\"@/shader/Simple/vs.vert\\\"), require(\\\"@/shader/Simple/fs.frag\\\"));\\n  } else {\\n    var mod = {\\n      exports: {}\\n    };\\n    factory(mod.exports, global.webglBundleJs, global.shaderFlingVsVert, global.shaderSimpleVsVert, global.shaderSimpleFsFrag);\\n    global.webglPagesHappyVue = mod.exports;\\n  }\\n})(this, function (exports, _Bundle, _vs, _vs3, _fs) {\\n  \\\"use strict\\\";\\n\\n  Object.defineProperty(exports, \\\"__esModule\\\", {\\n    value: true\\n  });\\n\\n  var _Bundle2 = _interopRequireDefault(_Bundle);\\n\\n  var _vs2 = _interopRequireDefault(_vs);\\n\\n  var _vs4 = _interopRequireDefault(_vs3);\\n\\n  var _fs2 = _interopRequireDefault(_fs);\\n\\n  function _interopRequireDefault(obj) {\\n    return obj && obj.__esModule ? obj : {\\n      default: obj\\n    };\\n  }\\n\\n  function _instanceof(left, right) {\\n    if (right != null && typeof Symbol !== \\\"undefined\\\" && right[Symbol.hasInstance]) {\\n      return right[Symbol.hasInstance](left);\\n    } else {\\n      return left instanceof right;\\n    }\\n  }\\n\\n  var css = \\\"\\\\n.full{\\\\n  width: 100%;\\\\n  height: 100%;\\\\n}\\\\n\\\";\\n  var head = document.head || document.getElementsByTagName('head')[0];\\n  var style = document.createElement('style');\\n  style.type = 'text/css';\\n\\n  if (style.styleSheet) {\\n    style.styleSheet.cssText = css;\\n  } else {\\n    style.appendChild(document.createTextNode(css));\\n  }\\n\\n  function addScope(styleElt, scopeName) {\\n    function process() {\\n      var sheet = styleElt.sheet;\\n      var rules = sheet.cssRules;\\n\\n      for (var i = 0; i < rules.length; ++i) {\\n        var rule = rules[i];\\n        if (rule.type !== 1) continue;\\n        var scopedSelectors = [];\\n        rule.selectorText.split(/s*,s*/).forEach(function (sel) {\\n          scopedSelectors.push(scopeName + ' ' + sel);\\n          var segments = sel.match(/([^ :]+)(.+)?/);\\n          scopedSelectors.push(segments[1] + scopeName + (segments[2] || ''));\\n        });\\n        var scopedRule = scopedSelectors.join(',') + rule.cssText.substr(rule.selectorText.length);\\n        sheet.deleteRule(i);\\n        sheet.insertRule(scopedRule, i);\\n      }\\n    }\\n\\n    try {\\n      // firefox may fail sheet.cssRules with InvalidAccessError\\n      process();\\n    } catch (ex) {\\n      if (_instanceof(ex, DOMException) && ex.code === DOMException.INVALID_ACCESS_ERR) {\\n        styleElt.sheet.disabled = true;\\n        styleElt.addEventListener('load', function onStyleLoaded() {\\n          styleElt.removeEventListener('load', onStyleLoaded); // firefox need this timeout otherwise we have to use document.importNode(style, true)\\n\\n          setTimeout(function () {\\n            process();\\n            styleElt.sheet.disabled = false;\\n          });\\n        });\\n        return;\\n      }\\n\\n      throw ex;\\n    }\\n  }\\n\\n  head.appendChild(style);\\n\\n  if (true) {\\n    addScope(style, '[data-s-1hhf]');\\n  }\\n\\n  exports.default = {\\n    template: \\\"\\\\n  <div class=\\\\\\\"\\\\\\\"data-s-1hhf>\\\\n\\\\n    <PerspectiveCamera\\\\n      :fov=\\\\\\\"75\\\\\\\"\\\\n      :aspect=\\\\\\\"size.aspect\\\\\\\"\\\\n      :near=\\\\\\\"1\\\\\\\"\\\\n      :far=\\\\\\\"1000\\\\\\\"\\\\n      :position=\\\\\\\"{ x: 0, y: 0, z: 15 }\\\\\\\"\\\\n      @camera=\\\\\\\"(v) => { camera = v; }\\\\\\\"\\\\n    />\\\\n    \\\\n    <Scene @scene=\\\\\\\"(v) => { scene = v }\\\\\\\">\\\\n      <Object3D pz=\\\\\\\"10\\\\\\\">\\\\n        <PointLight />\\\\n      </Object3D>\\\\n      \\\\n      <Object3D pz=\\\\\\\"0\\\\\\\">\\\\n        <Points @element=\\\\\\\"(v) => { v.$skipRayCast = true }\\\\\\\">\\\\n          <SphereBufferGeometry />\\\\n          <ShaderMaterial :vs=\\\\\\\"simpleVS2\\\\\\\" :fs=\\\\\\\"simpleFS\\\\\\\" :uniforms=\\\\\\\"animatable\\\\\\\" />\\\\n        </Points>\\\\n      </Object3D>\\\\n      \\\\n      <Object3D pz=\\\\\\\"1\\\\\\\">\\\\n        <Mesh>\\\\n          <SphereBufferGeometry />\\\\n          <ShaderMaterial :vs=\\\\\\\"simpleVS\\\\\\\" :fs=\\\\\\\"simpleFS\\\\\\\" :uniforms=\\\\\\\"animatable\\\\\\\" />\\\\n        </Mesh>\\\\n      </Object3D>\\\\n    </Scene>\\\\n    \\\\n    <Raycaster v-if=\\\\\\\"renderer && camera && toucher && scene\\\\\\\" :scene=\\\\\\\"scene\\\\\\\" :toucher=\\\\\\\"toucher\\\\\\\" :camera=\\\\\\\"camera\\\\\\\" @found=\\\\\\\"(v) => { found = v; }\\\\\\\" @click=\\\\\\\"onClick\\\\\\\">\\\\n    </Raycaster>\\\\n\\\\n  </div>\\\\n\\\",\\n    name: 'Happy',\\n    props: {\\n      toucher: {},\\n      size: {},\\n      renderer: {},\\n      doc: {}\\n    },\\n    components: { ..._Bundle2.default\\n    },\\n    computed: {},\\n    data: function data() {\\n      return {\\n        cam: {\\n          pos: {\\n            x: 3,\\n            y: 5,\\n            z: 10\\n          }\\n        },\\n        ready: false,\\n        cubeCamera: false,\\n        visible: true,\\n        resizer: function resizer() {},\\n        scene: false,\\n        camera: false,\\n        found: [],\\n        animatable: {\\n          time: {\\n            value: 0\\n          }\\n        },\\n        simpleVS: _vs4.default,\\n        simpleFS: _fs2.default,\\n        simpleVS2: _vs2.default\\n      };\\n    },\\n    methods: {\\n      onClick: function onClick(_ref) {\\n        var event = _ref.event,\\n            intersects = _ref.intersects;\\n        console.log(event, intersects);\\n        this.$router.push('/');\\n      },\\n      setup: function setup() {\\n        this.scene.background = new THREE.Color(0xffffff);\\n      },\\n      renderWebGL: function renderWebGL() {\\n        TWEEN.update();\\n        this.animatable.time.value += 0.01;\\n\\n        if (this.scene && this.camera && this.renderer) {\\n          this.renderer.render(this.scene, this.camera);\\n        }\\n      }\\n    },\\n    watch: {\\n      camera: function camera() {\\n        if (this.camera && this.renderer) {\\n          this.ready = true;\\n        }\\n      },\\n      renderer: function renderer() {\\n        if (this.camera && this.renderer) {\\n          this.ready = true;\\n        }\\n      },\\n      ready: function ready() {\\n        if (this.ready) {\\n          this.setup();\\n        }\\n      }\\n    },\\n    created: function created() {},\\n    activated: function activated() {\\n      var self = this;\\n\\n      function loop(rAFT) {\\n        self.rAFID = window.requestAnimationFrame(loop);\\n        self.renderWebGL(rAFT);\\n      }\\n\\n      self.rAFID = window.requestAnimationFrame(loop);\\n    },\\n    deactivated: function deactivated() {\\n      window.cancelAnimationFrame(this.rAFID);\\n      console.log('cancel animation frame');\\n    }\\n  };\\n});\\n\\n(function (global, factory) {\\n  if (typeof define === \\\"function\\\" && define.amd) {\\n    define(\\\"@/webgl/sample.vue\\\", [\\\"exports\\\", \\\"@/webgl/Bundle.js\\\", \\\"@/shader/Simple/vs.vert\\\", \\\"@/shader/Simple/fs.frag\\\"], factory);\\n  } else if (typeof exports !== \\\"undefined\\\") {\\n    factory(exports, require(\\\"@/webgl/Bundle.js\\\"), require(\\\"@/shader/Simple/vs.vert\\\"), require(\\\"@/shader/Simple/fs.frag\\\"));\\n  } else {\\n    var mod = {\\n      exports: {}\\n    };\\n    factory(mod.exports, global.webglBundleJs, global.shaderSimpleVsVert, global.shaderSimpleFsFrag);\\n    global.webglSampleVue = mod.exports;\\n  }\\n})(this, function (exports, _Bundle, _vs, _fs) {\\n  \\\"use strict\\\";\\n\\n  Object.defineProperty(exports, \\\"__esModule\\\", {\\n    value: true\\n  });\\n\\n  var _Bundle2 = _interopRequireDefault(_Bundle);\\n\\n  var _vs2 = _interopRequireDefault(_vs);\\n\\n  var _fs2 = _interopRequireDefault(_fs);\\n\\n  function _interopRequireDefault(obj) {\\n    return obj && obj.__esModule ? obj : {\\n      default: obj\\n    };\\n  }\\n\\n  function _instanceof(left, right) {\\n    if (right != null && typeof Symbol !== \\\"undefined\\\" && right[Symbol.hasInstance]) {\\n      return right[Symbol.hasInstance](left);\\n    } else {\\n      return left instanceof right;\\n    }\\n  }\\n\\n  var css = \\\"\\\\n.full{\\\\n  width: 100%;\\\\n  height: 100%;\\\\n}\\\\n\\\";\\n  var head = document.head || document.getElementsByTagName('head')[0];\\n  var style = document.createElement('style');\\n  style.type = 'text/css';\\n\\n  if (style.styleSheet) {\\n    style.styleSheet.cssText = css;\\n  } else {\\n    style.appendChild(document.createTextNode(css));\\n  }\\n\\n  function addScope(styleElt, scopeName) {\\n    function process() {\\n      var sheet = styleElt.sheet;\\n      var rules = sheet.cssRules;\\n\\n      for (var i = 0; i < rules.length; ++i) {\\n        var rule = rules[i];\\n        if (rule.type !== 1) continue;\\n        var scopedSelectors = [];\\n        rule.selectorText.split(/s*,s*/).forEach(function (sel) {\\n          scopedSelectors.push(scopeName + ' ' + sel);\\n          var segments = sel.match(/([^ :]+)(.+)?/);\\n          scopedSelectors.push(segments[1] + scopeName + (segments[2] || ''));\\n        });\\n        var scopedRule = scopedSelectors.join(',') + rule.cssText.substr(rule.selectorText.length);\\n        sheet.deleteRule(i);\\n        sheet.insertRule(scopedRule, i);\\n      }\\n    }\\n\\n    try {\\n      // firefox may fail sheet.cssRules with InvalidAccessError\\n      process();\\n    } catch (ex) {\\n      if (_instanceof(ex, DOMException) && ex.code === DOMException.INVALID_ACCESS_ERR) {\\n        styleElt.sheet.disabled = true;\\n        styleElt.addEventListener('load', function onStyleLoaded() {\\n          styleElt.removeEventListener('load', onStyleLoaded); // firefox need this timeout otherwise we have to use document.importNode(style, true)\\n\\n          setTimeout(function () {\\n            process();\\n            styleElt.sheet.disabled = false;\\n          });\\n        });\\n        return;\\n      }\\n\\n      throw ex;\\n    }\\n  }\\n\\n  head.appendChild(style);\\n\\n  if (true) {\\n    addScope(style, '[data-s-yar]');\\n  }\\n\\n  exports.default = {\\n    template: \\\"\\\\n  <div class=\\\\\\\"full\\\\\\\"data-s-yar>\\\\n\\\\n    <Renderer\\\\n      ref=\\\\\\\"renderer\\\\\\\"\\\\n      :size=\\\\\\\"size\\\\\\\"\\\\n      @renderer=\\\\\\\"(v) => { renderer = v }\\\\\\\"\\\\n    >\\\\n    </Renderer>\\\\n\\\\n    <PerspectiveCamera\\\\n      :fov=\\\\\\\"75\\\\\\\"\\\\n      :aspect=\\\\\\\"size.aspect\\\\\\\"\\\\n      :near=\\\\\\\"1\\\\\\\"\\\\n      :far=\\\\\\\"1000\\\\\\\"\\\\n      :position=\\\\\\\"{ x: 0, y: 0, z: 10 }\\\\\\\"\\\\n      @camera=\\\\\\\"(v) => { camera = v; }\\\\\\\"\\\\n    />\\\\n\\\\n    <Scene @scene=\\\\\\\"(v) => { scene = v }\\\\\\\">\\\\n      <Object3D pz=\\\\\\\"10\\\\\\\">\\\\n        <PointLight />\\\\n      </Object3D>\\\\n      \\\\n      <Object3D pz=\\\\\\\"0\\\\\\\">\\\\n        <Points>\\\\n          <SphereBufferGeometry />\\\\n          <ShaderMaterial :vs=\\\\\\\"simpleVS\\\\\\\" :fs=\\\\\\\"simpleFS\\\\\\\" :uniforms=\\\\\\\"animatable\\\\\\\" />\\\\n        </Points>\\\\n      </Object3D>\\\\n      \\\\n    </Scene>\\\\n\\\\n  </div>\\\\n\\\",\\n    components: { ..._Bundle2.default\\n    },\\n    computed: {},\\n    methods: {\\n      renderWebGL: function renderWebGL() {\\n        this.animatable.time.value = window.performance.now() * 0.001;\\n\\n        if (this.scene && this.camera && this.renderer) {\\n          this.renderer.render(this.scene, this.camera);\\n        }\\n      }\\n    },\\n    data: function data() {\\n      return {\\n        animatable: {\\n          time: {\\n            value: 0\\n          }\\n        },\\n        simpleVS: _vs2.default,\\n        simpleFS: _fs2.default,\\n        size: {\\n          width: window.innerWidth,\\n          height: window.innerHeight,\\n          aspect: window.innerWidth / window.innerHeight\\n        },\\n        renderer: false,\\n        scene: false,\\n        camera: false\\n      };\\n    },\\n    created: function created() {},\\n    mounted: function mounted() {\\n      var self = this;\\n\\n      function loop() {\\n        self.rAFID = window.requestAnimationFrame(loop);\\n        self.renderWebGL();\\n      }\\n\\n      self.rAFID = window.requestAnimationFrame(loop);\\n    }\\n  };\\n});\\n\\n(function (global, factory) {\\n  if (typeof define === \\\"function\\\" && define.amd) {\\n    define(\\\"@/webgl/Bundle.js\\\", [\\\"exports\\\", \\\"@/webgl/System/Renderer.vue\\\", \\\"@/webgl/System/Scene.vue\\\", \\\"@/webgl/System/PerspectiveCamera.vue\\\", \\\"@/webgl/System/Raycaster.vue\\\", \\\"@/webgl/Material/MeshPhongMaterial.vue\\\", \\\"@/webgl/Material/ShaderMaterial.vue\\\", \\\"@/webgl/Element/Object3D.vue\\\", \\\"@/webgl/Element/Mesh.vue\\\", \\\"@/webgl/Element/Points.vue\\\", \\\"@/webgl/Element/PointLight.vue\\\", \\\"@/webgl/Geo/SphereBufferGeometry.vue\\\"], factory);\\n  } else if (typeof exports !== \\\"undefined\\\") {\\n    factory(exports, require(\\\"@/webgl/System/Renderer.vue\\\"), require(\\\"@/webgl/System/Scene.vue\\\"), require(\\\"@/webgl/System/PerspectiveCamera.vue\\\"), require(\\\"@/webgl/System/Raycaster.vue\\\"), require(\\\"@/webgl/Material/MeshPhongMaterial.vue\\\"), require(\\\"@/webgl/Material/ShaderMaterial.vue\\\"), require(\\\"@/webgl/Element/Object3D.vue\\\"), require(\\\"@/webgl/Element/Mesh.vue\\\"), require(\\\"@/webgl/Element/Points.vue\\\"), require(\\\"@/webgl/Element/PointLight.vue\\\"), require(\\\"@/webgl/Geo/SphereBufferGeometry.vue\\\"));\\n  } else {\\n    var mod = {\\n      exports: {}\\n    };\\n    factory(mod.exports, global.webglSystemRendererVue, global.webglSystemSceneVue, global.webglSystemPerspectiveCameraVue, global.webglSystemRaycasterVue, global.webglMaterialMeshPhongMaterialVue, global.webglMaterialShaderMaterialVue, global.webglElementObject3DVue, global.webglElementMeshVue, global.webglElementPointsVue, global.webglElementPointLightVue, global.webglGeoSphereBufferGeometryVue);\\n    global.webglBundleJs = mod.exports;\\n  }\\n})(this, function (exports, _Renderer, _Scene, _PerspectiveCamera, _Raycaster, _MeshPhongMaterial, _ShaderMaterial, _Object3D, _Mesh, _Points, _PointLight, _SphereBufferGeometry) {\\n  \\\"use strict\\\";\\n\\n  Object.defineProperty(exports, \\\"__esModule\\\", {\\n    value: true\\n  });\\n\\n  var _Renderer2 = _interopRequireDefault(_Renderer);\\n\\n  var _Scene2 = _interopRequireDefault(_Scene);\\n\\n  var _PerspectiveCamera2 = _interopRequireDefault(_PerspectiveCamera);\\n\\n  var _Raycaster2 = _interopRequireDefault(_Raycaster);\\n\\n  var _MeshPhongMaterial2 = _interopRequireDefault(_MeshPhongMaterial);\\n\\n  var _ShaderMaterial2 = _interopRequireDefault(_ShaderMaterial);\\n\\n  var _Object3D2 = _interopRequireDefault(_Object3D);\\n\\n  var _Mesh2 = _interopRequireDefault(_Mesh);\\n\\n  var _Points2 = _interopRequireDefault(_Points);\\n\\n  var _PointLight2 = _interopRequireDefault(_PointLight);\\n\\n  var _SphereBufferGeometry2 = _interopRequireDefault(_SphereBufferGeometry);\\n\\n  function _interopRequireDefault(obj) {\\n    return obj && obj.__esModule ? obj : {\\n      default: obj\\n    };\\n  }\\n\\n  exports.default = {\\n    //materials\\n    MeshPhongMaterial: _MeshPhongMaterial2.default,\\n    ShaderMaterial: _ShaderMaterial2.default,\\n    //system\\n    Renderer: _Renderer2.default,\\n    Scene: _Scene2.default,\\n    PerspectiveCamera: _PerspectiveCamera2.default,\\n    Raycaster: _Raycaster2.default,\\n    //Elemnts\\n    PointLight: _PointLight2.default,\\n    Points: _Points2.default,\\n    Object3D: _Object3D2.default,\\n    Mesh: _Mesh2.default,\\n    //Geo\\n    SphereBufferGeometry: _SphereBufferGeometry2.default\\n  };\\n});\\n\\n(function (global, factory) {\\n  if (typeof define === \\\"function\\\" && define.amd) {\\n    define(\\\"@/webgl/System/Renderer.vue\\\", [\\\"exports\\\"], factory);\\n  } else if (typeof exports !== \\\"undefined\\\") {\\n    factory(exports);\\n  } else {\\n    var mod = {\\n      exports: {}\\n    };\\n    factory(mod.exports);\\n    global.webglSystemRendererVue = mod.exports;\\n  }\\n})(this, function (exports) {\\n  \\\"use strict\\\";\\n\\n  Object.defineProperty(exports, \\\"__esModule\\\", {\\n    value: true\\n  });\\n\\n  function _instanceof(left, right) {\\n    if (right != null && typeof Symbol !== \\\"undefined\\\" && right[Symbol.hasInstance]) {\\n      return right[Symbol.hasInstance](left);\\n    } else {\\n      return left instanceof right;\\n    }\\n  }\\n\\n  var css = \\\"\\\\n.full{\\\\n  width: 100%;\\\\n  height: 100%;\\\\n}\\\\n.pos-rel{\\\\n  position: relative;\\\\n}\\\\n.layer{\\\\n  position: absolute;\\\\n  top: 0px;\\\\n  left: 0px;\\\\n}\\\\n\\\";\\n  var head = document.head || document.getElementsByTagName('head')[0];\\n  var style = document.createElement('style');\\n  style.type = 'text/css';\\n\\n  if (style.styleSheet) {\\n    style.styleSheet.cssText = css;\\n  } else {\\n    style.appendChild(document.createTextNode(css));\\n  }\\n\\n  function addScope(styleElt, scopeName) {\\n    function process() {\\n      var sheet = styleElt.sheet;\\n      var rules = sheet.cssRules;\\n\\n      for (var i = 0; i < rules.length; ++i) {\\n        var rule = rules[i];\\n        if (rule.type !== 1) continue;\\n        var scopedSelectors = [];\\n        rule.selectorText.split(/s*,s*/).forEach(function (sel) {\\n          scopedSelectors.push(scopeName + ' ' + sel);\\n          var segments = sel.match(/([^ :]+)(.+)?/);\\n          scopedSelectors.push(segments[1] + scopeName + (segments[2] || ''));\\n        });\\n        var scopedRule = scopedSelectors.join(',') + rule.cssText.substr(rule.selectorText.length);\\n        sheet.deleteRule(i);\\n        sheet.insertRule(scopedRule, i);\\n      }\\n    }\\n\\n    try {\\n      // firefox may fail sheet.cssRules with InvalidAccessError\\n      process();\\n    } catch (ex) {\\n      if (_instanceof(ex, DOMException) && ex.code === DOMException.INVALID_ACCESS_ERR) {\\n        styleElt.sheet.disabled = true;\\n        styleElt.addEventListener('load', function onStyleLoaded() {\\n          styleElt.removeEventListener('load', onStyleLoaded); // firefox need this timeout otherwise we have to use document.importNode(style, true)\\n\\n          setTimeout(function () {\\n            process();\\n            styleElt.sheet.disabled = false;\\n          });\\n        });\\n        return;\\n      }\\n\\n      throw ex;\\n    }\\n  }\\n\\n  head.appendChild(style);\\n\\n  if (true) {\\n    addScope(style, '[data-s-1atn]');\\n  }\\n\\n  var THREE = window.THREE;\\n  exports.default = {\\n    template: \\\"\\\\n  <div class=\\\\\\\"full pos-rel\\\\\\\"data-s-1atn>\\\\n    <div class=\\\\\\\"full layer\\\\\\\" ref=\\\\\\\"mounter\\\\\\\"></div>\\\\n    <div class=\\\\\\\"full layer\\\\\\\" ref=\\\\\\\"toucher\\\\\\\"><slot></slot></div>\\\\n  </div>\\\\n\\\",\\n    data: function data() {\\n      return {\\n        // THREE,\\n        renderer: false\\n      };\\n    },\\n    props: {\\n      size: {\\n        default: function _default() {\\n          return {\\n            width: 500,\\n            height: 500\\n          };\\n        }\\n      },\\n      alpha: {\\n        default: true\\n      },\\n      antialias: {\\n        default: true\\n      }\\n    },\\n    mounted: function mounted() {\\n      this.renderer = new THREE.WebGLRenderer({\\n        alpha: this.alpha,\\n        antialias: this.antialias\\n      });\\n      this.resize();\\n      this.renderer.domElement.style.marginBottom = '-6px';\\n      this.$refs.mounter.appendChild(this.renderer.domElement);\\n      this.$emit('toucher', this.$refs['toucher']);\\n      this.$emit('renderer', this.renderer);\\n    },\\n    beforeDestroy: function beforeDestroy() {\\n      this.$refs.mounter.removeChild(this.renderer.domElement);\\n    },\\n    watch: {\\n      size: function size() {\\n        this.resize();\\n      }\\n    },\\n    methods: {\\n      resize: function resize() {\\n        var ratio = window.devicePixelRatio || 1;\\n        this.renderer.setPixelRatio(ratio);\\n        this.renderer.setSize(this.size.width, this.size.height);\\n      }\\n    }\\n  };\\n});\\n\\n(function (global, factory) {\\n  if (typeof define === \\\"function\\\" && define.amd) {\\n    define(\\\"@/webgl/System/Scene.vue\\\", [\\\"exports\\\"], factory);\\n  } else if (typeof exports !== \\\"undefined\\\") {\\n    factory(exports);\\n  } else {\\n    var mod = {\\n      exports: {}\\n    };\\n    factory(mod.exports);\\n    global.webglSystemSceneVue = mod.exports;\\n  }\\n})(this, function (exports) {\\n  \\\"use strict\\\";\\n\\n  Object.defineProperty(exports, \\\"__esModule\\\", {\\n    value: true\\n  });\\n\\n  function _instanceof(left, right) {\\n    if (right != null && typeof Symbol !== \\\"undefined\\\" && right[Symbol.hasInstance]) {\\n      return right[Symbol.hasInstance](left);\\n    } else {\\n      return left instanceof right;\\n    }\\n  }\\n\\n  var css = \\\"\\\\n.mounter {\\\\n  display: none;\\\\n}\\\\n\\\";\\n  var head = document.head || document.getElementsByTagName('head')[0];\\n  var style = document.createElement('style');\\n  style.type = 'text/css';\\n\\n  if (style.styleSheet) {\\n    style.styleSheet.cssText = css;\\n  } else {\\n    style.appendChild(document.createTextNode(css));\\n  }\\n\\n  function addScope(styleElt, scopeName) {\\n    function process() {\\n      var sheet = styleElt.sheet;\\n      var rules = sheet.cssRules;\\n\\n      for (var i = 0; i < rules.length; ++i) {\\n        var rule = rules[i];\\n        if (rule.type !== 1) continue;\\n        var scopedSelectors = [];\\n        rule.selectorText.split(/s*,s*/).forEach(function (sel) {\\n          scopedSelectors.push(scopeName + ' ' + sel);\\n          var segments = sel.match(/([^ :]+)(.+)?/);\\n          scopedSelectors.push(segments[1] + scopeName + (segments[2] || ''));\\n        });\\n        var scopedRule = scopedSelectors.join(',') + rule.cssText.substr(rule.selectorText.length);\\n        sheet.deleteRule(i);\\n        sheet.insertRule(scopedRule, i);\\n      }\\n    }\\n\\n    try {\\n      // firefox may fail sheet.cssRules with InvalidAccessError\\n      process();\\n    } catch (ex) {\\n      if (_instanceof(ex, DOMException) && ex.code === DOMException.INVALID_ACCESS_ERR) {\\n        styleElt.sheet.disabled = true;\\n        styleElt.addEventListener('load', function onStyleLoaded() {\\n          styleElt.removeEventListener('load', onStyleLoaded); // firefox need this timeout otherwise we have to use document.importNode(style, true)\\n\\n          setTimeout(function () {\\n            process();\\n            styleElt.sheet.disabled = false;\\n          });\\n        });\\n        return;\\n      }\\n\\n      throw ex;\\n    }\\n  }\\n\\n  head.appendChild(style);\\n\\n  if (true) {\\n    addScope(style, '[data-s-1xqb]');\\n  }\\n\\n  var THREE = window.THREE;\\n  exports.default = {\\n    template: \\\"\\\\n  <div ref=\\\\\\\"mounter\\\\\\\" class=\\\\\\\"mounter\\\\\\\"data-s-1xqb><slot></slot></div>\\\\n\\\",\\n    data: function data() {\\n      return {\\n        scene: false\\n      };\\n    },\\n    props: {\\n      size: {\\n        default: function _default() {\\n          return {\\n            width: 500,\\n            height: 500\\n          };\\n        }\\n      },\\n      alpha: {\\n        default: true\\n      },\\n      antialias: {\\n        default: true\\n      }\\n    },\\n    created: function created() {\\n      var _this = this;\\n\\n      this.scene = new THREE.Scene();\\n      this.$on('add', function (v) {\\n        _this.scene.add(v);\\n      });\\n      this.$on('remove', function (v) {\\n        _this.scene.remove(v);\\n      });\\n    },\\n    mounted: function mounted() {\\n      this.$emit('scene', this.scene);\\n    }\\n  };\\n});\\n\\n(function (global, factory) {\\n  if (typeof define === \\\"function\\\" && define.amd) {\\n    define(\\\"@/webgl/System/PerspectiveCamera.vue\\\", [\\\"exports\\\"], factory);\\n  } else if (typeof exports !== \\\"undefined\\\") {\\n    factory(exports);\\n  } else {\\n    var mod = {\\n      exports: {}\\n    };\\n    factory(mod.exports);\\n    global.webglSystemPerspectiveCameraVue = mod.exports;\\n  }\\n})(this, function (exports) {\\n  \\\"use strict\\\";\\n\\n  Object.defineProperty(exports, \\\"__esModule\\\", {\\n    value: true\\n  });\\n\\n  function _instanceof(left, right) {\\n    if (right != null && typeof Symbol !== \\\"undefined\\\" && right[Symbol.hasInstance]) {\\n      return right[Symbol.hasInstance](left);\\n    } else {\\n      return left instanceof right;\\n    }\\n  }\\n\\n  var css = \\\"\\\\n.perspective-camera{\\\\n  display: none;\\\\n}\\\\n\\\";\\n  var head = document.head || document.getElementsByTagName('head')[0];\\n  var style = document.createElement('style');\\n  style.type = 'text/css';\\n\\n  if (style.styleSheet) {\\n    style.styleSheet.cssText = css;\\n  } else {\\n    style.appendChild(document.createTextNode(css));\\n  }\\n\\n  function addScope(styleElt, scopeName) {\\n    function process() {\\n      var sheet = styleElt.sheet;\\n      var rules = sheet.cssRules;\\n\\n      for (var i = 0; i < rules.length; ++i) {\\n        var rule = rules[i];\\n        if (rule.type !== 1) continue;\\n        var scopedSelectors = [];\\n        rule.selectorText.split(/s*,s*/).forEach(function (sel) {\\n          scopedSelectors.push(scopeName + ' ' + sel);\\n          var segments = sel.match(/([^ :]+)(.+)?/);\\n          scopedSelectors.push(segments[1] + scopeName + (segments[2] || ''));\\n        });\\n        var scopedRule = scopedSelectors.join(',') + rule.cssText.substr(rule.selectorText.length);\\n        sheet.deleteRule(i);\\n        sheet.insertRule(scopedRule, i);\\n      }\\n    }\\n\\n    try {\\n      // firefox may fail sheet.cssRules with InvalidAccessError\\n      process();\\n    } catch (ex) {\\n      if (_instanceof(ex, DOMException) && ex.code === DOMException.INVALID_ACCESS_ERR) {\\n        styleElt.sheet.disabled = true;\\n        styleElt.addEventListener('load', function onStyleLoaded() {\\n          styleElt.removeEventListener('load', onStyleLoaded); // firefox need this timeout otherwise we have to use document.importNode(style, true)\\n\\n          setTimeout(function () {\\n            process();\\n            styleElt.sheet.disabled = false;\\n          });\\n        });\\n        return;\\n      }\\n\\n      throw ex;\\n    }\\n  }\\n\\n  head.appendChild(style);\\n\\n  if (true) {\\n    addScope(style, '[data-s-xjb]');\\n  }\\n\\n  var THREE = window.THREE;\\n  exports.default = {\\n    template: \\\"\\\",\\n    abstract: true,\\n    render: function render() {\\n      return null;\\n    },\\n    props: ['fov', 'aspect', 'near', 'far', 'position'],\\n    data: function data() {\\n      return {\\n        camera: null\\n      };\\n    },\\n    created: function created() {\\n      this.camera = new THREE.PerspectiveCamera(this.fov, this.aspect, this.near, this.far);\\n\\n      if (this.position) {\\n        this.camera.position.x = this.position.x;\\n        this.camera.position.y = this.position.y;\\n        this.camera.position.z = this.position.z;\\n      }\\n\\n      this.$emit('camera', this.camera);\\n    },\\n    watch: {\\n      position: function position() {\\n        if (this.position) {\\n          this.camera.position.x = this.position.x;\\n          this.camera.position.y = this.position.y;\\n          this.camera.position.z = this.position.z;\\n        }\\n      },\\n      aspect: function aspect() {\\n        if (this.camera) {\\n          this.camera.aspect = this.aspect;\\n          this.camera.updateProjectionMatrix();\\n        }\\n      }\\n    }\\n  };\\n});\\n\\n(function (global, factory) {\\n  if (typeof define === \\\"function\\\" && define.amd) {\\n    define(\\\"@/webgl/System/Raycaster.vue\\\", [\\\"exports\\\"], factory);\\n  } else if (typeof exports !== \\\"undefined\\\") {\\n    factory(exports);\\n  } else {\\n    var mod = {\\n      exports: {}\\n    };\\n    factory(mod.exports);\\n    global.webglSystemRaycasterVue = mod.exports;\\n  }\\n})(this, function (exports) {\\n  \\\"use strict\\\";\\n\\n  Object.defineProperty(exports, \\\"__esModule\\\", {\\n    value: true\\n  });\\n\\n  function _instanceof(left, right) {\\n    if (right != null && typeof Symbol !== \\\"undefined\\\" && right[Symbol.hasInstance]) {\\n      return right[Symbol.hasInstance](left);\\n    } else {\\n      return left instanceof right;\\n    }\\n  }\\n\\n  var css = \\\"\\\\n\\\\n\\\";\\n  var head = document.head || document.getElementsByTagName('head')[0];\\n  var style = document.createElement('style');\\n  style.type = 'text/css';\\n\\n  if (style.styleSheet) {\\n    style.styleSheet.cssText = css;\\n  } else {\\n    style.appendChild(document.createTextNode(css));\\n  }\\n\\n  function addScope(styleElt, scopeName) {\\n    function process() {\\n      var sheet = styleElt.sheet;\\n      var rules = sheet.cssRules;\\n\\n      for (var i = 0; i < rules.length; ++i) {\\n        var rule = rules[i];\\n        if (rule.type !== 1) continue;\\n        var scopedSelectors = [];\\n        rule.selectorText.split(/s*,s*/).forEach(function (sel) {\\n          scopedSelectors.push(scopeName + ' ' + sel);\\n          var segments = sel.match(/([^ :]+)(.+)?/);\\n          scopedSelectors.push(segments[1] + scopeName + (segments[2] || ''));\\n        });\\n        var scopedRule = scopedSelectors.join(',') + rule.cssText.substr(rule.selectorText.length);\\n        sheet.deleteRule(i);\\n        sheet.insertRule(scopedRule, i);\\n      }\\n    }\\n\\n    try {\\n      // firefox may fail sheet.cssRules with InvalidAccessError\\n      process();\\n    } catch (ex) {\\n      if (_instanceof(ex, DOMException) && ex.code === DOMException.INVALID_ACCESS_ERR) {\\n        styleElt.sheet.disabled = true;\\n        styleElt.addEventListener('load', function onStyleLoaded() {\\n          styleElt.removeEventListener('load', onStyleLoaded); // firefox need this timeout otherwise we have to use document.importNode(style, true)\\n\\n          setTimeout(function () {\\n            process();\\n            styleElt.sheet.disabled = false;\\n          });\\n        });\\n        return;\\n      }\\n\\n      throw ex;\\n    }\\n  }\\n\\n  head.appendChild(style);\\n\\n  if (false) {\\n    addScope(style, '[data-s-17h6]');\\n  }\\n\\n  exports.default = {\\n    template: \\\"\\\\n<divdata-s-17h6></div>\\\\n\\\",\\n    data: function data() {\\n      return {\\n        rAFID: 0,\\n        mouse: null,\\n        raycast: function raycast() {},\\n        clean: function clean() {},\\n        intersects: []\\n      };\\n    },\\n    props: {\\n      scene: {},\\n      camera: {},\\n      toucher: {}\\n    },\\n    created: function created() {},\\n    activated: function activated() {\\n      var _this = this;\\n\\n      var raycaster = new THREE.Raycaster();\\n      this.mouse = new THREE.Vector2();\\n      this.toucher.addEventListener('mousemove', this.handleMV, false);\\n      this.toucher.addEventListener('click', this.handleClick, false);\\n\\n      this.clean = function () {\\n        _this.toucher.removeEventListener('click', _this.handleClick, false);\\n\\n        _this.toucher.removeEventListener('mousemove', _this.handleMV);\\n      };\\n\\n      var raycast = function raycast() {\\n        var mouse = _this.mouse;\\n        var scene = _this.scene;\\n        var camera = _this.camera;\\n        var restore = [];\\n\\n        _this.scene.traverse(function (ele) {\\n          if (ele.$skipRayCast) {\\n            restore.push({\\n              parent: ele.parent,\\n              ele: ele\\n            });\\n            ele.parent.remove(ele);\\n          }\\n        }); // update the picking ray with the camera and mouse position\\n\\n\\n        raycaster.setFromCamera(mouse, camera); // calculate objects intersecting the picking ray\\n\\n        var intersects = raycaster.intersectObjects(scene.children, true);\\n        restore.forEach(function (item) {\\n          item.parent.add(item.ele);\\n        });\\n        return intersects;\\n      };\\n\\n      this.raycast = raycast;\\n\\n      var rAF = function rAF() {\\n        _this.rAFID = window.requestAnimationFrame(rAF); // this.raycast();\\n      };\\n\\n      this.rAFID = window.requestAnimationFrame(rAF);\\n    },\\n    deactivated: function deactivated() {\\n      window.cancelAnimationFrame(this.rAFID);\\n      this.clean();\\n    },\\n    methods: {\\n      handleClick: function handleClick(event) {\\n        this.$emit('click', {\\n          event: event,\\n          intersects: this.raycast()\\n        });\\n      },\\n      handleMV: function handleMV(event) {\\n        this.mouse.x = event.clientX / window.innerWidth * 2 - 1;\\n        this.mouse.y = -(event.clientY / window.innerHeight) * 2 + 1;\\n      }\\n    }\\n  };\\n});\\n\\n(function (global, factory) {\\n  if (typeof define === \\\"function\\\" && define.amd) {\\n    define(\\\"@/webgl/Material/MeshPhongMaterial.vue\\\", [\\\"exports\\\"], factory);\\n  } else if (typeof exports !== \\\"undefined\\\") {\\n    factory(exports);\\n  } else {\\n    var mod = {\\n      exports: {}\\n    };\\n    factory(mod.exports);\\n    global.webglMaterialMeshPhongMaterialVue = mod.exports;\\n  }\\n})(this, function (exports) {\\n  \\\"use strict\\\";\\n\\n  Object.defineProperty(exports, \\\"__esModule\\\", {\\n    value: true\\n  });\\n\\n  function _instanceof(left, right) {\\n    if (right != null && typeof Symbol !== \\\"undefined\\\" && right[Symbol.hasInstance]) {\\n      return right[Symbol.hasInstance](left);\\n    } else {\\n      return left instanceof right;\\n    }\\n  }\\n\\n  var css = \\\"\\\\n\\\\n\\\";\\n  var head = document.head || document.getElementsByTagName('head')[0];\\n  var style = document.createElement('style');\\n  style.type = 'text/css';\\n\\n  if (style.styleSheet) {\\n    style.styleSheet.cssText = css;\\n  } else {\\n    style.appendChild(document.createTextNode(css));\\n  }\\n\\n  function addScope(styleElt, scopeName) {\\n    function process() {\\n      var sheet = styleElt.sheet;\\n      var rules = sheet.cssRules;\\n\\n      for (var i = 0; i < rules.length; ++i) {\\n        var rule = rules[i];\\n        if (rule.type !== 1) continue;\\n        var scopedSelectors = [];\\n        rule.selectorText.split(/s*,s*/).forEach(function (sel) {\\n          scopedSelectors.push(scopeName + ' ' + sel);\\n          var segments = sel.match(/([^ :]+)(.+)?/);\\n          scopedSelectors.push(segments[1] + scopeName + (segments[2] || ''));\\n        });\\n        var scopedRule = scopedSelectors.join(',') + rule.cssText.substr(rule.selectorText.length);\\n        sheet.deleteRule(i);\\n        sheet.insertRule(scopedRule, i);\\n      }\\n    }\\n\\n    try {\\n      // firefox may fail sheet.cssRules with InvalidAccessError\\n      process();\\n    } catch (ex) {\\n      if (_instanceof(ex, DOMException) && ex.code === DOMException.INVALID_ACCESS_ERR) {\\n        styleElt.sheet.disabled = true;\\n        styleElt.addEventListener('load', function onStyleLoaded() {\\n          styleElt.removeEventListener('load', onStyleLoaded); // firefox need this timeout otherwise we have to use document.importNode(style, true)\\n\\n          setTimeout(function () {\\n            process();\\n            styleElt.sheet.disabled = false;\\n          });\\n        });\\n        return;\\n      }\\n\\n      throw ex;\\n    }\\n  }\\n\\n  head.appendChild(style);\\n\\n  if (false) {\\n    addScope(style, '[data-s-1cd7]');\\n  }\\n\\n  var THREE = window.THREE;\\n  exports.default = {\\n    template: \\\"\\\\n<div class=\\\\\\\"mesh-phong-material\\\\\\\"data-s-1cd7></div>\\\\n\\\",\\n    props: {\\n      color: {\\n        default: function _default() {\\n          return Math.random() * 0xffffff;\\n        }\\n      }\\n    },\\n    data: function data() {\\n      return {\\n        material: false\\n      };\\n    },\\n    created: function created() {\\n      this.material = new THREE.MeshPhongMaterial({\\n        color: new THREE.Color(this.color),\\n        specular: new THREE.Color(0x111111),\\n        shininess: 50\\n      });\\n      this.$parent.$emit('material', this.material);\\n    }\\n  };\\n});\\n\\n(function (global, factory) {\\n  if (typeof define === \\\"function\\\" && define.amd) {\\n    define(\\\"@/webgl/Material/ShaderMaterial.vue\\\", [\\\"exports\\\"], factory);\\n  } else if (typeof exports !== \\\"undefined\\\") {\\n    factory(exports);\\n  } else {\\n    var mod = {\\n      exports: {}\\n    };\\n    factory(mod.exports);\\n    global.webglMaterialShaderMaterialVue = mod.exports;\\n  }\\n})(this, function (exports) {\\n  \\\"use strict\\\";\\n\\n  Object.defineProperty(exports, \\\"__esModule\\\", {\\n    value: true\\n  });\\n\\n  function _instanceof(left, right) {\\n    if (right != null && typeof Symbol !== \\\"undefined\\\" && right[Symbol.hasInstance]) {\\n      return right[Symbol.hasInstance](left);\\n    } else {\\n      return left instanceof right;\\n    }\\n  }\\n\\n  var css = \\\"\\\\n\\\\n\\\";\\n  var head = document.head || document.getElementsByTagName('head')[0];\\n  var style = document.createElement('style');\\n  style.type = 'text/css';\\n\\n  if (style.styleSheet) {\\n    style.styleSheet.cssText = css;\\n  } else {\\n    style.appendChild(document.createTextNode(css));\\n  }\\n\\n  function addScope(styleElt, scopeName) {\\n    function process() {\\n      var sheet = styleElt.sheet;\\n      var rules = sheet.cssRules;\\n\\n      for (var i = 0; i < rules.length; ++i) {\\n        var rule = rules[i];\\n        if (rule.type !== 1) continue;\\n        var scopedSelectors = [];\\n        rule.selectorText.split(/s*,s*/).forEach(function (sel) {\\n          scopedSelectors.push(scopeName + ' ' + sel);\\n          var segments = sel.match(/([^ :]+)(.+)?/);\\n          scopedSelectors.push(segments[1] + scopeName + (segments[2] || ''));\\n        });\\n        var scopedRule = scopedSelectors.join(',') + rule.cssText.substr(rule.selectorText.length);\\n        sheet.deleteRule(i);\\n        sheet.insertRule(scopedRule, i);\\n      }\\n    }\\n\\n    try {\\n      // firefox may fail sheet.cssRules with InvalidAccessError\\n      process();\\n    } catch (ex) {\\n      if (_instanceof(ex, DOMException) && ex.code === DOMException.INVALID_ACCESS_ERR) {\\n        styleElt.sheet.disabled = true;\\n        styleElt.addEventListener('load', function onStyleLoaded() {\\n          styleElt.removeEventListener('load', onStyleLoaded); // firefox need this timeout otherwise we have to use document.importNode(style, true)\\n\\n          setTimeout(function () {\\n            process();\\n            styleElt.sheet.disabled = false;\\n          });\\n        });\\n        return;\\n      }\\n\\n      throw ex;\\n    }\\n  }\\n\\n  head.appendChild(style);\\n\\n  if (false) {\\n    addScope(style, '[data-s-ruj]');\\n  }\\n\\n  var THREE = window.THREE;\\n  exports.default = {\\n    template: \\\"\\\\n<div class=\\\\\\\"mesh-basic-material\\\\\\\"data-s-ruj></div>\\\\n\\\",\\n    data: function data() {\\n      return {\\n        material: false\\n      };\\n    },\\n    props: {\\n      vs: {\\n        default: \\\"void main ( void ) {\\\\n  vec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\\\\n  vec4 outputPos = projectionMatrix * mvPosition;\\\\n  gl_Position = outputPos;\\\\n}\\\"\\n      },\\n      fs: {\\n        default: \\\"void main () {\\\\n  gl_FragColor = vec4(vec3(0.5), 1.0);\\\\n}\\\"\\n      },\\n      uniforms: {\\n        default: function _default() {\\n          return {};\\n        }\\n      }\\n    },\\n    watch: {\\n      vs: function vs() {\\n        this.initShader();\\n      },\\n      fs: function fs() {\\n        this.initShader();\\n      },\\n      uniforms: function uniforms() {\\n        this.initShader();\\n      }\\n    },\\n    mounted: function mounted() {\\n      this.initShader();\\n    },\\n    methods: {\\n      initShader: function initShader() {\\n        try {\\n          this.material = new THREE.ShaderMaterial({\\n            uniforms: { ...this.uniforms // ,\\n              // ...THREE.UniformsUtils.merge([\\n              //   THREE.UniformsLib.common,\\n              //   THREE.UniformsLib.aomap,\\n              //   THREE.UniformsLib.lightmap,\\n              //   THREE.UniformsLib.emissivemap,\\n              //   THREE.UniformsLib.bumpmap,\\n              //   THREE.UniformsLib.normalmap,\\n              //   THREE.UniformsLib.displacementmap,\\n              //   THREE.UniformsLib.fog,\\n              //   THREE.UniformsLib.lights,\\n              //   THREE.UniformsLib.shadowmap,\\n              //   {\\n              //     flipEnvMap: {\\n              //       value: 1\\n              //     },\\n              //     emissive: {\\n              //       value: new THREE.Color(0x000000)\\n              //     },\\n              //     specular: {\\n              //       value: new THREE.Color(0x111111)\\n              //     },\\n              //     shininess: {\\n              //       value: 30\\n              //     },\\n              //     envMap: {\\n              //       // value: cubeCamera.renderTarget\\n              //     }\\n              //   }\\n              // ])\\n\\n            },\\n            vertexShader: this.vs || this.$options.props.vs.default,\\n            fragmentShader: this.fs || this.$options.props.fs.default\\n          });\\n          this.$parent.$emit('material', this.material);\\n        } catch (e) {\\n          console.log(e);\\n        }\\n      }\\n    }\\n  };\\n});\\n\\n(function (global, factory) {\\n  if (typeof define === \\\"function\\\" && define.amd) {\\n    define(\\\"@/webgl/Element/PointLight.vue\\\", [\\\"exports\\\"], factory);\\n  } else if (typeof exports !== \\\"undefined\\\") {\\n    factory(exports);\\n  } else {\\n    var mod = {\\n      exports: {}\\n    };\\n    factory(mod.exports);\\n    global.webglElementPointLightVue = mod.exports;\\n  }\\n})(this, function (exports) {\\n  \\\"use strict\\\";\\n\\n  Object.defineProperty(exports, \\\"__esModule\\\", {\\n    value: true\\n  });\\n\\n  function _instanceof(left, right) {\\n    if (right != null && typeof Symbol !== \\\"undefined\\\" && right[Symbol.hasInstance]) {\\n      return right[Symbol.hasInstance](left);\\n    } else {\\n      return left instanceof right;\\n    }\\n  }\\n\\n  var css = \\\"\\\\n\\\\n\\\";\\n  var head = document.head || document.getElementsByTagName('head')[0];\\n  var style = document.createElement('style');\\n  style.type = 'text/css';\\n\\n  if (style.styleSheet) {\\n    style.styleSheet.cssText = css;\\n  } else {\\n    style.appendChild(document.createTextNode(css));\\n  }\\n\\n  function addScope(styleElt, scopeName) {\\n    function process() {\\n      var sheet = styleElt.sheet;\\n      var rules = sheet.cssRules;\\n\\n      for (var i = 0; i < rules.length; ++i) {\\n        var rule = rules[i];\\n        if (rule.type !== 1) continue;\\n        var scopedSelectors = [];\\n        rule.selectorText.split(/s*,s*/).forEach(function (sel) {\\n          scopedSelectors.push(scopeName + ' ' + sel);\\n          var segments = sel.match(/([^ :]+)(.+)?/);\\n          scopedSelectors.push(segments[1] + scopeName + (segments[2] || ''));\\n        });\\n        var scopedRule = scopedSelectors.join(',') + rule.cssText.substr(rule.selectorText.length);\\n        sheet.deleteRule(i);\\n        sheet.insertRule(scopedRule, i);\\n      }\\n    }\\n\\n    try {\\n      // firefox may fail sheet.cssRules with InvalidAccessError\\n      process();\\n    } catch (ex) {\\n      if (_instanceof(ex, DOMException) && ex.code === DOMException.INVALID_ACCESS_ERR) {\\n        styleElt.sheet.disabled = true;\\n        styleElt.addEventListener('load', function onStyleLoaded() {\\n          styleElt.removeEventListener('load', onStyleLoaded); // firefox need this timeout otherwise we have to use document.importNode(style, true)\\n\\n          setTimeout(function () {\\n            process();\\n            styleElt.sheet.disabled = false;\\n          });\\n        });\\n        return;\\n      }\\n\\n      throw ex;\\n    }\\n  }\\n\\n  head.appendChild(style);\\n\\n  if (false) {\\n    addScope(style, '[data-s-1aw6]');\\n  }\\n\\n  var THREE = window.THREE;\\n  exports.default = {\\n    template: \\\"\\\\n  <div class=\\\\\\\"light-point\\\\\\\"data-s-1aw6></div>\\\\n\\\",\\n    props: {\\n      color: {\\n        default: function _default() {\\n          return 0xffffff;\\n        }\\n      }\\n    },\\n    data: function data() {\\n      return {\\n        light: false\\n      };\\n    },\\n    mounted: function mounted() {\\n      this.light = new THREE.PointLight({\\n        color: new THREE.Color(this.color)\\n      });\\n      this.$emit('element', this.light);\\n      this.$parent.$emit('add', this.light);\\n    },\\n    beforeDestroy: function beforeDestroy() {\\n      this.$parent.$emit('remove', this.light);\\n    }\\n  };\\n});\\n\\n(function (global, factory) {\\n  if (typeof define === \\\"function\\\" && define.amd) {\\n    define(\\\"@/webgl/Element/Object3D.vue\\\", [\\\"exports\\\"], factory);\\n  } else if (typeof exports !== \\\"undefined\\\") {\\n    factory(exports);\\n  } else {\\n    var mod = {\\n      exports: {}\\n    };\\n    factory(mod.exports);\\n    global.webglElementObject3DVue = mod.exports;\\n  }\\n})(this, function (exports) {\\n  \\\"use strict\\\";\\n\\n  Object.defineProperty(exports, \\\"__esModule\\\", {\\n    value: true\\n  });\\n\\n  function _instanceof(left, right) {\\n    if (right != null && typeof Symbol !== \\\"undefined\\\" && right[Symbol.hasInstance]) {\\n      return right[Symbol.hasInstance](left);\\n    } else {\\n      return left instanceof right;\\n    }\\n  }\\n\\n  var css = \\\"\\\\n\\\\n\\\";\\n  var head = document.head || document.getElementsByTagName('head')[0];\\n  var style = document.createElement('style');\\n  style.type = 'text/css';\\n\\n  if (style.styleSheet) {\\n    style.styleSheet.cssText = css;\\n  } else {\\n    style.appendChild(document.createTextNode(css));\\n  }\\n\\n  function addScope(styleElt, scopeName) {\\n    function process() {\\n      var sheet = styleElt.sheet;\\n      var rules = sheet.cssRules;\\n\\n      for (var i = 0; i < rules.length; ++i) {\\n        var rule = rules[i];\\n        if (rule.type !== 1) continue;\\n        var scopedSelectors = [];\\n        rule.selectorText.split(/s*,s*/).forEach(function (sel) {\\n          scopedSelectors.push(scopeName + ' ' + sel);\\n          var segments = sel.match(/([^ :]+)(.+)?/);\\n          scopedSelectors.push(segments[1] + scopeName + (segments[2] || ''));\\n        });\\n        var scopedRule = scopedSelectors.join(',') + rule.cssText.substr(rule.selectorText.length);\\n        sheet.deleteRule(i);\\n        sheet.insertRule(scopedRule, i);\\n      }\\n    }\\n\\n    try {\\n      // firefox may fail sheet.cssRules with InvalidAccessError\\n      process();\\n    } catch (ex) {\\n      if (_instanceof(ex, DOMException) && ex.code === DOMException.INVALID_ACCESS_ERR) {\\n        styleElt.sheet.disabled = true;\\n        styleElt.addEventListener('load', function onStyleLoaded() {\\n          styleElt.removeEventListener('load', onStyleLoaded); // firefox need this timeout otherwise we have to use document.importNode(style, true)\\n\\n          setTimeout(function () {\\n            process();\\n            styleElt.sheet.disabled = false;\\n          });\\n        });\\n        return;\\n      }\\n\\n      throw ex;\\n    }\\n  }\\n\\n  head.appendChild(style);\\n\\n  if (false) {\\n    addScope(style, '[data-s-1lof]');\\n  }\\n\\n  var THREE = window.THREE;\\n  exports.default = {\\n    template: \\\"\\\\n<div class=\\\\\\\"object-3d\\\\\\\"data-s-1lof><slot></slot></div>\\\\n\\\",\\n    data: function data() {\\n      return {\\n        object3d: false\\n      };\\n    },\\n    props: {\\n      visible: {\\n        default: true\\n      },\\n      px: {\\n        default: 0\\n      },\\n      py: {\\n        default: 0\\n      },\\n      pz: {\\n        default: 0\\n      },\\n      sx: {\\n        default: 1\\n      },\\n      sy: {\\n        default: 1\\n      },\\n      sz: {\\n        default: 1\\n      },\\n      rx: {\\n        default: 0\\n      },\\n      ry: {\\n        default: 0\\n      },\\n      rz: {\\n        default: 0\\n      }\\n    },\\n    watch: {\\n      visible: function visible() {\\n        this.object3d.setVisible(this.visible);\\n      },\\n      px: function px() {\\n        this.updatePosition('x', this.px);\\n      },\\n      py: function py() {\\n        this.updatePosition('y', this.py);\\n      },\\n      pz: function pz() {\\n        this.updatePosition('z', this.pz);\\n      },\\n      sx: function sx() {\\n        this.updateScale('x', this.sx);\\n      },\\n      sy: function sy() {\\n        this.updateScale('y', this.sy);\\n      },\\n      sz: function sz() {\\n        this.updateScale('z', this.sz);\\n      },\\n      rx: function rx() {\\n        this.updateRotation('x', this.rx);\\n      },\\n      ry: function ry() {\\n        this.updateRotation('y', this.ry);\\n      },\\n      rz: function rz() {\\n        this.updateRotation('z', this.rz);\\n      }\\n    },\\n    created: function created() {\\n      var _this = this;\\n\\n      this.object3d = new THREE.Object3D();\\n      this.$emit('element', this.object3d);\\n      this.object3d.visible = true;\\n      this.updatePosition();\\n      this.updateScale();\\n      this.updateRotation();\\n      this.$on('add', function (v) {\\n        _this.object3d.add(v);\\n      });\\n      this.$on('remove', function (v) {\\n        _this.object3d.remove(v);\\n      });\\n    },\\n    mounted: function mounted() {\\n      this.$parent.$emit('add', this.object3d);\\n    },\\n    beforeDestroy: function beforeDestroy() {\\n      this.$parent.$emit('remove', this.object3d);\\n    },\\n    methods: {\\n      updatePosition: function updatePosition(key, val) {\\n        if (key) {\\n          this.object3d.position[key] = val;\\n        } else {\\n          this.object3d.position.set(this.px, this.py, this.pz);\\n        }\\n      },\\n      updateScale: function updateScale(key, val) {\\n        if (key) {\\n          this.object3d.scale[key] = val;\\n        } else {\\n          this.object3d.scale.set(this.sx, this.sy, this.sz);\\n        }\\n      },\\n      updateRotation: function updateRotation(key, val) {\\n        if (key) {\\n          this.object3d.rotation[key] = val;\\n        } else {\\n          this.object3d.rotation.set(this.rx, this.ry, this.rz);\\n        }\\n      }\\n    }\\n  };\\n});\\n\\n(function (global, factory) {\\n  if (typeof define === \\\"function\\\" && define.amd) {\\n    define(\\\"@/webgl/Element/Points.vue\\\", [\\\"exports\\\", \\\"@/three.js\\\"], factory);\\n  } else if (typeof exports !== \\\"undefined\\\") {\\n    factory(exports, require(\\\"@/three.js\\\"));\\n  } else {\\n    var mod = {\\n      exports: {}\\n    };\\n    factory(mod.exports, global.threeJs);\\n    global.webglElementPointsVue = mod.exports;\\n  }\\n})(this, function (exports, _three) {\\n  \\\"use strict\\\";\\n\\n  Object.defineProperty(exports, \\\"__esModule\\\", {\\n    value: true\\n  });\\n\\n  var _three2 = _interopRequireDefault(_three);\\n\\n  function _interopRequireDefault(obj) {\\n    return obj && obj.__esModule ? obj : {\\n      default: obj\\n    };\\n  }\\n\\n  function _instanceof(left, right) {\\n    if (right != null && typeof Symbol !== \\\"undefined\\\" && right[Symbol.hasInstance]) {\\n      return right[Symbol.hasInstance](left);\\n    } else {\\n      return left instanceof right;\\n    }\\n  }\\n\\n  var css = \\\"\\\\n\\\\n\\\";\\n  var head = document.head || document.getElementsByTagName('head')[0];\\n  var style = document.createElement('style');\\n  style.type = 'text/css';\\n\\n  if (style.styleSheet) {\\n    style.styleSheet.cssText = css;\\n  } else {\\n    style.appendChild(document.createTextNode(css));\\n  }\\n\\n  function addScope(styleElt, scopeName) {\\n    function process() {\\n      var sheet = styleElt.sheet;\\n      var rules = sheet.cssRules;\\n\\n      for (var i = 0; i < rules.length; ++i) {\\n        var rule = rules[i];\\n        if (rule.type !== 1) continue;\\n        var scopedSelectors = [];\\n        rule.selectorText.split(/s*,s*/).forEach(function (sel) {\\n          scopedSelectors.push(scopeName + ' ' + sel);\\n          var segments = sel.match(/([^ :]+)(.+)?/);\\n          scopedSelectors.push(segments[1] + scopeName + (segments[2] || ''));\\n        });\\n        var scopedRule = scopedSelectors.join(',') + rule.cssText.substr(rule.selectorText.length);\\n        sheet.deleteRule(i);\\n        sheet.insertRule(scopedRule, i);\\n      }\\n    }\\n\\n    try {\\n      // firefox may fail sheet.cssRules with InvalidAccessError\\n      process();\\n    } catch (ex) {\\n      if (_instanceof(ex, DOMException) && ex.code === DOMException.INVALID_ACCESS_ERR) {\\n        styleElt.sheet.disabled = true;\\n        styleElt.addEventListener('load', function onStyleLoaded() {\\n          styleElt.removeEventListener('load', onStyleLoaded); // firefox need this timeout otherwise we have to use document.importNode(style, true)\\n\\n          setTimeout(function () {\\n            process();\\n            styleElt.sheet.disabled = false;\\n          });\\n        });\\n        return;\\n      }\\n\\n      throw ex;\\n    }\\n  }\\n\\n  head.appendChild(style);\\n\\n  if (false) {\\n    addScope(style, '[data-s-acy]');\\n  }\\n\\n  exports.default = {\\n    template: \\\"\\\\n  <div class=\\\\\\\"points\\\\\\\"data-s-acy>\\\\n    <slot>\\\\n    </slot>\\\\n  </div>\\\\n\\\",\\n    props: {\\n      position: {}\\n    },\\n    data: function data() {\\n      return {\\n        element: false,\\n        points: false,\\n        material: false,\\n        geometry: false\\n      };\\n    },\\n    created: function created() {\\n      var _this = this;\\n\\n      this.element = this.points = new _three2.default.Points();\\n      this.$parent.$emit('add', this.points);\\n      this.$emit('element', this.points);\\n      this.$on('material', function (v) {\\n        _this.material = v;\\n\\n        _this.tryUpdateMaterial();\\n      });\\n      this.$on('geometry', function (v) {\\n        _this.geometry = v;\\n\\n        _this.tryUpdateGeometry();\\n      });\\n    },\\n    beforeDestroy: function beforeDestroy() {\\n      this.uninstall();\\n    },\\n    methods: {\\n      tryUpdateGeometry: function tryUpdateGeometry(v) {\\n        if (this.points) {\\n          this.points.geometry = this.geometry;\\n        }\\n      },\\n      tryUpdateMaterial: function tryUpdateMaterial(v) {\\n        if (this.points) {\\n          this.points.material = this.material;\\n        }\\n      },\\n      uninstall: function uninstall() {\\n        this.$parent.$emit('remove', this.points);\\n      }\\n    }\\n  };\\n});\\n\\n(function (global, factory) {\\n  if (typeof define === \\\"function\\\" && define.amd) {\\n    define(\\\"@/webgl/Element/Mesh.vue\\\", [\\\"exports\\\"], factory);\\n  } else if (typeof exports !== \\\"undefined\\\") {\\n    factory(exports);\\n  } else {\\n    var mod = {\\n      exports: {}\\n    };\\n    factory(mod.exports);\\n    global.webglElementMeshVue = mod.exports;\\n  }\\n})(this, function (exports) {\\n  \\\"use strict\\\";\\n\\n  Object.defineProperty(exports, \\\"__esModule\\\", {\\n    value: true\\n  });\\n\\n  function _instanceof(left, right) {\\n    if (right != null && typeof Symbol !== \\\"undefined\\\" && right[Symbol.hasInstance]) {\\n      return right[Symbol.hasInstance](left);\\n    } else {\\n      return left instanceof right;\\n    }\\n  }\\n\\n  var css = \\\"\\\\n\\\\n\\\";\\n  var head = document.head || document.getElementsByTagName('head')[0];\\n  var style = document.createElement('style');\\n  style.type = 'text/css';\\n\\n  if (style.styleSheet) {\\n    style.styleSheet.cssText = css;\\n  } else {\\n    style.appendChild(document.createTextNode(css));\\n  }\\n\\n  function addScope(styleElt, scopeName) {\\n    function process() {\\n      var sheet = styleElt.sheet;\\n      var rules = sheet.cssRules;\\n\\n      for (var i = 0; i < rules.length; ++i) {\\n        var rule = rules[i];\\n        if (rule.type !== 1) continue;\\n        var scopedSelectors = [];\\n        rule.selectorText.split(/s*,s*/).forEach(function (sel) {\\n          scopedSelectors.push(scopeName + ' ' + sel);\\n          var segments = sel.match(/([^ :]+)(.+)?/);\\n          scopedSelectors.push(segments[1] + scopeName + (segments[2] || ''));\\n        });\\n        var scopedRule = scopedSelectors.join(',') + rule.cssText.substr(rule.selectorText.length);\\n        sheet.deleteRule(i);\\n        sheet.insertRule(scopedRule, i);\\n      }\\n    }\\n\\n    try {\\n      // firefox may fail sheet.cssRules with InvalidAccessError\\n      process();\\n    } catch (ex) {\\n      if (_instanceof(ex, DOMException) && ex.code === DOMException.INVALID_ACCESS_ERR) {\\n        styleElt.sheet.disabled = true;\\n        styleElt.addEventListener('load', function onStyleLoaded() {\\n          styleElt.removeEventListener('load', onStyleLoaded); // firefox need this timeout otherwise we have to use document.importNode(style, true)\\n\\n          setTimeout(function () {\\n            process();\\n            styleElt.sheet.disabled = false;\\n          });\\n        });\\n        return;\\n      }\\n\\n      throw ex;\\n    }\\n  }\\n\\n  head.appendChild(style);\\n\\n  if (false) {\\n    addScope(style, '[data-s-m1j]');\\n  }\\n\\n  var THREE = window.THREE;\\n  exports.default = {\\n    template: \\\"\\\\n  <div class=\\\\\\\"mesh\\\\\\\"data-s-m1j>\\\\n    <slot>\\\\n    </slot>\\\\n  </div>\\\\n\\\",\\n    props: {},\\n    data: function data() {\\n      return {\\n        element: false,\\n        mesh: false,\\n        material: false,\\n        geometry: false\\n      };\\n    },\\n    created: function created() {\\n      var _this = this;\\n\\n      this.element = this.mesh = new THREE.Mesh();\\n      this.$parent.$emit('add', this.mesh);\\n      this.$emit('element', this.mesh);\\n      this.$on('material', function (v) {\\n        _this.material = v;\\n\\n        _this.tryUpdateMaterial();\\n      });\\n      this.$on('geometry', function (v) {\\n        _this.geometry = v;\\n\\n        _this.tryUpdateGeometry();\\n      });\\n    },\\n    beforeDestroy: function beforeDestroy() {\\n      this.uninstall();\\n    },\\n    methods: {\\n      tryUpdateGeometry: function tryUpdateGeometry(v) {\\n        if (this.mesh) {\\n          this.mesh.geometry = this.geometry;\\n        }\\n      },\\n      tryUpdateMaterial: function tryUpdateMaterial(v) {\\n        if (this.mesh) {\\n          this.mesh.material = this.material;\\n        }\\n      },\\n      uninstall: function uninstall() {\\n        this.$parent.$emit('remove', this.mesh);\\n      }\\n    }\\n  };\\n});\\n\\n(function (global, factory) {\\n  if (typeof define === \\\"function\\\" && define.amd) {\\n    define(\\\"@/webgl/Geo/SphereBufferGeometry.vue\\\", [\\\"exports\\\"], factory);\\n  } else if (typeof exports !== \\\"undefined\\\") {\\n    factory(exports);\\n  } else {\\n    var mod = {\\n      exports: {}\\n    };\\n    factory(mod.exports);\\n    global.webglGeoSphereBufferGeometryVue = mod.exports;\\n  }\\n})(this, function (exports) {\\n  \\\"use strict\\\";\\n\\n  Object.defineProperty(exports, \\\"__esModule\\\", {\\n    value: true\\n  });\\n\\n  function _instanceof(left, right) {\\n    if (right != null && typeof Symbol !== \\\"undefined\\\" && right[Symbol.hasInstance]) {\\n      return right[Symbol.hasInstance](left);\\n    } else {\\n      return left instanceof right;\\n    }\\n  }\\n\\n  var css = \\\"\\\\n\\\\n\\\";\\n  var head = document.head || document.getElementsByTagName('head')[0];\\n  var style = document.createElement('style');\\n  style.type = 'text/css';\\n\\n  if (style.styleSheet) {\\n    style.styleSheet.cssText = css;\\n  } else {\\n    style.appendChild(document.createTextNode(css));\\n  }\\n\\n  function addScope(styleElt, scopeName) {\\n    function process() {\\n      var sheet = styleElt.sheet;\\n      var rules = sheet.cssRules;\\n\\n      for (var i = 0; i < rules.length; ++i) {\\n        var rule = rules[i];\\n        if (rule.type !== 1) continue;\\n        var scopedSelectors = [];\\n        rule.selectorText.split(/s*,s*/).forEach(function (sel) {\\n          scopedSelectors.push(scopeName + ' ' + sel);\\n          var segments = sel.match(/([^ :]+)(.+)?/);\\n          scopedSelectors.push(segments[1] + scopeName + (segments[2] || ''));\\n        });\\n        var scopedRule = scopedSelectors.join(',') + rule.cssText.substr(rule.selectorText.length);\\n        sheet.deleteRule(i);\\n        sheet.insertRule(scopedRule, i);\\n      }\\n    }\\n\\n    try {\\n      // firefox may fail sheet.cssRules with InvalidAccessError\\n      process();\\n    } catch (ex) {\\n      if (_instanceof(ex, DOMException) && ex.code === DOMException.INVALID_ACCESS_ERR) {\\n        styleElt.sheet.disabled = true;\\n        styleElt.addEventListener('load', function onStyleLoaded() {\\n          styleElt.removeEventListener('load', onStyleLoaded); // firefox need this timeout otherwise we have to use document.importNode(style, true)\\n\\n          setTimeout(function () {\\n            process();\\n            styleElt.sheet.disabled = false;\\n          });\\n        });\\n        return;\\n      }\\n\\n      throw ex;\\n    }\\n  }\\n\\n  head.appendChild(style);\\n\\n  if (false) {\\n    addScope(style, '[data-s-13kz]');\\n  }\\n\\n  var THREE = window.THREE;\\n  exports.default = {\\n    template: \\\"\\\\n  <div class=\\\\\\\"geo-sphere\\\\\\\"data-s-13kz></div>\\\\n\\\",\\n    data: function data() {\\n      return {\\n        geometry: false\\n      };\\n    },\\n    mounted: function mounted() {\\n      var geometry = new THREE.SphereBufferGeometry(2, 256, 256);\\n      this.$parent.$emit('geometry', geometry);\\n    }\\n  };\\n});\\n\\n(function (global, factory) {\\n  if (typeof define === \\\"function\\\" && define.amd) {\\n    define(\\\"@/shader/Simple/vs.vert\\\", [\\\"exports\\\"], factory);\\n  } else if (typeof exports !== \\\"undefined\\\") {\\n    factory(exports);\\n  } else {\\n    var mod = {\\n      exports: {}\\n    };\\n    factory(mod.exports);\\n    global.shaderSimpleVsVert = mod.exports;\\n  }\\n})(this, function (exports) {\\n  \\\"use strict\\\";\\n\\n  Object.defineProperty(exports, \\\"__esModule\\\", {\\n    value: true\\n  });\\n  exports.default = \\\"varying vec3 vPos;\\\\nuniform float time;\\\\n\\\\nvoid main (void) {\\\\n  vPos = position;\\\\n  vPos.x = vPos.x + sin(vPos.x + time);\\\\n  vPos.y = vPos.y + cos(vPos.y + time);\\\\n  vPos.z = vPos.z + tan(vPos.z + time);\\\\n  \\\\n  vec4 mvPosition = modelViewMatrix * vec4(position, 1.0);\\\\n  vec4 outputPos = projectionMatrix * mvPosition;\\\\n  gl_Position = outputPos;\\\\n  gl_PointSize = 1.0;\\\\n}\\\";\\n});\\n\\n(function (global, factory) {\\n  if (typeof define === \\\"function\\\" && define.amd) {\\n    define(\\\"@/shader/Simple/fs.frag\\\", [\\\"exports\\\"], factory);\\n  } else if (typeof exports !== \\\"undefined\\\") {\\n    factory(exports);\\n  } else {\\n    var mod = {\\n      exports: {}\\n    };\\n    factory(mod.exports);\\n    global.shaderSimpleFsFrag = mod.exports;\\n  }\\n})(this, function (exports) {\\n  \\\"use strict\\\";\\n\\n  Object.defineProperty(exports, \\\"__esModule\\\", {\\n    value: true\\n  });\\n  exports.default = \\\"varying vec3 vPos;\\\\n\\\\nvoid main () {\\\\n  gl_FragColor = vec4(vec3(vPos), 1.0);\\\\n}\\\";\\n});\\n\\n(function (global, factory) {\\n  if (typeof define === \\\"function\\\" && define.amd) {\\n    define(\\\"@/shader/Fling/vs.vert\\\", [\\\"exports\\\"], factory);\\n  } else if (typeof exports !== \\\"undefined\\\") {\\n    factory(exports);\\n  } else {\\n    var mod = {\\n      exports: {}\\n    };\\n    factory(mod.exports);\\n    global.shaderFlingVsVert = mod.exports;\\n  }\\n})(this, function (exports) {\\n  \\\"use strict\\\";\\n\\n  Object.defineProperty(exports, \\\"__esModule\\\", {\\n    value: true\\n  });\\n  exports.default = \\\"varying vec3 vPos;\\\\nuniform float time;\\\\n\\\\nvoid main (void) {\\\\n  vPos = position;\\\\n  vPos.x = vPos.x + sin(vPos.x + time);\\\\n  vPos.y = vPos.y + cos(vPos.y + time);\\\\n  vPos.z = vPos.z + tan(vPos.z + time);\\\\n  \\\\n  vec4 mvPosition = modelViewMatrix * vec4(vPos, 1.0);\\\\n  vec4 outputPos = projectionMatrix * mvPosition;\\\\n  gl_Position = outputPos;\\\\n}\\\";\\n});\\n\\n(function (global, factory) {\\n  if (typeof define === \\\"function\\\" && define.amd) {\\n    define(\\\"@/three.js\\\", [\\\"exports\\\"], factory);\\n  } else if (typeof exports !== \\\"undefined\\\") {\\n    factory(exports);\\n  } else {\\n    var mod = {\\n      exports: {}\\n    };\\n    factory(mod.exports);\\n    global.threeJs = mod.exports;\\n  }\\n})(this, function (exports) {\\n  \\\"use strict\\\";\\n\\n  Object.defineProperty(exports, \\\"__esModule\\\", {\\n    value: true\\n  });\\n  var THREE = window.THREE;\\n  exports.default = THREE;\\n});\\n\\n    var deps = [\\\"https://cdnjs.cloudflare.com/ajax/libs/vue/2.5.2/vue.min.js\\\",\\\"https://cdnjs.cloudflare.com/ajax/libs/vue-router/3.0.1/vue-router.min.js\\\",\\\"https://cdnjs.cloudflare.com/ajax/libs/tween.js/16.3.5/Tween.min.js\\\",\\\"https://cdnjs.cloudflare.com/ajax/libs/three.js/88/three.min.js\\\",\\\"https://threejs.org/examples/js/GPUComputationRenderer.js\\\"];\\n\\n    function preload (deps, done) {\\n      if (deps[0]) {\\n        var script = document.createElement('script');\\n        script.onload = function () {\\n          deps.shift();\\n          preload(deps, done);\\n        };\\n        script.src = deps[0];\\n        document.body.appendChild(script);\\n      } else {\\n        done();\\n      }\\n    }\\n\\n    preload(deps, function() {\\n      requireJSRequire(['@/main.js'], function () {\\n        setTimeout(() => {\\n          (window.opener || window.top).postMessage({ type: 'requirejs-ready' }, window.location.origin);\\n        }, 10);\\n      });\\n    })\\n  }\\n  new OMG_TvwRIDZZiwqMqqPRrAYIPpFa();\\n}());\\n\";\n\n\n    function addBlobScript(js) {\n      var url = URL.createObjectURL(new Blob([js], { type: 'script/javascript' }));\n      var newJS = document.createElement('script');\n      newJS.src = url;\n      document.body.appendChild(newJS);\n    }\n\n    addBlobScript(app);\n\n  }());\n  </script></body>\n</html>\n","origHtml":"<!DOCTYPE html>\n<html>\n  <head>\n    <meta charset=\"UTF-8\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge,chrome=1\">\n    <meta name=\"viewport\" content=\"width=device-width,initial-scale=1\">\n\n    <title>WebGL</title>\n\n    <meta name=\"author\" content=\"loklok\">\n    <meta name=\"description\" content=\"WebGL Art\">\n    <meta name=\"keywords\" content=\"WebGL, Art\">\n\n    <style type=\"text/css\">\n    </style>\n\n  </head>\n  <body>\n    <div id=\"app-attach-point\"></div>\n    \n    <script required src=\"https://cdnjs.cloudflare.com/ajax/libs/vue/2.5.2/vue.min.js\"></script>\n    <script required src=\"https://cdnjs.cloudflare.com/ajax/libs/vue-router/3.0.1/vue-router.min.js\"></script>\n    <script required src=\"https://cdnjs.cloudflare.com/ajax/libs/tween.js/16.3.5/Tween.min.js\"></script>\n    <script required src=\"https://cdnjs.cloudflare.com/ajax/libs/three.js/88/three.min.js\" integrity=\"sha256-6fhm481uY9c152qGWIVgE7KbzaCj5WjCi3BGIpZef2E=\" crossorigin=\"anonymous\"></script>\n    <script required src=\"https://threejs.org/examples/js/GPUComputationRenderer.js\"></script>\n  </body>\n</html>\n","js":"\n(function(){\n  /* eslint-disable */\n/** vim: et:ts=4:sw=4:sts=4\n * @license RequireJS 2.3.5 Copyright jQuery Foundation and other contributors.\n * Released under MIT license, https://github.com/requirejs/requirejs/blob/master/LICENSE\n */\n//Not using strict: uneven strict support in browsers, #392, and causes\n//problems with requirejs.exec()/transpiler plugins that may not be strict.\n/*jslint regexp: true, nomen: true, sloppy: true */\n/*global window, navigator, document, importScripts, setTimeout, opera */\n\nvar requireJSRequire, require, define;\n(function (global, setTimeout) {\n    var req, s, head, baseElement, dataMain, src,\n        interactiveScript, currentlyAddingScript, mainScript, subPath,\n        version = '2.3.5',\n        commentRegExp = /\\/\\*[\\s\\S]*?\\*\\/|([^:\"'=]|^)\\/\\/.*$/mg,\n        cjsRequireRegExp = /[^.]\\s*require\\s*\\(\\s*[\"']([^'\"\\s]+)[\"']\\s*\\)/g,\n        jsSuffixRegExp = /\\.js$/,\n        currDirRegExp = /^\\.\\//,\n        op = Object.prototype,\n        ostring = op.toString,\n        hasOwn = op.hasOwnProperty,\n        isBrowser = !!(typeof window !== 'undefined' && typeof navigator !== 'undefined' && window.document),\n        isWebWorker = !isBrowser && typeof importScripts !== 'undefined',\n        //PS3 indicates loaded and complete, but need to wait for complete\n        //specifically. Sequence is 'loading', 'loaded', execution,\n        // then 'complete'. The UA check is unfortunate, but not sure how\n        //to feature test w/o causing perf issues.\n        readyRegExp = isBrowser && navigator.platform === 'PLAYSTATION 3' ?\n                      /^complete$/ : /^(complete|loaded)$/,\n        defContextName = '_',\n        //Oh the tragedy, detecting opera. See the usage of isOpera for reason.\n        isOpera = typeof opera !== 'undefined' && opera.toString() === '[object Opera]',\n        contexts = {},\n        cfg = {},\n        globalDefQueue = [],\n        useInteractive = false;\n\n    //Could match something like ')//comment', do not lose the prefix to comment.\n    function commentReplace(match, singlePrefix) {\n        return singlePrefix || '';\n    }\n\n    function isFunction(it) {\n        return ostring.call(it) === '[object Function]';\n    }\n\n    function isArray(it) {\n        return ostring.call(it) === '[object Array]';\n    }\n\n    /**\n     * Helper function for iterating over an array. If the func returns\n     * a true value, it will break out of the loop.\n     */\n    function each(ary, func) {\n        if (ary) {\n            var i;\n            for (i = 0; i < ary.length; i += 1) {\n                if (ary[i] && func(ary[i], i, ary)) {\n                    break;\n                }\n            }\n        }\n    }\n\n    /**\n     * Helper function for iterating over an array backwards. If the func\n     * returns a true value, it will break out of the loop.\n     */\n    function eachReverse(ary, func) {\n        if (ary) {\n            var i;\n            for (i = ary.length - 1; i > -1; i -= 1) {\n                if (ary[i] && func(ary[i], i, ary)) {\n                    break;\n                }\n            }\n        }\n    }\n\n    function hasProp(obj, prop) {\n        return hasOwn.call(obj, prop);\n    }\n\n    function getOwn(obj, prop) {\n        return hasProp(obj, prop) && obj[prop];\n    }\n\n    /**\n     * Cycles over properties in an object and calls a function for each\n     * property value. If the function returns a truthy value, then the\n     * iteration is stopped.\n     */\n    function eachProp(obj, func) {\n        var prop;\n        for (prop in obj) {\n            if (hasProp(obj, prop)) {\n                if (func(obj[prop], prop)) {\n                    break;\n                }\n            }\n        }\n    }\n\n    /**\n     * Simple function to mix in properties from source into target,\n     * but only if target does not already have a property of the same name.\n     */\n    function mixin(target, source, force, deepStringMixin) {\n        if (source) {\n            eachProp(source, function (value, prop) {\n                if (force || !hasProp(target, prop)) {\n                    if (deepStringMixin && typeof value === 'object' && value &&\n                        !isArray(value) && !isFunction(value) &&\n                        !(value instanceof RegExp)) {\n\n                        if (!target[prop]) {\n                            target[prop] = {};\n                        }\n                        mixin(target[prop], value, force, deepStringMixin);\n                    } else {\n                        target[prop] = value;\n                    }\n                }\n            });\n        }\n        return target;\n    }\n\n    //Similar to Function.prototype.bind, but the 'this' object is specified\n    //first, since it is easier to read/figure out what 'this' will be.\n    function bind(obj, fn) {\n        return function () {\n            return fn.apply(obj, arguments);\n        };\n    }\n\n    function scripts() {\n        return document.getElementsByTagName('script');\n    }\n\n    function defaultOnError(err) {\n        throw err;\n    }\n\n    //Allow getting a global that is expressed in\n    //dot notation, like 'a.b.c'.\n    function getGlobal(value) {\n        if (!value) {\n            return value;\n        }\n        var g = global;\n        each(value.split('.'), function (part) {\n            g = g[part];\n        });\n        return g;\n    }\n\n    /**\n     * Constructs an error with a pointer to an URL with more information.\n     * @param {String} id the error ID that maps to an ID on a web page.\n     * @param {String} message human readable error.\n     * @param {Error} [err] the original error, if there is one.\n     *\n     * @returns {Error}\n     */\n    function makeError(id, msg, err, requireModules) {\n        var e = new Error(msg + '\\nhttp://requirejs.org/docs/errors.html#' + id);\n        e.requireType = id;\n        e.requireModules = requireModules;\n        if (err) {\n            e.originalError = err;\n        }\n        return e;\n    }\n\n    if (typeof define !== 'undefined') {\n        //If a define is already in play via another AMD loader,\n        //do not overwrite.\n        return;\n    }\n\n    if (typeof requirejs !== 'undefined') {\n        if (isFunction(requirejs)) {\n            //Do not overwrite an existing requirejs instance.\n            return;\n        }\n        cfg = requirejs;\n        requirejs = undefined;\n    }\n\n    //Allow for a require config object\n    if (typeof require !== 'undefined' && !isFunction(require)) {\n        //assume it is a config object.\n        cfg = require;\n        require = undefined;\n    }\n\n    function newContext(contextName) {\n        var inCheckLoaded, Module, context, handlers,\n            checkLoadedTimeoutId,\n            config = {\n                //Defaults. Do not set a default for map\n                //config to speed up normalize(), which\n                //will run faster if there is no default.\n                waitSeconds: 7,\n                baseUrl: './',\n                paths: {},\n                bundles: {},\n                pkgs: {},\n                shim: {},\n                config: {}\n            },\n            registry = {},\n            //registry of just enabled modules, to speed\n            //cycle breaking code when lots of modules\n            //are registered, but not activated.\n            enabledRegistry = {},\n            undefEvents = {},\n            defQueue = [],\n            defined = {},\n            urlFetched = {},\n            bundlesMap = {},\n            requireCounter = 1,\n            unnormalizedCounter = 1;\n\n        /**\n         * Trims the . and .. from an array of path segments.\n         * It will keep a leading path segment if a .. will become\n         * the first path segment, to help with module name lookups,\n         * which act like paths, but can be remapped. But the end result,\n         * all paths that use this function should look normalized.\n         * NOTE: this method MODIFIES the input array.\n         * @param {Array} ary the array of path segments.\n         */\n        function trimDots(ary) {\n            var i, part;\n            for (i = 0; i < ary.length; i++) {\n                part = ary[i];\n                if (part === '.') {\n                    ary.splice(i, 1);\n                    i -= 1;\n                } else if (part === '..') {\n                    // If at the start, or previous value is still ..,\n                    // keep them so that when converted to a path it may\n                    // still work when converted to a path, even though\n                    // as an ID it is less than ideal. In larger point\n                    // releases, may be better to just kick out an error.\n                    if (i === 0 || (i === 1 && ary[2] === '..') || ary[i - 1] === '..') {\n                        continue;\n                    } else if (i > 0) {\n                        ary.splice(i - 1, 2);\n                        i -= 2;\n                    }\n                }\n            }\n        }\n\n        /**\n         * Given a relative module name, like ./something, normalize it to\n         * a real name that can be mapped to a path.\n         * @param {String} name the relative name\n         * @param {String} baseName a real name that the name arg is relative\n         * to.\n         * @param {Boolean} applyMap apply the map config to the value. Should\n         * only be done if this normalization is for a dependency ID.\n         * @returns {String} normalized name\n         */\n        function normalize(name, baseName, applyMap) {\n            var pkgMain, mapValue, nameParts, i, j, nameSegment, lastIndex,\n                foundMap, foundI, foundStarMap, starI, normalizedBaseParts,\n                baseParts = (baseName && baseName.split('/')),\n                map = config.map,\n                starMap = map && map['*'];\n\n            //Adjust any relative paths.\n            if (name) {\n                name = name.split('/');\n                lastIndex = name.length - 1;\n\n                // If wanting node ID compatibility, strip .js from end\n                // of IDs. Have to do this here, and not in nameToUrl\n                // because node allows either .js or non .js to map\n                // to same file.\n                if (config.nodeIdCompat && jsSuffixRegExp.test(name[lastIndex])) {\n                    name[lastIndex] = name[lastIndex].replace(jsSuffixRegExp, '');\n                }\n\n                // Starts with a '.' so need the baseName\n                if (name[0].charAt(0) === '.' && baseParts) {\n                    //Convert baseName to array, and lop off the last part,\n                    //so that . matches that 'directory' and not name of the baseName's\n                    //module. For instance, baseName of 'one/two/three', maps to\n                    //'one/two/three.js', but we want the directory, 'one/two' for\n                    //this normalization.\n                    normalizedBaseParts = baseParts.slice(0, baseParts.length - 1);\n                    name = normalizedBaseParts.concat(name);\n                }\n\n                trimDots(name);\n                name = name.join('/');\n            }\n\n            //Apply map config if available.\n            if (applyMap && map && (baseParts || starMap)) {\n                nameParts = name.split('/');\n\n                outerLoop: for (i = nameParts.length; i > 0; i -= 1) {\n                    nameSegment = nameParts.slice(0, i).join('/');\n\n                    if (baseParts) {\n                        //Find the longest baseName segment match in the config.\n                        //So, do joins on the biggest to smallest lengths of baseParts.\n                        for (j = baseParts.length; j > 0; j -= 1) {\n                            mapValue = getOwn(map, baseParts.slice(0, j).join('/'));\n\n                            //baseName segment has config, find if it has one for\n                            //this name.\n                            if (mapValue) {\n                                mapValue = getOwn(mapValue, nameSegment);\n                                if (mapValue) {\n                                    //Match, update name to the new value.\n                                    foundMap = mapValue;\n                                    foundI = i;\n                                    break outerLoop;\n                                }\n                            }\n                        }\n                    }\n\n                    //Check for a star map match, but just hold on to it,\n                    //if there is a shorter segment match later in a matching\n                    //config, then favor over this star map.\n                    if (!foundStarMap && starMap && getOwn(starMap, nameSegment)) {\n                        foundStarMap = getOwn(starMap, nameSegment);\n                        starI = i;\n                    }\n                }\n\n                if (!foundMap && foundStarMap) {\n                    foundMap = foundStarMap;\n                    foundI = starI;\n                }\n\n                if (foundMap) {\n                    nameParts.splice(0, foundI, foundMap);\n                    name = nameParts.join('/');\n                }\n            }\n\n            // If the name points to a package's name, use\n            // the package main instead.\n            pkgMain = getOwn(config.pkgs, name);\n\n            return pkgMain ? pkgMain : name;\n        }\n\n        function removeScript(name) {\n            if (isBrowser) {\n                each(scripts(), function (scriptNode) {\n                    if (scriptNode.getAttribute('data-requiremodule') === name &&\n                            scriptNode.getAttribute('data-requirecontext') === context.contextName) {\n                        scriptNode.parentNode.removeChild(scriptNode);\n                        return true;\n                    }\n                });\n            }\n        }\n\n        function hasPathFallback(id) {\n            var pathConfig = getOwn(config.paths, id);\n            if (pathConfig && isArray(pathConfig) && pathConfig.length > 1) {\n                //Pop off the first array value, since it failed, and\n                //retry\n                pathConfig.shift();\n                context.require.undef(id);\n\n                //Custom require that does not do map translation, since\n                //ID is \"absolute\", already mapped/resolved.\n                context.makeRequire(null, {\n                    skipMap: true\n                })([id]);\n\n                return true;\n            }\n        }\n\n        //Turns a plugin!resource to [plugin, resource]\n        //with the plugin being undefined if the name\n        //did not have a plugin prefix.\n        function splitPrefix(name) {\n            var prefix,\n                index = name ? name.indexOf('!') : -1;\n            if (index > -1) {\n                prefix = name.substring(0, index);\n                name = name.substring(index + 1, name.length);\n            }\n            return [prefix, name];\n        }\n\n        /**\n         * Creates a module mapping that includes plugin prefix, module\n         * name, and path. If parentModuleMap is provided it will\n         * also normalize the name via require.normalize()\n         *\n         * @param {String} name the module name\n         * @param {String} [parentModuleMap] parent module map\n         * for the module name, used to resolve relative names.\n         * @param {Boolean} isNormalized: is the ID already normalized.\n         * This is true if this call is done for a define() module ID.\n         * @param {Boolean} applyMap: apply the map config to the ID.\n         * Should only be true if this map is for a dependency.\n         *\n         * @returns {Object}\n         */\n        function makeModuleMap(name, parentModuleMap, isNormalized, applyMap) {\n            var url, pluginModule, suffix, nameParts,\n                prefix = null,\n                parentName = parentModuleMap ? parentModuleMap.name : null,\n                originalName = name,\n                isDefine = true,\n                normalizedName = '';\n\n            //If no name, then it means it is a require call, generate an\n            //internal name.\n            if (!name) {\n                isDefine = false;\n                name = '_@r' + (requireCounter += 1);\n            }\n\n            nameParts = splitPrefix(name);\n            prefix = nameParts[0];\n            name = nameParts[1];\n\n            if (prefix) {\n                prefix = normalize(prefix, parentName, applyMap);\n                pluginModule = getOwn(defined, prefix);\n            }\n\n            //Account for relative paths if there is a base name.\n            if (name) {\n                if (prefix) {\n                    if (isNormalized) {\n                        normalizedName = name;\n                    } else if (pluginModule && pluginModule.normalize) {\n                        //Plugin is loaded, use its normalize method.\n                        normalizedName = pluginModule.normalize(name, function (name) {\n                            return normalize(name, parentName, applyMap);\n                        });\n                    } else {\n                        // If nested plugin references, then do not try to\n                        // normalize, as it will not normalize correctly. This\n                        // places a restriction on resourceIds, and the longer\n                        // term solution is not to normalize until plugins are\n                        // loaded and all normalizations to allow for async\n                        // loading of a loader plugin. But for now, fixes the\n                        // common uses. Details in #1131\n                        normalizedName = name.indexOf('!') === -1 ?\n                                         normalize(name, parentName, applyMap) :\n                                         name;\n                    }\n                } else {\n                    //A regular module.\n                    normalizedName = normalize(name, parentName, applyMap);\n\n                    //Normalized name may be a plugin ID due to map config\n                    //application in normalize. The map config values must\n                    //already be normalized, so do not need to redo that part.\n                    nameParts = splitPrefix(normalizedName);\n                    prefix = nameParts[0];\n                    normalizedName = nameParts[1];\n                    isNormalized = true;\n\n                    url = context.nameToUrl(normalizedName);\n                }\n            }\n\n            //If the id is a plugin id that cannot be determined if it needs\n            //normalization, stamp it with a unique ID so two matching relative\n            //ids that may conflict can be separate.\n            suffix = prefix && !pluginModule && !isNormalized ?\n                     '_unnormalized' + (unnormalizedCounter += 1) :\n                     '';\n\n            return {\n                prefix: prefix,\n                name: normalizedName,\n                parentMap: parentModuleMap,\n                unnormalized: !!suffix,\n                url: url,\n                originalName: originalName,\n                isDefine: isDefine,\n                id: (prefix ?\n                        prefix + '!' + normalizedName :\n                        normalizedName) + suffix\n            };\n        }\n\n        function getModule(depMap) {\n            var id = depMap.id,\n                mod = getOwn(registry, id);\n\n            if (!mod) {\n                mod = registry[id] = new context.Module(depMap);\n            }\n\n            return mod;\n        }\n\n        function on(depMap, name, fn) {\n            var id = depMap.id,\n                mod = getOwn(registry, id);\n\n            if (hasProp(defined, id) &&\n                    (!mod || mod.defineEmitComplete)) {\n                if (name === 'defined') {\n                    fn(defined[id]);\n                }\n            } else {\n                mod = getModule(depMap);\n                if (mod.error && name === 'error') {\n                    fn(mod.error);\n                } else {\n                    mod.on(name, fn);\n                }\n            }\n        }\n\n        function onError(err, errback) {\n            var ids = err.requireModules,\n                notified = false;\n\n            if (errback) {\n                errback(err);\n            } else {\n                each(ids, function (id) {\n                    var mod = getOwn(registry, id);\n                    if (mod) {\n                        //Set error on module, so it skips timeout checks.\n                        mod.error = err;\n                        if (mod.events.error) {\n                            notified = true;\n                            mod.emit('error', err);\n                        }\n                    }\n                });\n\n                if (!notified) {\n                    req.onError(err);\n                }\n            }\n        }\n\n        /**\n         * Internal method to transfer globalQueue items to this context's\n         * defQueue.\n         */\n        function takeGlobalQueue() {\n            //Push all the globalDefQueue items into the context's defQueue\n            if (globalDefQueue.length) {\n                each(globalDefQueue, function(queueItem) {\n                    var id = queueItem[0];\n                    if (typeof id === 'string') {\n                        context.defQueueMap[id] = true;\n                    }\n                    defQueue.push(queueItem);\n                });\n                globalDefQueue = [];\n            }\n        }\n\n        handlers = {\n            'require': function (mod) {\n                if (mod.require) {\n                    return mod.require;\n                } else {\n                    return (mod.require = context.makeRequire(mod.map));\n                }\n            },\n            'exports': function (mod) {\n                mod.usingExports = true;\n                if (mod.map.isDefine) {\n                    if (mod.exports) {\n                        return (defined[mod.map.id] = mod.exports);\n                    } else {\n                        return (mod.exports = defined[mod.map.id] = {});\n                    }\n                }\n            },\n            'module': function (mod) {\n                if (mod.module) {\n                    return mod.module;\n                } else {\n                    return (mod.module = {\n                        id: mod.map.id,\n                        uri: mod.map.url,\n                        config: function () {\n                            return getOwn(config.config, mod.map.id) || {};\n                        },\n                        exports: mod.exports || (mod.exports = {})\n                    });\n                }\n            }\n        };\n\n        function cleanRegistry(id) {\n            //Clean up machinery used for waiting modules.\n            delete registry[id];\n            delete enabledRegistry[id];\n        }\n\n        function breakCycle(mod, traced, processed) {\n            var id = mod.map.id;\n\n            if (mod.error) {\n                mod.emit('error', mod.error);\n            } else {\n                traced[id] = true;\n                each(mod.depMaps, function (depMap, i) {\n                    var depId = depMap.id,\n                        dep = getOwn(registry, depId);\n\n                    //Only force things that have not completed\n                    //being defined, so still in the registry,\n                    //and only if it has not been matched up\n                    //in the module already.\n                    if (dep && !mod.depMatched[i] && !processed[depId]) {\n                        if (getOwn(traced, depId)) {\n                            mod.defineDep(i, defined[depId]);\n                            mod.check(); //pass false?\n                        } else {\n                            breakCycle(dep, traced, processed);\n                        }\n                    }\n                });\n                processed[id] = true;\n            }\n        }\n\n        function checkLoaded() {\n            var err, usingPathFallback,\n                waitInterval = config.waitSeconds * 1000,\n                //It is possible to disable the wait interval by using waitSeconds of 0.\n                expired = waitInterval && (context.startTime + waitInterval) < new Date().getTime(),\n                noLoads = [],\n                reqCalls = [],\n                stillLoading = false,\n                needCycleCheck = true;\n\n            //Do not bother if this call was a result of a cycle break.\n            if (inCheckLoaded) {\n                return;\n            }\n\n            inCheckLoaded = true;\n\n            //Figure out the state of all the modules.\n            eachProp(enabledRegistry, function (mod) {\n                var map = mod.map,\n                    modId = map.id;\n\n                //Skip things that are not enabled or in error state.\n                if (!mod.enabled) {\n                    return;\n                }\n\n                if (!map.isDefine) {\n                    reqCalls.push(mod);\n                }\n\n                if (!mod.error) {\n                    //If the module should be executed, and it has not\n                    //been inited and time is up, remember it.\n                    if (!mod.inited && expired) {\n                        if (hasPathFallback(modId)) {\n                            usingPathFallback = true;\n                            stillLoading = true;\n                        } else {\n                            noLoads.push(modId);\n                            removeScript(modId);\n                        }\n                    } else if (!mod.inited && mod.fetched && map.isDefine) {\n                        stillLoading = true;\n                        if (!map.prefix) {\n                            //No reason to keep looking for unfinished\n                            //loading. If the only stillLoading is a\n                            //plugin resource though, keep going,\n                            //because it may be that a plugin resource\n                            //is waiting on a non-plugin cycle.\n                            return (needCycleCheck = false);\n                        }\n                    }\n                }\n            });\n\n            if (expired && noLoads.length) {\n                //If wait time expired, throw error of unloaded modules.\n                err = makeError('timeout', 'Load timeout for modules: ' + noLoads, null, noLoads);\n                err.contextName = context.contextName;\n                return onError(err);\n            }\n\n            //Not expired, check for a cycle.\n            if (needCycleCheck) {\n                each(reqCalls, function (mod) {\n                    breakCycle(mod, {}, {});\n                });\n            }\n\n            //If still waiting on loads, and the waiting load is something\n            //other than a plugin resource, or there are still outstanding\n            //scripts, then just try back later.\n            if ((!expired || usingPathFallback) && stillLoading) {\n                //Something is still waiting to load. Wait for it, but only\n                //if a timeout is not already in effect.\n                if ((isBrowser || isWebWorker) && !checkLoadedTimeoutId) {\n                    checkLoadedTimeoutId = setTimeout(function () {\n                        checkLoadedTimeoutId = 0;\n                        checkLoaded();\n                    }, 50);\n                }\n            }\n\n            inCheckLoaded = false;\n        }\n\n        Module = function (map) {\n            this.events = getOwn(undefEvents, map.id) || {};\n            this.map = map;\n            this.shim = getOwn(config.shim, map.id);\n            this.depExports = [];\n            this.depMaps = [];\n            this.depMatched = [];\n            this.pluginMaps = {};\n            this.depCount = 0;\n\n            /* this.exports this.factory\n               this.depMaps = [],\n               this.enabled, this.fetched\n            */\n        };\n\n        Module.prototype = {\n            init: function (depMaps, factory, errback, options) {\n                options = options || {};\n\n                //Do not do more inits if already done. Can happen if there\n                //are multiple define calls for the same module. That is not\n                //a normal, common case, but it is also not unexpected.\n                if (this.inited) {\n                    return;\n                }\n\n                this.factory = factory;\n\n                if (errback) {\n                    //Register for errors on this module.\n                    this.on('error', errback);\n                } else if (this.events.error) {\n                    //If no errback already, but there are error listeners\n                    //on this module, set up an errback to pass to the deps.\n                    errback = bind(this, function (err) {\n                        this.emit('error', err);\n                    });\n                }\n\n                //Do a copy of the dependency array, so that\n                //source inputs are not modified. For example\n                //\"shim\" deps are passed in here directly, and\n                //doing a direct modification of the depMaps array\n                //would affect that config.\n                this.depMaps = depMaps && depMaps.slice(0);\n\n                this.errback = errback;\n\n                //Indicate this module has be initialized\n                this.inited = true;\n\n                this.ignore = options.ignore;\n\n                //Could have option to init this module in enabled mode,\n                //or could have been previously marked as enabled. However,\n                //the dependencies are not known until init is called. So\n                //if enabled previously, now trigger dependencies as enabled.\n                if (options.enabled || this.enabled) {\n                    //Enable this module and dependencies.\n                    //Will call this.check()\n                    this.enable();\n                } else {\n                    this.check();\n                }\n            },\n\n            defineDep: function (i, depExports) {\n                //Because of cycles, defined callback for a given\n                //export can be called more than once.\n                if (!this.depMatched[i]) {\n                    this.depMatched[i] = true;\n                    this.depCount -= 1;\n                    this.depExports[i] = depExports;\n                }\n            },\n\n            fetch: function () {\n                if (this.fetched) {\n                    return;\n                }\n                this.fetched = true;\n\n                context.startTime = (new Date()).getTime();\n\n                var map = this.map;\n\n                //If the manager is for a plugin managed resource,\n                //ask the plugin to load it now.\n                if (this.shim) {\n                    context.makeRequire(this.map, {\n                        enableBuildCallback: true\n                    })(this.shim.deps || [], bind(this, function () {\n                        return map.prefix ? this.callPlugin() : this.load();\n                    }));\n                } else {\n                    //Regular dependency.\n                    return map.prefix ? this.callPlugin() : this.load();\n                }\n            },\n\n            load: function () {\n                var url = this.map.url;\n\n                //Regular dependency.\n                if (!urlFetched[url]) {\n                    urlFetched[url] = true;\n                    context.load(this.map.id, url);\n                }\n            },\n\n            /**\n             * Checks if the module is ready to define itself, and if so,\n             * define it.\n             */\n            check: function () {\n                if (!this.enabled || this.enabling) {\n                    return;\n                }\n\n                var err, cjsModule,\n                    id = this.map.id,\n                    depExports = this.depExports,\n                    exports = this.exports,\n                    factory = this.factory;\n\n                if (!this.inited) {\n                    // Only fetch if not already in the defQueue.\n                    if (!hasProp(context.defQueueMap, id)) {\n                        this.fetch();\n                    }\n                } else if (this.error) {\n                    this.emit('error', this.error);\n                } else if (!this.defining) {\n                    //The factory could trigger another require call\n                    //that would result in checking this module to\n                    //define itself again. If already in the process\n                    //of doing that, skip this work.\n                    this.defining = true;\n\n                    if (this.depCount < 1 && !this.defined) {\n                        if (isFunction(factory)) {\n                            //If there is an error listener, favor passing\n                            //to that instead of throwing an error. However,\n                            //only do it for define()'d  modules. require\n                            //errbacks should not be called for failures in\n                            //their callbacks (#699). However if a global\n                            //onError is set, use that.\n                            if ((this.events.error && this.map.isDefine) ||\n                                req.onError !== defaultOnError) {\n                                try {\n                                    exports = context.execCb(id, factory, depExports, exports);\n                                } catch (e) {\n                                    err = e;\n                                }\n                            } else {\n                                exports = context.execCb(id, factory, depExports, exports);\n                            }\n\n                            // Favor return value over exports. If node/cjs in play,\n                            // then will not have a return value anyway. Favor\n                            // module.exports assignment over exports object.\n                            if (this.map.isDefine && exports === undefined) {\n                                cjsModule = this.module;\n                                if (cjsModule) {\n                                    exports = cjsModule.exports;\n                                } else if (this.usingExports) {\n                                    //exports already set the defined value.\n                                    exports = this.exports;\n                                }\n                            }\n\n                            if (err) {\n                                err.requireMap = this.map;\n                                err.requireModules = this.map.isDefine ? [this.map.id] : null;\n                                err.requireType = this.map.isDefine ? 'define' : 'require';\n                                return onError((this.error = err));\n                            }\n\n                        } else {\n                            //Just a literal value\n                            exports = factory;\n                        }\n\n                        this.exports = exports;\n\n                        if (this.map.isDefine && !this.ignore) {\n                            defined[id] = exports;\n\n                            if (req.onResourceLoad) {\n                                var resLoadMaps = [];\n                                each(this.depMaps, function (depMap) {\n                                    resLoadMaps.push(depMap.normalizedMap || depMap);\n                                });\n                                req.onResourceLoad(context, this.map, resLoadMaps);\n                            }\n                        }\n\n                        //Clean up\n                        cleanRegistry(id);\n\n                        this.defined = true;\n                    }\n\n                    //Finished the define stage. Allow calling check again\n                    //to allow define notifications below in the case of a\n                    //cycle.\n                    this.defining = false;\n\n                    if (this.defined && !this.defineEmitted) {\n                        this.defineEmitted = true;\n                        this.emit('defined', this.exports);\n                        this.defineEmitComplete = true;\n                    }\n\n                }\n            },\n\n            callPlugin: function () {\n                var map = this.map,\n                    id = map.id,\n                    //Map already normalized the prefix.\n                    pluginMap = makeModuleMap(map.prefix);\n\n                //Mark this as a dependency for this plugin, so it\n                //can be traced for cycles.\n                this.depMaps.push(pluginMap);\n\n                on(pluginMap, 'defined', bind(this, function (plugin) {\n                    var load, normalizedMap, normalizedMod,\n                        bundleId = getOwn(bundlesMap, this.map.id),\n                        name = this.map.name,\n                        parentName = this.map.parentMap ? this.map.parentMap.name : null,\n                        localRequire = context.makeRequire(map.parentMap, {\n                            enableBuildCallback: true\n                        });\n\n                    //If current map is not normalized, wait for that\n                    //normalized name to load instead of continuing.\n                    if (this.map.unnormalized) {\n                        //Normalize the ID if the plugin allows it.\n                        if (plugin.normalize) {\n                            name = plugin.normalize(name, function (name) {\n                                return normalize(name, parentName, true);\n                            }) || '';\n                        }\n\n                        //prefix and name should already be normalized, no need\n                        //for applying map config again either.\n                        normalizedMap = makeModuleMap(map.prefix + '!' + name,\n                                                      this.map.parentMap,\n                                                      true);\n                        on(normalizedMap,\n                            'defined', bind(this, function (value) {\n                                this.map.normalizedMap = normalizedMap;\n                                this.init([], function () { return value; }, null, {\n                                    enabled: true,\n                                    ignore: true\n                                });\n                            }));\n\n                        normalizedMod = getOwn(registry, normalizedMap.id);\n                        if (normalizedMod) {\n                            //Mark this as a dependency for this plugin, so it\n                            //can be traced for cycles.\n                            this.depMaps.push(normalizedMap);\n\n                            if (this.events.error) {\n                                normalizedMod.on('error', bind(this, function (err) {\n                                    this.emit('error', err);\n                                }));\n                            }\n                            normalizedMod.enable();\n                        }\n\n                        return;\n                    }\n\n                    //If a paths config, then just load that file instead to\n                    //resolve the plugin, as it is built into that paths layer.\n                    if (bundleId) {\n                        this.map.url = context.nameToUrl(bundleId);\n                        this.load();\n                        return;\n                    }\n\n                    load = bind(this, function (value) {\n                        this.init([], function () { return value; }, null, {\n                            enabled: true\n                        });\n                    });\n\n                    load.error = bind(this, function (err) {\n                        this.inited = true;\n                        this.error = err;\n                        err.requireModules = [id];\n\n                        //Remove temp unnormalized modules for this module,\n                        //since they will never be resolved otherwise now.\n                        eachProp(registry, function (mod) {\n                            if (mod.map.id.indexOf(id + '_unnormalized') === 0) {\n                                cleanRegistry(mod.map.id);\n                            }\n                        });\n\n                        onError(err);\n                    });\n\n                    //Allow plugins to load other code without having to know the\n                    //context or how to 'complete' the load.\n                    load.fromText = bind(this, function (text, textAlt) {\n                        /*jslint evil: true */\n                        var moduleName = map.name,\n                            moduleMap = makeModuleMap(moduleName),\n                            hasInteractive = useInteractive;\n\n                        //As of 2.1.0, support just passing the text, to reinforce\n                        //fromText only being called once per resource. Still\n                        //support old style of passing moduleName but discard\n                        //that moduleName in favor of the internal ref.\n                        if (textAlt) {\n                            text = textAlt;\n                        }\n\n                        //Turn off interactive script matching for IE for any define\n                        //calls in the text, then turn it back on at the end.\n                        if (hasInteractive) {\n                            useInteractive = false;\n                        }\n\n                        //Prime the system by creating a module instance for\n                        //it.\n                        getModule(moduleMap);\n\n                        //Transfer any config to this other module.\n                        if (hasProp(config.config, id)) {\n                            config.config[moduleName] = config.config[id];\n                        }\n\n                        try {\n                            req.exec(text);\n                        } catch (e) {\n                            return onError(makeError('fromtexteval',\n                                             'fromText eval for ' + id +\n                                            ' failed: ' + e,\n                                             e,\n                                             [id]));\n                        }\n\n                        if (hasInteractive) {\n                            useInteractive = true;\n                        }\n\n                        //Mark this as a dependency for the plugin\n                        //resource\n                        this.depMaps.push(moduleMap);\n\n                        //Support anonymous modules.\n                        context.completeLoad(moduleName);\n\n                        //Bind the value of that module to the value for this\n                        //resource ID.\n                        localRequire([moduleName], load);\n                    });\n\n                    //Use parentName here since the plugin's name is not reliable,\n                    //could be some weird string with no path that actually wants to\n                    //reference the parentName's path.\n                    plugin.load(map.name, localRequire, load, config);\n                }));\n\n                context.enable(pluginMap, this);\n                this.pluginMaps[pluginMap.id] = pluginMap;\n            },\n\n            enable: function () {\n                enabledRegistry[this.map.id] = this;\n                this.enabled = true;\n\n                //Set flag mentioning that the module is enabling,\n                //so that immediate calls to the defined callbacks\n                //for dependencies do not trigger inadvertent load\n                //with the depCount still being zero.\n                this.enabling = true;\n\n                //Enable each dependency\n                each(this.depMaps, bind(this, function (depMap, i) {\n                    var id, mod, handler;\n\n                    if (typeof depMap === 'string') {\n                        //Dependency needs to be converted to a depMap\n                        //and wired up to this module.\n                        depMap = makeModuleMap(depMap,\n                                               (this.map.isDefine ? this.map : this.map.parentMap),\n                                               false,\n                                               !this.skipMap);\n                        this.depMaps[i] = depMap;\n\n                        handler = getOwn(handlers, depMap.id);\n\n                        if (handler) {\n                            this.depExports[i] = handler(this);\n                            return;\n                        }\n\n                        this.depCount += 1;\n\n                        on(depMap, 'defined', bind(this, function (depExports) {\n                            if (this.undefed) {\n                                return;\n                            }\n                            this.defineDep(i, depExports);\n                            this.check();\n                        }));\n\n                        if (this.errback) {\n                            on(depMap, 'error', bind(this, this.errback));\n                        } else if (this.events.error) {\n                            // No direct errback on this module, but something\n                            // else is listening for errors, so be sure to\n                            // propagate the error correctly.\n                            on(depMap, 'error', bind(this, function(err) {\n                                this.emit('error', err);\n                            }));\n                        }\n                    }\n\n                    id = depMap.id;\n                    mod = registry[id];\n\n                    //Skip special modules like 'require', 'exports', 'module'\n                    //Also, don't call enable if it is already enabled,\n                    //important in circular dependency cases.\n                    if (!hasProp(handlers, id) && mod && !mod.enabled) {\n                        context.enable(depMap, this);\n                    }\n                }));\n\n                //Enable each plugin that is used in\n                //a dependency\n                eachProp(this.pluginMaps, bind(this, function (pluginMap) {\n                    var mod = getOwn(registry, pluginMap.id);\n                    if (mod && !mod.enabled) {\n                        context.enable(pluginMap, this);\n                    }\n                }));\n\n                this.enabling = false;\n\n                this.check();\n            },\n\n            on: function (name, cb) {\n                var cbs = this.events[name];\n                if (!cbs) {\n                    cbs = this.events[name] = [];\n                }\n                cbs.push(cb);\n            },\n\n            emit: function (name, evt) {\n                each(this.events[name], function (cb) {\n                    cb(evt);\n                });\n                if (name === 'error') {\n                    //Now that the error handler was triggered, remove\n                    //the listeners, since this broken Module instance\n                    //can stay around for a while in the registry.\n                    delete this.events[name];\n                }\n            }\n        };\n\n        function callGetModule(args) {\n            //Skip modules already defined.\n            if (!hasProp(defined, args[0])) {\n                getModule(makeModuleMap(args[0], null, true)).init(args[1], args[2]);\n            }\n        }\n\n        function removeListener(node, func, name, ieName) {\n            //Favor detachEvent because of IE9\n            //issue, see attachEvent/addEventListener comment elsewhere\n            //in this file.\n            if (node.detachEvent && !isOpera) {\n                //Probably IE. If not it will throw an error, which will be\n                //useful to know.\n                if (ieName) {\n                    node.detachEvent(ieName, func);\n                }\n            } else {\n                node.removeEventListener(name, func, false);\n            }\n        }\n\n        /**\n         * Given an event from a script node, get the requirejs info from it,\n         * and then removes the event listeners on the node.\n         * @param {Event} evt\n         * @returns {Object}\n         */\n        function getScriptData(evt) {\n            //Using currentTarget instead of target for Firefox 2.0's sake. Not\n            //all old browsers will be supported, but this one was easy enough\n            //to support and still makes sense.\n            var node = evt.currentTarget || evt.srcElement;\n\n            //Remove the listeners once here.\n            // removeListener(node, context.onScriptLoad, 'load', 'onreadystatechange');\n            // removeListener(node, context.onScriptError, 'error');\n\n            return {\n                node: node,\n                id: node && node.getAttribute('data-requiremodule')\n            };\n        }\n\n        function intakeDefines() {\n            var args;\n\n            //Any defined modules in the global queue, intake them now.\n            takeGlobalQueue();\n\n            //Make sure any remaining defQueue items get properly processed.\n            while (defQueue.length) {\n                args = defQueue.shift();\n                if (args[0] === null) {\n                    return onError(makeError('mismatch', 'Mismatched anonymous define() module: ' +\n                        args[args.length - 1]));\n                } else {\n                    //args are id, deps, factory. Should be normalized by the\n                    //define() function.\n                    callGetModule(args);\n                }\n            }\n            context.defQueueMap = {};\n        }\n\n        context = {\n            config: config,\n            contextName: contextName,\n            registry: registry,\n            defined: defined,\n            urlFetched: urlFetched,\n            defQueue: defQueue,\n            defQueueMap: {},\n            Module: Module,\n            makeModuleMap: makeModuleMap,\n            nextTick: req.nextTick,\n            onError: onError,\n\n            /**\n             * Set a configuration for the context.\n             * @param {Object} cfg config object to integrate.\n             */\n            configure: function (cfg) {\n                //Make sure the baseUrl ends in a slash.\n                if (cfg.baseUrl) {\n                    if (cfg.baseUrl.charAt(cfg.baseUrl.length - 1) !== '/') {\n                        cfg.baseUrl += '/';\n                    }\n                }\n\n                // Convert old style urlArgs string to a function.\n                if (typeof cfg.urlArgs === 'string') {\n                    var urlArgs = cfg.urlArgs;\n                    cfg.urlArgs = function(id, url) {\n                        return (url.indexOf('?') === -1 ? '?' : '&') + urlArgs;\n                    };\n                }\n\n                //Save off the paths since they require special processing,\n                //they are additive.\n                var shim = config.shim,\n                    objs = {\n                        paths: true,\n                        bundles: true,\n                        config: true,\n                        map: true\n                    };\n\n                eachProp(cfg, function (value, prop) {\n                    if (objs[prop]) {\n                        if (!config[prop]) {\n                            config[prop] = {};\n                        }\n                        mixin(config[prop], value, true, true);\n                    } else {\n                        config[prop] = value;\n                    }\n                });\n\n                //Reverse map the bundles\n                if (cfg.bundles) {\n                    eachProp(cfg.bundles, function (value, prop) {\n                        each(value, function (v) {\n                            if (v !== prop) {\n                                bundlesMap[v] = prop;\n                            }\n                        });\n                    });\n                }\n\n                //Merge shim\n                if (cfg.shim) {\n                    eachProp(cfg.shim, function (value, id) {\n                        //Normalize the structure\n                        if (isArray(value)) {\n                            value = {\n                                deps: value\n                            };\n                        }\n                        if ((value.exports || value.init) && !value.exportsFn) {\n                            value.exportsFn = context.makeShimExports(value);\n                        }\n                        shim[id] = value;\n                    });\n                    config.shim = shim;\n                }\n\n                //Adjust packages if necessary.\n                if (cfg.packages) {\n                    each(cfg.packages, function (pkgObj) {\n                        var location, name;\n\n                        pkgObj = typeof pkgObj === 'string' ? {name: pkgObj} : pkgObj;\n\n                        name = pkgObj.name;\n                        location = pkgObj.location;\n                        if (location) {\n                            config.paths[name] = pkgObj.location;\n                        }\n\n                        //Save pointer to main module ID for pkg name.\n                        //Remove leading dot in main, so main paths are normalized,\n                        //and remove any trailing .js, since different package\n                        //envs have different conventions: some use a module name,\n                        //some use a file name.\n                        config.pkgs[name] = pkgObj.name + '/' + (pkgObj.main || 'main')\n                                     .replace(currDirRegExp, '')\n                                     .replace(jsSuffixRegExp, '');\n                    });\n                }\n\n                //If there are any \"waiting to execute\" modules in the registry,\n                //update the maps for them, since their info, like URLs to load,\n                //may have changed.\n                eachProp(registry, function (mod, id) {\n                    //If module already has init called, since it is too\n                    //late to modify them, and ignore unnormalized ones\n                    //since they are transient.\n                    if (!mod.inited && !mod.map.unnormalized) {\n                        mod.map = makeModuleMap(id, null, true);\n                    }\n                });\n\n                //If a deps array or a config callback is specified, then call\n                //require with those args. This is useful when require is defined as a\n                //config object before require.js is loaded.\n                if (cfg.deps || cfg.callback) {\n                    context.require(cfg.deps || [], cfg.callback);\n                }\n            },\n\n            makeShimExports: function (value) {\n                function fn() {\n                    var ret;\n                    if (value.init) {\n                        ret = value.init.apply(global, arguments);\n                    }\n                    return ret || (value.exports && getGlobal(value.exports));\n                }\n                return fn;\n            },\n\n            makeRequire: function (relMap, options) {\n                options = options || {};\n\n                function localRequire(deps, callback, errback) {\n                    var id, map, requireMod;\n\n                    if (options.enableBuildCallback && callback && isFunction(callback)) {\n                        callback.__requireJsBuild = true;\n                    }\n\n                    if (typeof deps === 'string') {\n                        if (isFunction(callback)) {\n                            //Invalid call\n                            return onError(makeError('requireargs', 'Invalid require call'), errback);\n                        }\n\n                        //If require|exports|module are requested, get the\n                        //value for them from the special handlers. Caveat:\n                        //this only works while module is being defined.\n                        if (relMap && hasProp(handlers, deps)) {\n                            return handlers[deps](registry[relMap.id]);\n                        }\n\n                        //Synchronous access to one module. If require.get is\n                        //available (as in the Node adapter), prefer that.\n                        if (req.get) {\n                            return req.get(context, deps, relMap, localRequire);\n                        }\n\n                        //Normalize module name, if it contains . or ..\n                        map = makeModuleMap(deps, relMap, false, true);\n                        id = map.id;\n\n                        if (!hasProp(defined, id)) {\n                            return onError(makeError('notloaded', 'Module name \"' +\n                                        id +\n                                        '\" has not been loaded yet for context: ' +\n                                        contextName +\n                                        (relMap ? '' : '. Use require([])')));\n                        }\n                        return defined[id];\n                    }\n\n                    //Grab defines waiting in the global queue.\n                    intakeDefines();\n\n                    //Mark all the dependencies as needing to be loaded.\n                    context.nextTick(function () {\n                        //Some defines could have been added since the\n                        //require call, collect them.\n                        intakeDefines();\n\n                        requireMod = getModule(makeModuleMap(null, relMap));\n\n                        //Store if map config should be applied to this require\n                        //call for dependencies.\n                        requireMod.skipMap = options.skipMap;\n\n                        requireMod.init(deps, callback, errback, {\n                            enabled: true\n                        });\n\n                        checkLoaded();\n                    });\n\n                    return localRequire;\n                }\n\n                mixin(localRequire, {\n                    isBrowser: isBrowser,\n\n                    /**\n                     * Converts a module name + .extension into an URL path.\n                     * *Requires* the use of a module name. It does not support using\n                     * plain URLs like nameToUrl.\n                     */\n                    toUrl: function (moduleNamePlusExt) {\n                        var ext,\n                            index = moduleNamePlusExt.lastIndexOf('.'),\n                            segment = moduleNamePlusExt.split('/')[0],\n                            isRelative = segment === '.' || segment === '..';\n\n                        //Have a file extension alias, and it is not the\n                        //dots from a relative path.\n                        if (index !== -1 && (!isRelative || index > 1)) {\n                            ext = moduleNamePlusExt.substring(index, moduleNamePlusExt.length);\n                            moduleNamePlusExt = moduleNamePlusExt.substring(0, index);\n                        }\n\n                        return context.nameToUrl(normalize(moduleNamePlusExt,\n                                                relMap && relMap.id, true), ext,  true);\n                    },\n\n                    defined: function (id) {\n                        return hasProp(defined, makeModuleMap(id, relMap, false, true).id);\n                    },\n\n                    specified: function (id) {\n                        id = makeModuleMap(id, relMap, false, true).id;\n                        return hasProp(defined, id) || hasProp(registry, id);\n                    }\n                });\n\n                //Only allow undef on top level require calls\n                if (!relMap) {\n                    localRequire.undef = function (id) {\n                        //Bind any waiting define() calls to this context,\n                        //fix for #408\n                        takeGlobalQueue();\n\n                        var map = makeModuleMap(id, relMap, true),\n                            mod = getOwn(registry, id);\n\n                        mod.undefed = true;\n                        removeScript(id);\n\n                        delete defined[id];\n                        delete urlFetched[map.url];\n                        delete undefEvents[id];\n\n                        //Clean queued defines too. Go backwards\n                        //in array so that the splices do not\n                        //mess up the iteration.\n                        eachReverse(defQueue, function(args, i) {\n                            if (args[0] === id) {\n                                defQueue.splice(i, 1);\n                            }\n                        });\n                        delete context.defQueueMap[id];\n\n                        if (mod) {\n                            //Hold on to listeners in case the\n                            //module will be attempted to be reloaded\n                            //using a different config.\n                            if (mod.events.defined) {\n                                undefEvents[id] = mod.events;\n                            }\n\n                            cleanRegistry(id);\n                        }\n                    };\n                }\n\n                return localRequire;\n            },\n\n            /**\n             * Called to enable a module if it is still in the registry\n             * awaiting enablement. A second arg, parent, the parent module,\n             * is passed in for context, when this method is overridden by\n             * the optimizer. Not shown here to keep code compact.\n             */\n            enable: function (depMap) {\n                var mod = getOwn(registry, depMap.id);\n                if (mod) {\n                    getModule(depMap).enable();\n                }\n            },\n\n            /**\n             * Internal method used by environment adapters to complete a load event.\n             * A load event could be a script load or just a load pass from a synchronous\n             * load call.\n             * @param {String} moduleName the name of the module to potentially complete.\n             */\n            completeLoad: function (moduleName) {\n                var found, args, mod,\n                    shim = getOwn(config.shim, moduleName) || {},\n                    shExports = shim.exports;\n\n                takeGlobalQueue();\n\n                while (defQueue.length) {\n                    args = defQueue.shift();\n                    if (args[0] === null) {\n                        args[0] = moduleName;\n                        //If already found an anonymous module and bound it\n                        //to this name, then this is some other anon module\n                        //waiting for its completeLoad to fire.\n                        if (found) {\n                            break;\n                        }\n                        found = true;\n                    } else if (args[0] === moduleName) {\n                        //Found matching define call for this script!\n                        found = true;\n                    }\n\n                    callGetModule(args);\n                }\n                context.defQueueMap = {};\n\n                //Do this after the cycle of callGetModule in case the result\n                //of those calls/init calls changes the registry.\n                mod = getOwn(registry, moduleName);\n\n                if (!found && !hasProp(defined, moduleName) && mod && !mod.inited) {\n                    if (config.enforceDefine && (!shExports || !getGlobal(shExports))) {\n                        if (hasPathFallback(moduleName)) {\n                            return;\n                        } else {\n                            return onError(makeError('nodefine',\n                                             'No define call for ' + moduleName,\n                                             null,\n                                             [moduleName]));\n                        }\n                    } else {\n                        //A script that does not call define(), so just simulate\n                        //the call for it.\n                        callGetModule([moduleName, (shim.deps || []), shim.exportsFn]);\n                    }\n                }\n\n                checkLoaded();\n            },\n\n            /**\n             * Converts a module name to a file path. Supports cases where\n             * moduleName may actually be just an URL.\n             * Note that it **does not** call normalize on the moduleName,\n             * it is assumed to have already been normalized. This is an\n             * internal API, not a public one. Use toUrl for the public API.\n             */\n            nameToUrl: function (moduleName, ext, skipExt) {\n                var paths, syms, i, parentModule, url,\n                    parentPath, bundleId,\n                    pkgMain = getOwn(config.pkgs, moduleName);\n\n                if (pkgMain) {\n                    moduleName = pkgMain;\n                }\n\n                bundleId = getOwn(bundlesMap, moduleName);\n\n                if (bundleId) {\n                    return context.nameToUrl(bundleId, ext, skipExt);\n                }\n\n                //If a colon is in the URL, it indicates a protocol is used and it is just\n                //an URL to a file, or if it starts with a slash, contains a query arg (i.e. ?)\n                //or ends with .js, then assume the user meant to use an url and not a module id.\n                //The slash is important for protocol-less URLs as well as full paths.\n                if (req.jsExtRegExp.test(moduleName)) {\n                    //Just a plain path, not module name lookup, so just return it.\n                    //Add extension if it is included. This is a bit wonky, only non-.js things pass\n                    //an extension, this method probably needs to be reworked.\n                    url = moduleName + (ext || '');\n                } else {\n                    //A module that needs to be converted to a path.\n                    paths = config.paths;\n\n                    syms = moduleName.split('/');\n                    //For each module name segment, see if there is a path\n                    //registered for it. Start with most specific name\n                    //and work up from it.\n                    for (i = syms.length; i > 0; i -= 1) {\n                        parentModule = syms.slice(0, i).join('/');\n\n                        parentPath = getOwn(paths, parentModule);\n                        if (parentPath) {\n                            //If an array, it means there are a few choices,\n                            //Choose the one that is desired\n                            if (isArray(parentPath)) {\n                                parentPath = parentPath[0];\n                            }\n                            syms.splice(0, i, parentPath);\n                            break;\n                        }\n                    }\n\n                    //Join the path parts together, then figure out if baseUrl is needed.\n                    url = syms.join('/');\n                    url += (ext || (/^data\\:|^blob\\:|\\?/.test(url) || skipExt ? '' : '.js'));\n                    url = (url.charAt(0) === '/' || url.match(/^[\\w\\+\\.\\-]+:/) ? '' : config.baseUrl) + url;\n                }\n\n                return config.urlArgs && !/^blob\\:/.test(url) ?\n                       url + config.urlArgs(moduleName, url) : url;\n            },\n\n            //Delegates to req.load. Broken out as a separate function to\n            //allow overriding in the optimizer.\n            load: function (id, url) {\n                req.load(context, id, url);\n            },\n\n            /**\n             * Executes a module callback function. Broken out as a separate function\n             * solely to allow the build system to sequence the files in the built\n             * layer in the right sequence.\n             *\n             * @private\n             */\n            execCb: function (name, callback, args, exports) {\n                return callback.apply(exports, args);\n            },\n\n            /**\n             * callback for script loads, used to check status of loading.\n             *\n             * @param {Event} evt the event from the browser for the script\n             * that was loaded.\n             */\n            onScriptLoad: function (evt) {\n                //Using currentTarget instead of target for Firefox 2.0's sake. Not\n                //all old browsers will be supported, but this one was easy enough\n                //to support and still makes sense.\n                if (evt.type === 'load' ||\n                        (readyRegExp.test((evt.currentTarget || evt.srcElement).readyState))) {\n                    //Reset interactive script so a script node is not held onto for\n                    //to long.\n                    interactiveScript = null;\n\n                    //Pull out the name of the module and the context.\n                    var data = getScriptData(evt);\n                    context.completeLoad(data.id);\n                }\n            },\n\n            /**\n             * Callback for script errors.\n             */\n            onScriptError: function (evt) {\n                var data = getScriptData(evt);\n                if (!hasPathFallback(data.id)) {\n                    var parents = [];\n                    eachProp(registry, function(value, key) {\n                        if (key.indexOf('_@r') !== 0) {\n                            each(value.depMaps, function(depMap) {\n                                if (depMap.id === data.id) {\n                                    parents.push(key);\n                                    return true;\n                                }\n                            });\n                        }\n                    });\n                    return onError(makeError('scripterror', 'Script error for \"' + data.id +\n                                             (parents.length ?\n                                             '\", needed by: ' + parents.join(', ') :\n                                             '\"'), evt, [data.id]));\n                }\n            }\n        };\n\n        context.require = context.makeRequire();\n        return context;\n    }\n\n    /**\n     * Main entry point.\n     *\n     * If the only argument to require is a string, then the module that\n     * is represented by that string is fetched for the appropriate context.\n     *\n     * If the first argument is an array, then it will be treated as an array\n     * of dependency string names to fetch. An optional function callback can\n     * be specified to execute when all of those dependencies are available.\n     *\n     * Make a local req variable to help Caja compliance (it assumes things\n     * on a require that are not standardized), and to give a short\n     * name for minification/local scope use.\n     */\n    req = requirejs = function (deps, callback, errback, optional) {\n\n        //Find the right context, use default\n        var context, config,\n            contextName = defContextName;\n\n        // Determine if have config object in the call.\n        if (!isArray(deps) && typeof deps !== 'string') {\n            // deps is a config object\n            config = deps;\n            if (isArray(callback)) {\n                // Adjust args if there are dependencies\n                deps = callback;\n                callback = errback;\n                errback = optional;\n            } else {\n                deps = [];\n            }\n        }\n\n        if (config && config.context) {\n            contextName = config.context;\n        }\n\n        context = getOwn(contexts, contextName);\n        if (!context) {\n            context = contexts[contextName] = req.s.newContext(contextName);\n        }\n\n        if (config) {\n            context.configure(config);\n        }\n\n        return context.require(deps, callback, errback);\n    };\n\n    /**\n     * Support require.config() to make it easier to cooperate with other\n     * AMD loaders on globally agreed names.\n     */\n    req.config = function (config) {\n        return req(config);\n    };\n\n    /**\n     * Execute something after the current tick\n     * of the event loop. Override for other envs\n     * that have a better solution than setTimeout.\n     * @param  {Function} fn function to execute later.\n     */\n    req.nextTick = typeof setTimeout !== 'undefined' ? function (fn) {\n        setTimeout(fn, 4);\n    } : function (fn) { fn(); };\n\n    /**\n     * Export require as a global, but only if it does not already exist.\n     */\n    if (!requireJSRequire) {\n        requireJSRequire = req;\n    }\n\n    req.version = version;\n\n    //Used to filter out dependencies that are already paths.\n    req.jsExtRegExp = /^\\/|:|\\?|\\.js$/;\n    req.isBrowser = isBrowser;\n    s = req.s = {\n        contexts: contexts,\n        newContext: newContext\n    };\n\n    //Create default context.\n    req({});\n\n    //Exports some context-sensitive methods on global require.\n    each([\n        'toUrl',\n        'undef',\n        'defined',\n        'specified'\n    ], function (prop) {\n        //Reference from contexts instead of early binding to default context,\n        //so that during builds, the latest instance of the default context\n        //with its config gets used.\n        req[prop] = function () {\n            var ctx = contexts[defContextName];\n            return ctx.require[prop].apply(ctx, arguments);\n        };\n    });\n\n    if (isBrowser) {\n        head = s.head = document.getElementsByTagName('head')[0];\n        //If BASE tag is in play, using appendChild is a problem for IE6.\n        //When that browser dies, this can be removed. Details in this jQuery bug:\n        //http://dev.jquery.com/ticket/2709\n        baseElement = document.getElementsByTagName('base')[0];\n        if (baseElement) {\n            head = s.head = baseElement.parentNode;\n        }\n    }\n\n    /**\n     * Any errors that require explicitly generates will be passed to this\n     * function. Intercept/override it if you want custom error handling.\n     * @param {Error} err the error object.\n     */\n    req.onError = defaultOnError;\n\n    /**\n     * Creates the node for the load command. Only used in browser envs.\n     */\n    req.createNode = function (config, moduleName, url) {\n        var node = config.xhtml ?\n                document.createElementNS('http://www.w3.org/1999/xhtml', 'html:script') :\n                document.createElement('script');\n        node.type = config.scriptType || 'text/javascript';\n        node.charset = 'utf-8';\n        node.async = true;\n        return node;\n    };\n\n    /**\n     * Does the request to load a module for the browser case.\n     * Make this a separate function to allow other environments\n     * to override it.\n     *\n     * @param {Object} context the require context to find state.\n     * @param {String} moduleName the name of the module.\n     * @param {Object} url the URL to the module.\n     */\n    req.load = function (context, moduleName, url) {\n        var config = (context && context.config) || {},\n            node;\n        if (isBrowser) {\n            //In the browser so use a script tag\n            node = req.createNode(config, moduleName, url);\n\n            node.setAttribute('data-requirecontext', context.contextName);\n            node.setAttribute('data-requiremodule', moduleName);\n\n            //Set up load listener. Test attachEvent first because IE9 has\n            //a subtle issue in its addEventListener and script onload firings\n            //that do not match the behavior of all other browsers with\n            //addEventListener support, which fire the onload event for a\n            //script right after the script execution. See:\n            //https://connect.microsoft.com/IE/feedback/details/648057/script-onload-event-is-not-fired-immediately-after-script-execution\n            //UNFORTUNATELY Opera implements attachEvent but does not follow the script\n            //script execution mode.\n            if (node.attachEvent &&\n                    //Check if node.attachEvent is artificially added by custom script or\n                    //natively supported by browser\n                    //read https://github.com/requirejs/requirejs/issues/187\n                    //if we can NOT find [native code] then it must NOT natively supported.\n                    //in IE8, node.attachEvent does not have toString()\n                    //Note the test for \"[native code\" with no closing brace, see:\n                    //https://github.com/requirejs/requirejs/issues/273\n                    !(node.attachEvent.toString && node.attachEvent.toString().indexOf('[native code') < 0) &&\n                    !isOpera) {\n                //Probably IE. IE (at least 6-8) do not fire\n                //script onload right after executing the script, so\n                //we cannot tie the anonymous define call to a name.\n                //However, IE reports the script as being in 'interactive'\n                //readyState at the time of the define call.\n                useInteractive = true;\n\n                node.attachEvent('onreadystatechange', context.onScriptLoad);\n                //It would be great to add an error handler here to catch\n                //404s in IE9+. However, onreadystatechange will fire before\n                //the error handler, so that does not help. If addEventListener\n                //is used, then IE will fire error before load, but we cannot\n                //use that pathway given the connect.microsoft.com issue\n                //mentioned above about not doing the 'script execute,\n                //then fire the script load event listener before execute\n                //next script' that other browsers do.\n                //Best hope: IE10 fixes the issues,\n                //and then destroys all installs of IE 6-9.\n                //node.attachEvent('onerror', context.onScriptError);\n            } else {\n                node.addEventListener('load', context.onScriptLoad, false);\n                node.addEventListener('error', context.onScriptError, false);\n            }\n            node.src = url;\n\n            //Calling onNodeCreated after all properties on the node have been\n            //set, but before it is placed in the DOM.\n            if (config.onNodeCreated) {\n                config.onNodeCreated(node, config, moduleName, url);\n            }\n\n            //For some cache cases in IE 6-8, the script executes before the end\n            //of the appendChild execution, so to tie an anonymous define\n            //call to the module name (which is stored on the node), hold on\n            //to a reference to this node, but clear after the DOM insertion.\n            currentlyAddingScript = node;\n            if (baseElement) {\n                // head.insertBefore(node, baseElement);\n            } else {\n                // head.appendChild(node);\n            }\n            currentlyAddingScript = null;\n\n            context.onScriptLoad({ type: 'load' })\n\n            return node;\n        } else if (isWebWorker) {\n            try {\n                //In a web worker, use importScripts. This is not a very\n                //efficient use of importScripts, importScripts will block until\n                //its script is downloaded and evaluated. However, if web workers\n                //are in play, the expectation is that a build has been done so\n                //that only one script needs to be loaded anyway. This may need\n                //to be reevaluated if other use cases become common.\n\n                // Post a task to the event loop to work around a bug in WebKit\n                // where the worker gets garbage-collected after calling\n                // importScripts(): https://webkit.org/b/153317\n                setTimeout(function() {}, 0);\n                importScripts(url);\n\n                //Account for anonymous modules\n                context.completeLoad(moduleName);\n            } catch (e) {\n                context.onError(makeError('importscripts',\n                                'importScripts failed for ' +\n                                    moduleName + ' at ' + url,\n                                e,\n                                [moduleName]));\n            }\n        }\n    };\n\n    function getInteractiveScript() {\n        if (interactiveScript && interactiveScript.readyState === 'interactive') {\n            return interactiveScript;\n        }\n\n        eachReverse(scripts(), function (script) {\n            if (script.readyState === 'interactive') {\n                return (interactiveScript = script);\n            }\n        });\n        return interactiveScript;\n    }\n\n    //Look for a data-main script attribute, which could also adjust the baseUrl.\n    if (isBrowser && !cfg.skipDataMain) {\n        //Figure out baseUrl. Get it from the script tag with require.js in it.\n        eachReverse(scripts(), function (script) {\n            //Set the 'head' where we can append children by\n            //using the script's parent.\n            if (!head) {\n                head = script.parentNode;\n            }\n\n            //Look for a data-main attribute to set main script for the page\n            //to load. If it is there, the path to data main becomes the\n            //baseUrl, if it is not already set.\n            dataMain = script.getAttribute('data-main');\n            if (dataMain) {\n                //Preserve dataMain in case it is a path (i.e. contains '?')\n                mainScript = dataMain;\n\n                //Set final baseUrl if there is not already an explicit one,\n                //but only do so if the data-main value is not a loader plugin\n                //module ID.\n                if (!cfg.baseUrl && mainScript.indexOf('!') === -1) {\n                    //Pull off the directory of data-main for use as the\n                    //baseUrl.\n                    src = mainScript.split('/');\n                    mainScript = src.pop();\n                    subPath = src.length ? src.join('/')  + '/' : './';\n\n                    cfg.baseUrl = subPath;\n                }\n\n                //Strip off any trailing .js since mainScript is now\n                //like a module name.\n                mainScript = mainScript.replace(jsSuffixRegExp, '');\n\n                //If mainScript is still a path, fall back to dataMain\n                if (req.jsExtRegExp.test(mainScript)) {\n                    mainScript = dataMain;\n                }\n\n                //Put the data-main script in the files to load.\n                cfg.deps = cfg.deps ? cfg.deps.concat(mainScript) : [mainScript];\n\n                return true;\n            }\n        });\n    }\n\n    /**\n     * The function that handles definitions of modules. Differs from\n     * require() in that a string for the module should be the first argument,\n     * and the function to execute after dependencies are loaded should\n     * return a value to define the module corresponding to the first argument's\n     * name.\n     */\n    define = function (name, deps, callback) {\n        var node, context;\n\n        //Allow for anonymous modules\n        if (typeof name !== 'string') {\n            //Adjust args appropriately\n            callback = deps;\n            deps = name;\n            name = null;\n        }\n\n        //This module may not have dependencies\n        if (!isArray(deps)) {\n            callback = deps;\n            deps = null;\n        }\n\n        //If no name, and callback is a function, then figure out if it a\n        //CommonJS thing with dependencies.\n        if (!deps && isFunction(callback)) {\n            deps = [];\n            //Remove comments from the callback string,\n            //look for require calls, and pull them into the dependencies,\n            //but only if there are function args.\n            if (callback.length) {\n                callback\n                    .toString()\n                    .replace(commentRegExp, commentReplace)\n                    .replace(cjsRequireRegExp, function (match, dep) {\n                        deps.push(dep);\n                    });\n\n                //May be a CommonJS thing even without require calls, but still\n                //could use exports, and module. Avoid doing exports and module\n                //work though if it just needs require.\n                //REQUIRES the function to expect the CommonJS variables in the\n                //order listed below.\n                deps = (callback.length === 1 ? ['require'] : ['require', 'exports', 'module']).concat(deps);\n            }\n        }\n\n        //If in IE 6-8 and hit an anonymous define() call, do the interactive\n        //work.\n        if (useInteractive) {\n            node = currentlyAddingScript || getInteractiveScript();\n            if (node) {\n                if (!name) {\n                    name = node.getAttribute('data-requiremodule');\n                }\n                context = contexts[node.getAttribute('data-requirecontext')];\n            }\n        }\n\n        //Always save off evaluating the def call until the script onload handler.\n        //This allows multiple modules to be in a file without prematurely\n        //tracing dependencies, and allows for anonymous module support,\n        //where the module name is not known until the script onload event\n        //occurs. If no context, use the global queue, and get it processed\n        //in the onscript load callback.\n        if (context) {\n            context.defQueue.push([name, deps, callback]);\n            context.defQueueMap[name] = true;\n        } else {\n            globalDefQueue.push([name, deps, callback]);\n        }\n    };\n\n    define.amd = {\n        jQuery: true\n    };\n\n    /**\n     * Executes the text. Normally just uses eval, but can be modified\n     * to use a better, environment-specific call. Only used for transpiling\n     * loader plugins, not for plain JS modules.\n     * @param {String} text the text to execute/evaluate.\n     */\n    req.exec = function (text) {\n        /*jslint evil: true */\n        return eval(text);\n    };\n\n    //Set up with config info.\n    req(cfg);\n}(this, (typeof setTimeout === 'undefined' ? undefined : setTimeout)));\n\n  function OMG_TvwRIDZZiwqMqqPRrAYIPpFa () {\n    var self = this;\n    \n\n\n\n(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define(\"@/style.css\", [\"exports\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(exports);\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(mod.exports);\n    global.styleCss = mod.exports;\n  }\n})(this, function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  var css = \"html, body {\\n  width: 100%;\\n  height: 100%;\\n  margin: 0px;\\n  padding: 0px;\\n}\\nhtml, body, #app {\\n  box-sizing: border-box;\\n  width: 100%;\\n  height: 100%;\\n  overflow: hidden;\\n}\\n.full{\\n  width: 100%;\\n  height: 100%;\\n}\";\n  var head = document.head || document.getElementsByTagName('head')[0];\n  var style = document.createElement('style');\n  style.type = 'text/css';\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = css;\n  } else {\n    style.appendChild(document.createTextNode(css));\n  }\n\n  head.appendChild(style);\n  exports.default = \"html, body {\\n  width: 100%;\\n  height: 100%;\\n  margin: 0px;\\n  padding: 0px;\\n}\\nhtml, body, #app {\\n  box-sizing: border-box;\\n  width: 100%;\\n  height: 100%;\\n  overflow: hidden;\\n}\\n.full{\\n  width: 100%;\\n  height: 100%;\\n}\";\n});\n\n(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define(\"@/main.js\", [\"exports\", \"@/app.vue\", \"@/router.js\", \"@/style.css\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(exports, require(\"@/app.vue\"), require(\"@/router.js\"), require(\"@/style.css\"));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(mod.exports, global.appVue, global.routerJs, global.styleCss);\n    global.mainJs = mod.exports;\n  }\n})(this, function (exports, _app, _router) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n\n  var _app2 = _interopRequireDefault(_app);\n\n  var _router2 = _interopRequireDefault(_router);\n\n  function _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n      default: obj\n    };\n  }\n\n  var oldDOM = document.querySelector('#app-attach-point');\n  var newDOM = document.createElement('div');\n  newDOM.id = '#app-attach-point';\n  document.body.appendChild(newDOM);\n  var target = oldDOM || newDOM;\n  var app = new Vue({\n    router: _router2.default,\n    el: target,\n    components: {\n      App: _app2.default\n    },\n    template: '<div id=\"app\"><App /></div>'\n  });\n  window.addEventListener('message', function (evt) {\n    var _evt$data = evt.data,\n        type = _evt$data.type,\n        data = _evt$data.data;\n    window.dispatchEvent(new CustomEvent(type, {\n      detail: data\n    }));\n  }, false);\n  window.addEventListener('slider', function (_ref) {\n    var detail = _ref.detail;\n    console.log(detail);\n    (window.opener || window.top).dispatchEvent(new CustomEvent('loklok', {\n      detail: {\n        rand: Math.random()\n      }\n    }));\n  });\n  exports.default = app;\n});\n\n(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define(\"@/router.js\", [\"exports\", \"@/webgl/layout/Player.vue\", \"@/webgl/pages/Home.vue\", \"@/webgl/pages/Happy.vue\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(exports, require(\"@/webgl/layout/Player.vue\"), require(\"@/webgl/pages/Home.vue\"), require(\"@/webgl/pages/Happy.vue\"));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(mod.exports, global.webglLayoutPlayerVue, global.webglPagesHomeVue, global.webglPagesHappyVue);\n    global.routerJs = mod.exports;\n  }\n})(this, function (exports, _Player, _Home, _Happy) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n\n  var _Player2 = _interopRequireDefault(_Player);\n\n  var _Home2 = _interopRequireDefault(_Home);\n\n  var _Happy2 = _interopRequireDefault(_Happy);\n\n  function _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n      default: obj\n    };\n  }\n\n  var router = new VueRouter({\n    mode: 'hash',\n    routes: [{\n      path: '/',\n      component: _Player2.default,\n      children: [{\n        path: '',\n        component: _Home2.default\n      }, {\n        path: 'happy',\n        component: _Happy2.default\n      }]\n    }]\n  });\n  exports.default = router;\n});\n\n(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define(\"@/app.vue\", [\"exports\", \"@/three.js\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(exports, require(\"@/three.js\"));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(mod.exports, global.threeJs);\n    global.appVue = mod.exports;\n  }\n})(this, function (exports, _three) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n\n  var _three2 = _interopRequireDefault(_three);\n\n  function _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n      default: obj\n    };\n  }\n\n  function _instanceof(left, right) {\n    if (right != null && typeof Symbol !== \"undefined\" && right[Symbol.hasInstance]) {\n      return right[Symbol.hasInstance](left);\n    } else {\n      return left instanceof right;\n    }\n  }\n\n  var css = \"\\n\\n\";\n  var head = document.head || document.getElementsByTagName('head')[0];\n  var style = document.createElement('style');\n  style.type = 'text/css';\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = css;\n  } else {\n    style.appendChild(document.createTextNode(css));\n  }\n\n  function addScope(styleElt, scopeName) {\n    function process() {\n      var sheet = styleElt.sheet;\n      var rules = sheet.cssRules;\n\n      for (var i = 0; i < rules.length; ++i) {\n        var rule = rules[i];\n        if (rule.type !== 1) continue;\n        var scopedSelectors = [];\n        rule.selectorText.split(/s*,s*/).forEach(function (sel) {\n          scopedSelectors.push(scopeName + ' ' + sel);\n          var segments = sel.match(/([^ :]+)(.+)?/);\n          scopedSelectors.push(segments[1] + scopeName + (segments[2] || ''));\n        });\n        var scopedRule = scopedSelectors.join(',') + rule.cssText.substr(rule.selectorText.length);\n        sheet.deleteRule(i);\n        sheet.insertRule(scopedRule, i);\n      }\n    }\n\n    try {\n      // firefox may fail sheet.cssRules with InvalidAccessError\n      process();\n    } catch (ex) {\n      if (_instanceof(ex, DOMException) && ex.code === DOMException.INVALID_ACCESS_ERR) {\n        styleElt.sheet.disabled = true;\n        styleElt.addEventListener('load', function onStyleLoaded() {\n          styleElt.removeEventListener('load', onStyleLoaded); // firefox need this timeout otherwise we have to use document.importNode(style, true)\n\n          setTimeout(function () {\n            process();\n            styleElt.sheet.disabled = false;\n          });\n        });\n        return;\n      }\n\n      throw ex;\n    }\n  }\n\n  head.appendChild(style);\n\n  if (false) {\n    addScope(style, '[data-s-1lwl]');\n  }\n\n  exports.default = {\n    template: \"\\n  <divdata-s-1lwl>\\n    <router-view></router-view>\\n  </div>\\n\",\n    data: function data() {\n      return {};\n    },\n    created: function created() {},\n    beforeDestroy: function beforeDestroy() {},\n    methods: {}\n  };\n});\n\n(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define(\"@/webgl/layout/Player.vue\", [\"exports\", \"@/webgl/Bundle.js\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(exports, require(\"@/webgl/Bundle.js\"));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(mod.exports, global.webglBundleJs);\n    global.webglLayoutPlayerVue = mod.exports;\n  }\n})(this, function (exports, _Bundle) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n\n  var _Bundle2 = _interopRequireDefault(_Bundle);\n\n  function _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n      default: obj\n    };\n  }\n\n  function _instanceof(left, right) {\n    if (right != null && typeof Symbol !== \"undefined\" && right[Symbol.hasInstance]) {\n      return right[Symbol.hasInstance](left);\n    } else {\n      return left instanceof right;\n    }\n  }\n\n  var css = \"\\n.hidden{\\n  display: none;\\n}\\n.full{\\n  width: 100%;\\n  height: 100%;\\n}\\n\";\n  var head = document.head || document.getElementsByTagName('head')[0];\n  var style = document.createElement('style');\n  style.type = 'text/css';\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = css;\n  } else {\n    style.appendChild(document.createTextNode(css));\n  }\n\n  function addScope(styleElt, scopeName) {\n    function process() {\n      var sheet = styleElt.sheet;\n      var rules = sheet.cssRules;\n\n      for (var i = 0; i < rules.length; ++i) {\n        var rule = rules[i];\n        if (rule.type !== 1) continue;\n        var scopedSelectors = [];\n        rule.selectorText.split(/s*,s*/).forEach(function (sel) {\n          scopedSelectors.push(scopeName + ' ' + sel);\n          var segments = sel.match(/([^ :]+)(.+)?/);\n          scopedSelectors.push(segments[1] + scopeName + (segments[2] || ''));\n        });\n        var scopedRule = scopedSelectors.join(',') + rule.cssText.substr(rule.selectorText.length);\n        sheet.deleteRule(i);\n        sheet.insertRule(scopedRule, i);\n      }\n    }\n\n    try {\n      // firefox may fail sheet.cssRules with InvalidAccessError\n      process();\n    } catch (ex) {\n      if (_instanceof(ex, DOMException) && ex.code === DOMException.INVALID_ACCESS_ERR) {\n        styleElt.sheet.disabled = true;\n        styleElt.addEventListener('load', function onStyleLoaded() {\n          styleElt.removeEventListener('load', onStyleLoaded); // firefox need this timeout otherwise we have to use document.importNode(style, true)\n\n          setTimeout(function () {\n            process();\n            styleElt.sheet.disabled = false;\n          });\n        });\n        return;\n      }\n\n      throw ex;\n    }\n  }\n\n  head.appendChild(style);\n\n  if (true) {\n    addScope(style, '[data-s-odu]');\n  }\n\n  exports.default = {\n    template: \"\\n  <div class=\\\"full\\\" ref=\\\"full\\\"data-s-odu>\\n\\n    <Renderer\\n      :alpha=\\\"false\\\"\\n      ref=\\\"renderer\\\"\\n      :size=\\\"size\\\"\\n      @renderer=\\\"(v) => { renderer = v }\\\"\\n      @toucher=\\\"(v) => { toucher = v }\\\"\\n    >\\n    </Renderer>\\n    \\n    <keep-alive>\\n      <component\\n        class=\\\"hidden\\\"\\n        :is=\\\"'router-view'\\\"\\n        v-if=\\\"renderer\\\"\\n        :size=\\\"size\\\"\\n        :toucher=\\\"toucher\\\"\\n        :renderer=\\\"renderer\\\"\\n      >\\n      </component>\\n    </keep-alive>\\n\\n  </div>\\n\",\n    components: { ..._Bundle2.default\n    },\n    computed: {},\n    methods: {},\n    data: function data() {\n      return {\n        toucher: false,\n        resizer: function resizer() {},\n        renderer: false,\n        size: {\n          width: 100,\n          height: 100,\n          aspect: 1\n        }\n      };\n    },\n    created: function created() {},\n    mounted: function mounted() {\n      var _this = this;\n\n      var resizer = this.resizer = function () {\n        _this.$nextTick(function () {\n          var rect = _this.$refs.full.getBoundingClientRect();\n\n          _this.size = {\n            width: rect.width,\n            height: rect.height,\n            aspect: rect.width / rect.height\n          };\n        });\n      };\n\n      window.addEventListener('resize', resizer.bind(this));\n      resizer();\n    }\n  };\n});\n\n(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define(\"@/webgl/pages/Home.vue\", [\"exports\", \"@/webgl/Bundle.js\", \"@/shader/Simple/vs.vert\", \"@/shader/Simple/fs.frag\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(exports, require(\"@/webgl/Bundle.js\"), require(\"@/shader/Simple/vs.vert\"), require(\"@/shader/Simple/fs.frag\"));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(mod.exports, global.webglBundleJs, global.shaderSimpleVsVert, global.shaderSimpleFsFrag);\n    global.webglPagesHomeVue = mod.exports;\n  }\n})(this, function (exports, _Bundle, _vs, _fs) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n\n  var _Bundle2 = _interopRequireDefault(_Bundle);\n\n  var _vs2 = _interopRequireDefault(_vs);\n\n  var _fs2 = _interopRequireDefault(_fs);\n\n  function _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n      default: obj\n    };\n  }\n\n  function _instanceof(left, right) {\n    if (right != null && typeof Symbol !== \"undefined\" && right[Symbol.hasInstance]) {\n      return right[Symbol.hasInstance](left);\n    } else {\n      return left instanceof right;\n    }\n  }\n\n  var css = \"\\n.full{\\n  width: 100%;\\n  height: 100%;\\n}\\n\";\n  var head = document.head || document.getElementsByTagName('head')[0];\n  var style = document.createElement('style');\n  style.type = 'text/css';\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = css;\n  } else {\n    style.appendChild(document.createTextNode(css));\n  }\n\n  function addScope(styleElt, scopeName) {\n    function process() {\n      var sheet = styleElt.sheet;\n      var rules = sheet.cssRules;\n\n      for (var i = 0; i < rules.length; ++i) {\n        var rule = rules[i];\n        if (rule.type !== 1) continue;\n        var scopedSelectors = [];\n        rule.selectorText.split(/s*,s*/).forEach(function (sel) {\n          scopedSelectors.push(scopeName + ' ' + sel);\n          var segments = sel.match(/([^ :]+)(.+)?/);\n          scopedSelectors.push(segments[1] + scopeName + (segments[2] || ''));\n        });\n        var scopedRule = scopedSelectors.join(',') + rule.cssText.substr(rule.selectorText.length);\n        sheet.deleteRule(i);\n        sheet.insertRule(scopedRule, i);\n      }\n    }\n\n    try {\n      // firefox may fail sheet.cssRules with InvalidAccessError\n      process();\n    } catch (ex) {\n      if (_instanceof(ex, DOMException) && ex.code === DOMException.INVALID_ACCESS_ERR) {\n        styleElt.sheet.disabled = true;\n        styleElt.addEventListener('load', function onStyleLoaded() {\n          styleElt.removeEventListener('load', onStyleLoaded); // firefox need this timeout otherwise we have to use document.importNode(style, true)\n\n          setTimeout(function () {\n            process();\n            styleElt.sheet.disabled = false;\n          });\n        });\n        return;\n      }\n\n      throw ex;\n    }\n  }\n\n  head.appendChild(style);\n\n  if (true) {\n    addScope(style, '[data-s-10u0]');\n  }\n\n  exports.default = {\n    template: \"\\n  <div class=\\\"\\\"data-s-10u0>\\n    <PerspectiveCamera\\n      :fov=\\\"75\\\"\\n      :aspect=\\\"size.aspect\\\"\\n      :near=\\\"1\\\"\\n      :far=\\\"1000\\\"\\n      :position=\\\"{ x: 0, y: 0, z: 15 }\\\"\\n      @camera=\\\"(v) => { camera = v; }\\\"\\n    />\\n    \\n    <Scene @scene=\\\"(v) => { scene = v; }\\\">\\n      <Object3D pz=\\\"10\\\">\\n        <PointLight />\\n      </Object3D>\\n      \\n      <Object3D pz=\\\"0\\\">\\n        <Mesh>\\n          <SphereBufferGeometry />\\n          <ShaderMaterial :vs=\\\"simpleVS\\\" :fs=\\\"simpleFS\\\" :uniforms=\\\"animatable\\\" />\\n        </Mesh>\\n      </Object3D>\\n    </Scene>\\n    \\n    <Raycaster v-if=\\\"camera && toucher && scene\\\" :scene=\\\"scene\\\" :toucher=\\\"toucher\\\" :camera=\\\"camera\\\" @found=\\\"(v) => { found = v; }\\\" @click=\\\"onClick\\\">\\n    </Raycaster>\\n    \\n  </div>\\n\",\n    name: 'Home',\n    props: {\n      toucher: {},\n      size: {},\n      renderer: {},\n      doc: {}\n    },\n    components: { ..._Bundle2.default\n    },\n    computed: {},\n    data: function data() {\n      return {\n        cam: {\n          pos: {\n            x: 3,\n            y: 5,\n            z: 10\n          }\n        },\n        ready: false,\n        cubeCamera: false,\n        visible: true,\n        resizer: function resizer() {},\n        scene: false,\n        camera: false,\n        found: [],\n        animatable: {\n          time: {\n            value: 0\n          }\n        },\n        simpleVS: _vs2.default,\n        simpleFS: _fs2.default\n      };\n    },\n    methods: {\n      onClick: function onClick(_ref) {\n        var event = _ref.event,\n            intersects = _ref.intersects;\n        this.$router.push({\n          path: '/happy'\n        });\n        this.$forceUpdate();\n        console.log('Click to happy');\n      },\n      setup: function setup() {\n        this.scene.background = new THREE.Color(0xffffff);\n      },\n      renderWebGL: function renderWebGL() {\n        TWEEN.update();\n        this.animatable.time.value += 0.01;\n\n        if (this.scene && this.camera && this.renderer) {\n          this.renderer.render(this.scene, this.camera);\n        }\n      }\n    },\n    watch: {\n      camera: function camera() {\n        if (this.camera && this.renderer) {\n          this.ready = true;\n        }\n      },\n      renderer: function renderer() {\n        if (this.camera && this.renderer) {\n          this.ready = true;\n        }\n      },\n      ready: function ready() {\n        if (this.ready) {\n          this.setup();\n        }\n      }\n    },\n    created: function created() {},\n    activated: function activated() {\n      var self = this;\n\n      function loop(rAFT) {\n        self.rAFID = window.requestAnimationFrame(loop);\n        self.renderWebGL(rAFT);\n      }\n\n      self.rAFID = window.requestAnimationFrame(loop);\n    },\n    deactivated: function deactivated() {\n      window.cancelAnimationFrame(this.rAFID);\n    }\n  };\n});\n\n(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define(\"@/webgl/pages/Happy.vue\", [\"exports\", \"@/webgl/Bundle.js\", \"@/shader/Fling/vs.vert\", \"@/shader/Simple/vs.vert\", \"@/shader/Simple/fs.frag\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(exports, require(\"@/webgl/Bundle.js\"), require(\"@/shader/Fling/vs.vert\"), require(\"@/shader/Simple/vs.vert\"), require(\"@/shader/Simple/fs.frag\"));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(mod.exports, global.webglBundleJs, global.shaderFlingVsVert, global.shaderSimpleVsVert, global.shaderSimpleFsFrag);\n    global.webglPagesHappyVue = mod.exports;\n  }\n})(this, function (exports, _Bundle, _vs, _vs3, _fs) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n\n  var _Bundle2 = _interopRequireDefault(_Bundle);\n\n  var _vs2 = _interopRequireDefault(_vs);\n\n  var _vs4 = _interopRequireDefault(_vs3);\n\n  var _fs2 = _interopRequireDefault(_fs);\n\n  function _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n      default: obj\n    };\n  }\n\n  function _instanceof(left, right) {\n    if (right != null && typeof Symbol !== \"undefined\" && right[Symbol.hasInstance]) {\n      return right[Symbol.hasInstance](left);\n    } else {\n      return left instanceof right;\n    }\n  }\n\n  var css = \"\\n.full{\\n  width: 100%;\\n  height: 100%;\\n}\\n\";\n  var head = document.head || document.getElementsByTagName('head')[0];\n  var style = document.createElement('style');\n  style.type = 'text/css';\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = css;\n  } else {\n    style.appendChild(document.createTextNode(css));\n  }\n\n  function addScope(styleElt, scopeName) {\n    function process() {\n      var sheet = styleElt.sheet;\n      var rules = sheet.cssRules;\n\n      for (var i = 0; i < rules.length; ++i) {\n        var rule = rules[i];\n        if (rule.type !== 1) continue;\n        var scopedSelectors = [];\n        rule.selectorText.split(/s*,s*/).forEach(function (sel) {\n          scopedSelectors.push(scopeName + ' ' + sel);\n          var segments = sel.match(/([^ :]+)(.+)?/);\n          scopedSelectors.push(segments[1] + scopeName + (segments[2] || ''));\n        });\n        var scopedRule = scopedSelectors.join(',') + rule.cssText.substr(rule.selectorText.length);\n        sheet.deleteRule(i);\n        sheet.insertRule(scopedRule, i);\n      }\n    }\n\n    try {\n      // firefox may fail sheet.cssRules with InvalidAccessError\n      process();\n    } catch (ex) {\n      if (_instanceof(ex, DOMException) && ex.code === DOMException.INVALID_ACCESS_ERR) {\n        styleElt.sheet.disabled = true;\n        styleElt.addEventListener('load', function onStyleLoaded() {\n          styleElt.removeEventListener('load', onStyleLoaded); // firefox need this timeout otherwise we have to use document.importNode(style, true)\n\n          setTimeout(function () {\n            process();\n            styleElt.sheet.disabled = false;\n          });\n        });\n        return;\n      }\n\n      throw ex;\n    }\n  }\n\n  head.appendChild(style);\n\n  if (true) {\n    addScope(style, '[data-s-1hhf]');\n  }\n\n  exports.default = {\n    template: \"\\n  <div class=\\\"\\\"data-s-1hhf>\\n\\n    <PerspectiveCamera\\n      :fov=\\\"75\\\"\\n      :aspect=\\\"size.aspect\\\"\\n      :near=\\\"1\\\"\\n      :far=\\\"1000\\\"\\n      :position=\\\"{ x: 0, y: 0, z: 15 }\\\"\\n      @camera=\\\"(v) => { camera = v; }\\\"\\n    />\\n    \\n    <Scene @scene=\\\"(v) => { scene = v }\\\">\\n      <Object3D pz=\\\"10\\\">\\n        <PointLight />\\n      </Object3D>\\n      \\n      <Object3D pz=\\\"0\\\">\\n        <Points @element=\\\"(v) => { v.$skipRayCast = true }\\\">\\n          <SphereBufferGeometry />\\n          <ShaderMaterial :vs=\\\"simpleVS2\\\" :fs=\\\"simpleFS\\\" :uniforms=\\\"animatable\\\" />\\n        </Points>\\n      </Object3D>\\n      \\n      <Object3D pz=\\\"1\\\">\\n        <Mesh>\\n          <SphereBufferGeometry />\\n          <ShaderMaterial :vs=\\\"simpleVS\\\" :fs=\\\"simpleFS\\\" :uniforms=\\\"animatable\\\" />\\n        </Mesh>\\n      </Object3D>\\n    </Scene>\\n    \\n    <Raycaster v-if=\\\"renderer && camera && toucher && scene\\\" :scene=\\\"scene\\\" :toucher=\\\"toucher\\\" :camera=\\\"camera\\\" @found=\\\"(v) => { found = v; }\\\" @click=\\\"onClick\\\">\\n    </Raycaster>\\n\\n  </div>\\n\",\n    name: 'Happy',\n    props: {\n      toucher: {},\n      size: {},\n      renderer: {},\n      doc: {}\n    },\n    components: { ..._Bundle2.default\n    },\n    computed: {},\n    data: function data() {\n      return {\n        cam: {\n          pos: {\n            x: 3,\n            y: 5,\n            z: 10\n          }\n        },\n        ready: false,\n        cubeCamera: false,\n        visible: true,\n        resizer: function resizer() {},\n        scene: false,\n        camera: false,\n        found: [],\n        animatable: {\n          time: {\n            value: 0\n          }\n        },\n        simpleVS: _vs4.default,\n        simpleFS: _fs2.default,\n        simpleVS2: _vs2.default\n      };\n    },\n    methods: {\n      onClick: function onClick(_ref) {\n        var event = _ref.event,\n            intersects = _ref.intersects;\n        console.log(event, intersects);\n        this.$router.push('/');\n      },\n      setup: function setup() {\n        this.scene.background = new THREE.Color(0xffffff);\n      },\n      renderWebGL: function renderWebGL() {\n        TWEEN.update();\n        this.animatable.time.value += 0.01;\n\n        if (this.scene && this.camera && this.renderer) {\n          this.renderer.render(this.scene, this.camera);\n        }\n      }\n    },\n    watch: {\n      camera: function camera() {\n        if (this.camera && this.renderer) {\n          this.ready = true;\n        }\n      },\n      renderer: function renderer() {\n        if (this.camera && this.renderer) {\n          this.ready = true;\n        }\n      },\n      ready: function ready() {\n        if (this.ready) {\n          this.setup();\n        }\n      }\n    },\n    created: function created() {},\n    activated: function activated() {\n      var self = this;\n\n      function loop(rAFT) {\n        self.rAFID = window.requestAnimationFrame(loop);\n        self.renderWebGL(rAFT);\n      }\n\n      self.rAFID = window.requestAnimationFrame(loop);\n    },\n    deactivated: function deactivated() {\n      window.cancelAnimationFrame(this.rAFID);\n      console.log('cancel animation frame');\n    }\n  };\n});\n\n(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define(\"@/webgl/sample.vue\", [\"exports\", \"@/webgl/Bundle.js\", \"@/shader/Simple/vs.vert\", \"@/shader/Simple/fs.frag\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(exports, require(\"@/webgl/Bundle.js\"), require(\"@/shader/Simple/vs.vert\"), require(\"@/shader/Simple/fs.frag\"));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(mod.exports, global.webglBundleJs, global.shaderSimpleVsVert, global.shaderSimpleFsFrag);\n    global.webglSampleVue = mod.exports;\n  }\n})(this, function (exports, _Bundle, _vs, _fs) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n\n  var _Bundle2 = _interopRequireDefault(_Bundle);\n\n  var _vs2 = _interopRequireDefault(_vs);\n\n  var _fs2 = _interopRequireDefault(_fs);\n\n  function _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n      default: obj\n    };\n  }\n\n  function _instanceof(left, right) {\n    if (right != null && typeof Symbol !== \"undefined\" && right[Symbol.hasInstance]) {\n      return right[Symbol.hasInstance](left);\n    } else {\n      return left instanceof right;\n    }\n  }\n\n  var css = \"\\n.full{\\n  width: 100%;\\n  height: 100%;\\n}\\n\";\n  var head = document.head || document.getElementsByTagName('head')[0];\n  var style = document.createElement('style');\n  style.type = 'text/css';\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = css;\n  } else {\n    style.appendChild(document.createTextNode(css));\n  }\n\n  function addScope(styleElt, scopeName) {\n    function process() {\n      var sheet = styleElt.sheet;\n      var rules = sheet.cssRules;\n\n      for (var i = 0; i < rules.length; ++i) {\n        var rule = rules[i];\n        if (rule.type !== 1) continue;\n        var scopedSelectors = [];\n        rule.selectorText.split(/s*,s*/).forEach(function (sel) {\n          scopedSelectors.push(scopeName + ' ' + sel);\n          var segments = sel.match(/([^ :]+)(.+)?/);\n          scopedSelectors.push(segments[1] + scopeName + (segments[2] || ''));\n        });\n        var scopedRule = scopedSelectors.join(',') + rule.cssText.substr(rule.selectorText.length);\n        sheet.deleteRule(i);\n        sheet.insertRule(scopedRule, i);\n      }\n    }\n\n    try {\n      // firefox may fail sheet.cssRules with InvalidAccessError\n      process();\n    } catch (ex) {\n      if (_instanceof(ex, DOMException) && ex.code === DOMException.INVALID_ACCESS_ERR) {\n        styleElt.sheet.disabled = true;\n        styleElt.addEventListener('load', function onStyleLoaded() {\n          styleElt.removeEventListener('load', onStyleLoaded); // firefox need this timeout otherwise we have to use document.importNode(style, true)\n\n          setTimeout(function () {\n            process();\n            styleElt.sheet.disabled = false;\n          });\n        });\n        return;\n      }\n\n      throw ex;\n    }\n  }\n\n  head.appendChild(style);\n\n  if (true) {\n    addScope(style, '[data-s-yar]');\n  }\n\n  exports.default = {\n    template: \"\\n  <div class=\\\"full\\\"data-s-yar>\\n\\n    <Renderer\\n      ref=\\\"renderer\\\"\\n      :size=\\\"size\\\"\\n      @renderer=\\\"(v) => { renderer = v }\\\"\\n    >\\n    </Renderer>\\n\\n    <PerspectiveCamera\\n      :fov=\\\"75\\\"\\n      :aspect=\\\"size.aspect\\\"\\n      :near=\\\"1\\\"\\n      :far=\\\"1000\\\"\\n      :position=\\\"{ x: 0, y: 0, z: 10 }\\\"\\n      @camera=\\\"(v) => { camera = v; }\\\"\\n    />\\n\\n    <Scene @scene=\\\"(v) => { scene = v }\\\">\\n      <Object3D pz=\\\"10\\\">\\n        <PointLight />\\n      </Object3D>\\n      \\n      <Object3D pz=\\\"0\\\">\\n        <Points>\\n          <SphereBufferGeometry />\\n          <ShaderMaterial :vs=\\\"simpleVS\\\" :fs=\\\"simpleFS\\\" :uniforms=\\\"animatable\\\" />\\n        </Points>\\n      </Object3D>\\n      \\n    </Scene>\\n\\n  </div>\\n\",\n    components: { ..._Bundle2.default\n    },\n    computed: {},\n    methods: {\n      renderWebGL: function renderWebGL() {\n        this.animatable.time.value = window.performance.now() * 0.001;\n\n        if (this.scene && this.camera && this.renderer) {\n          this.renderer.render(this.scene, this.camera);\n        }\n      }\n    },\n    data: function data() {\n      return {\n        animatable: {\n          time: {\n            value: 0\n          }\n        },\n        simpleVS: _vs2.default,\n        simpleFS: _fs2.default,\n        size: {\n          width: window.innerWidth,\n          height: window.innerHeight,\n          aspect: window.innerWidth / window.innerHeight\n        },\n        renderer: false,\n        scene: false,\n        camera: false\n      };\n    },\n    created: function created() {},\n    mounted: function mounted() {\n      var self = this;\n\n      function loop() {\n        self.rAFID = window.requestAnimationFrame(loop);\n        self.renderWebGL();\n      }\n\n      self.rAFID = window.requestAnimationFrame(loop);\n    }\n  };\n});\n\n(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define(\"@/webgl/Bundle.js\", [\"exports\", \"@/webgl/System/Renderer.vue\", \"@/webgl/System/Scene.vue\", \"@/webgl/System/PerspectiveCamera.vue\", \"@/webgl/System/Raycaster.vue\", \"@/webgl/Material/MeshPhongMaterial.vue\", \"@/webgl/Material/ShaderMaterial.vue\", \"@/webgl/Element/Object3D.vue\", \"@/webgl/Element/Mesh.vue\", \"@/webgl/Element/Points.vue\", \"@/webgl/Element/PointLight.vue\", \"@/webgl/Geo/SphereBufferGeometry.vue\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(exports, require(\"@/webgl/System/Renderer.vue\"), require(\"@/webgl/System/Scene.vue\"), require(\"@/webgl/System/PerspectiveCamera.vue\"), require(\"@/webgl/System/Raycaster.vue\"), require(\"@/webgl/Material/MeshPhongMaterial.vue\"), require(\"@/webgl/Material/ShaderMaterial.vue\"), require(\"@/webgl/Element/Object3D.vue\"), require(\"@/webgl/Element/Mesh.vue\"), require(\"@/webgl/Element/Points.vue\"), require(\"@/webgl/Element/PointLight.vue\"), require(\"@/webgl/Geo/SphereBufferGeometry.vue\"));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(mod.exports, global.webglSystemRendererVue, global.webglSystemSceneVue, global.webglSystemPerspectiveCameraVue, global.webglSystemRaycasterVue, global.webglMaterialMeshPhongMaterialVue, global.webglMaterialShaderMaterialVue, global.webglElementObject3DVue, global.webglElementMeshVue, global.webglElementPointsVue, global.webglElementPointLightVue, global.webglGeoSphereBufferGeometryVue);\n    global.webglBundleJs = mod.exports;\n  }\n})(this, function (exports, _Renderer, _Scene, _PerspectiveCamera, _Raycaster, _MeshPhongMaterial, _ShaderMaterial, _Object3D, _Mesh, _Points, _PointLight, _SphereBufferGeometry) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n\n  var _Renderer2 = _interopRequireDefault(_Renderer);\n\n  var _Scene2 = _interopRequireDefault(_Scene);\n\n  var _PerspectiveCamera2 = _interopRequireDefault(_PerspectiveCamera);\n\n  var _Raycaster2 = _interopRequireDefault(_Raycaster);\n\n  var _MeshPhongMaterial2 = _interopRequireDefault(_MeshPhongMaterial);\n\n  var _ShaderMaterial2 = _interopRequireDefault(_ShaderMaterial);\n\n  var _Object3D2 = _interopRequireDefault(_Object3D);\n\n  var _Mesh2 = _interopRequireDefault(_Mesh);\n\n  var _Points2 = _interopRequireDefault(_Points);\n\n  var _PointLight2 = _interopRequireDefault(_PointLight);\n\n  var _SphereBufferGeometry2 = _interopRequireDefault(_SphereBufferGeometry);\n\n  function _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n      default: obj\n    };\n  }\n\n  exports.default = {\n    //materials\n    MeshPhongMaterial: _MeshPhongMaterial2.default,\n    ShaderMaterial: _ShaderMaterial2.default,\n    //system\n    Renderer: _Renderer2.default,\n    Scene: _Scene2.default,\n    PerspectiveCamera: _PerspectiveCamera2.default,\n    Raycaster: _Raycaster2.default,\n    //Elemnts\n    PointLight: _PointLight2.default,\n    Points: _Points2.default,\n    Object3D: _Object3D2.default,\n    Mesh: _Mesh2.default,\n    //Geo\n    SphereBufferGeometry: _SphereBufferGeometry2.default\n  };\n});\n\n(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define(\"@/webgl/System/Renderer.vue\", [\"exports\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(exports);\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(mod.exports);\n    global.webglSystemRendererVue = mod.exports;\n  }\n})(this, function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n\n  function _instanceof(left, right) {\n    if (right != null && typeof Symbol !== \"undefined\" && right[Symbol.hasInstance]) {\n      return right[Symbol.hasInstance](left);\n    } else {\n      return left instanceof right;\n    }\n  }\n\n  var css = \"\\n.full{\\n  width: 100%;\\n  height: 100%;\\n}\\n.pos-rel{\\n  position: relative;\\n}\\n.layer{\\n  position: absolute;\\n  top: 0px;\\n  left: 0px;\\n}\\n\";\n  var head = document.head || document.getElementsByTagName('head')[0];\n  var style = document.createElement('style');\n  style.type = 'text/css';\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = css;\n  } else {\n    style.appendChild(document.createTextNode(css));\n  }\n\n  function addScope(styleElt, scopeName) {\n    function process() {\n      var sheet = styleElt.sheet;\n      var rules = sheet.cssRules;\n\n      for (var i = 0; i < rules.length; ++i) {\n        var rule = rules[i];\n        if (rule.type !== 1) continue;\n        var scopedSelectors = [];\n        rule.selectorText.split(/s*,s*/).forEach(function (sel) {\n          scopedSelectors.push(scopeName + ' ' + sel);\n          var segments = sel.match(/([^ :]+)(.+)?/);\n          scopedSelectors.push(segments[1] + scopeName + (segments[2] || ''));\n        });\n        var scopedRule = scopedSelectors.join(',') + rule.cssText.substr(rule.selectorText.length);\n        sheet.deleteRule(i);\n        sheet.insertRule(scopedRule, i);\n      }\n    }\n\n    try {\n      // firefox may fail sheet.cssRules with InvalidAccessError\n      process();\n    } catch (ex) {\n      if (_instanceof(ex, DOMException) && ex.code === DOMException.INVALID_ACCESS_ERR) {\n        styleElt.sheet.disabled = true;\n        styleElt.addEventListener('load', function onStyleLoaded() {\n          styleElt.removeEventListener('load', onStyleLoaded); // firefox need this timeout otherwise we have to use document.importNode(style, true)\n\n          setTimeout(function () {\n            process();\n            styleElt.sheet.disabled = false;\n          });\n        });\n        return;\n      }\n\n      throw ex;\n    }\n  }\n\n  head.appendChild(style);\n\n  if (true) {\n    addScope(style, '[data-s-1atn]');\n  }\n\n  var THREE = window.THREE;\n  exports.default = {\n    template: \"\\n  <div class=\\\"full pos-rel\\\"data-s-1atn>\\n    <div class=\\\"full layer\\\" ref=\\\"mounter\\\"></div>\\n    <div class=\\\"full layer\\\" ref=\\\"toucher\\\"><slot></slot></div>\\n  </div>\\n\",\n    data: function data() {\n      return {\n        // THREE,\n        renderer: false\n      };\n    },\n    props: {\n      size: {\n        default: function _default() {\n          return {\n            width: 500,\n            height: 500\n          };\n        }\n      },\n      alpha: {\n        default: true\n      },\n      antialias: {\n        default: true\n      }\n    },\n    mounted: function mounted() {\n      this.renderer = new THREE.WebGLRenderer({\n        alpha: this.alpha,\n        antialias: this.antialias\n      });\n      this.resize();\n      this.renderer.domElement.style.marginBottom = '-6px';\n      this.$refs.mounter.appendChild(this.renderer.domElement);\n      this.$emit('toucher', this.$refs['toucher']);\n      this.$emit('renderer', this.renderer);\n    },\n    beforeDestroy: function beforeDestroy() {\n      this.$refs.mounter.removeChild(this.renderer.domElement);\n    },\n    watch: {\n      size: function size() {\n        this.resize();\n      }\n    },\n    methods: {\n      resize: function resize() {\n        var ratio = window.devicePixelRatio || 1;\n        this.renderer.setPixelRatio(ratio);\n        this.renderer.setSize(this.size.width, this.size.height);\n      }\n    }\n  };\n});\n\n(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define(\"@/webgl/System/Scene.vue\", [\"exports\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(exports);\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(mod.exports);\n    global.webglSystemSceneVue = mod.exports;\n  }\n})(this, function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n\n  function _instanceof(left, right) {\n    if (right != null && typeof Symbol !== \"undefined\" && right[Symbol.hasInstance]) {\n      return right[Symbol.hasInstance](left);\n    } else {\n      return left instanceof right;\n    }\n  }\n\n  var css = \"\\n.mounter {\\n  display: none;\\n}\\n\";\n  var head = document.head || document.getElementsByTagName('head')[0];\n  var style = document.createElement('style');\n  style.type = 'text/css';\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = css;\n  } else {\n    style.appendChild(document.createTextNode(css));\n  }\n\n  function addScope(styleElt, scopeName) {\n    function process() {\n      var sheet = styleElt.sheet;\n      var rules = sheet.cssRules;\n\n      for (var i = 0; i < rules.length; ++i) {\n        var rule = rules[i];\n        if (rule.type !== 1) continue;\n        var scopedSelectors = [];\n        rule.selectorText.split(/s*,s*/).forEach(function (sel) {\n          scopedSelectors.push(scopeName + ' ' + sel);\n          var segments = sel.match(/([^ :]+)(.+)?/);\n          scopedSelectors.push(segments[1] + scopeName + (segments[2] || ''));\n        });\n        var scopedRule = scopedSelectors.join(',') + rule.cssText.substr(rule.selectorText.length);\n        sheet.deleteRule(i);\n        sheet.insertRule(scopedRule, i);\n      }\n    }\n\n    try {\n      // firefox may fail sheet.cssRules with InvalidAccessError\n      process();\n    } catch (ex) {\n      if (_instanceof(ex, DOMException) && ex.code === DOMException.INVALID_ACCESS_ERR) {\n        styleElt.sheet.disabled = true;\n        styleElt.addEventListener('load', function onStyleLoaded() {\n          styleElt.removeEventListener('load', onStyleLoaded); // firefox need this timeout otherwise we have to use document.importNode(style, true)\n\n          setTimeout(function () {\n            process();\n            styleElt.sheet.disabled = false;\n          });\n        });\n        return;\n      }\n\n      throw ex;\n    }\n  }\n\n  head.appendChild(style);\n\n  if (true) {\n    addScope(style, '[data-s-1xqb]');\n  }\n\n  var THREE = window.THREE;\n  exports.default = {\n    template: \"\\n  <div ref=\\\"mounter\\\" class=\\\"mounter\\\"data-s-1xqb><slot></slot></div>\\n\",\n    data: function data() {\n      return {\n        scene: false\n      };\n    },\n    props: {\n      size: {\n        default: function _default() {\n          return {\n            width: 500,\n            height: 500\n          };\n        }\n      },\n      alpha: {\n        default: true\n      },\n      antialias: {\n        default: true\n      }\n    },\n    created: function created() {\n      var _this = this;\n\n      this.scene = new THREE.Scene();\n      this.$on('add', function (v) {\n        _this.scene.add(v);\n      });\n      this.$on('remove', function (v) {\n        _this.scene.remove(v);\n      });\n    },\n    mounted: function mounted() {\n      this.$emit('scene', this.scene);\n    }\n  };\n});\n\n(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define(\"@/webgl/System/PerspectiveCamera.vue\", [\"exports\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(exports);\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(mod.exports);\n    global.webglSystemPerspectiveCameraVue = mod.exports;\n  }\n})(this, function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n\n  function _instanceof(left, right) {\n    if (right != null && typeof Symbol !== \"undefined\" && right[Symbol.hasInstance]) {\n      return right[Symbol.hasInstance](left);\n    } else {\n      return left instanceof right;\n    }\n  }\n\n  var css = \"\\n.perspective-camera{\\n  display: none;\\n}\\n\";\n  var head = document.head || document.getElementsByTagName('head')[0];\n  var style = document.createElement('style');\n  style.type = 'text/css';\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = css;\n  } else {\n    style.appendChild(document.createTextNode(css));\n  }\n\n  function addScope(styleElt, scopeName) {\n    function process() {\n      var sheet = styleElt.sheet;\n      var rules = sheet.cssRules;\n\n      for (var i = 0; i < rules.length; ++i) {\n        var rule = rules[i];\n        if (rule.type !== 1) continue;\n        var scopedSelectors = [];\n        rule.selectorText.split(/s*,s*/).forEach(function (sel) {\n          scopedSelectors.push(scopeName + ' ' + sel);\n          var segments = sel.match(/([^ :]+)(.+)?/);\n          scopedSelectors.push(segments[1] + scopeName + (segments[2] || ''));\n        });\n        var scopedRule = scopedSelectors.join(',') + rule.cssText.substr(rule.selectorText.length);\n        sheet.deleteRule(i);\n        sheet.insertRule(scopedRule, i);\n      }\n    }\n\n    try {\n      // firefox may fail sheet.cssRules with InvalidAccessError\n      process();\n    } catch (ex) {\n      if (_instanceof(ex, DOMException) && ex.code === DOMException.INVALID_ACCESS_ERR) {\n        styleElt.sheet.disabled = true;\n        styleElt.addEventListener('load', function onStyleLoaded() {\n          styleElt.removeEventListener('load', onStyleLoaded); // firefox need this timeout otherwise we have to use document.importNode(style, true)\n\n          setTimeout(function () {\n            process();\n            styleElt.sheet.disabled = false;\n          });\n        });\n        return;\n      }\n\n      throw ex;\n    }\n  }\n\n  head.appendChild(style);\n\n  if (true) {\n    addScope(style, '[data-s-xjb]');\n  }\n\n  var THREE = window.THREE;\n  exports.default = {\n    template: \"\",\n    abstract: true,\n    render: function render() {\n      return null;\n    },\n    props: ['fov', 'aspect', 'near', 'far', 'position'],\n    data: function data() {\n      return {\n        camera: null\n      };\n    },\n    created: function created() {\n      this.camera = new THREE.PerspectiveCamera(this.fov, this.aspect, this.near, this.far);\n\n      if (this.position) {\n        this.camera.position.x = this.position.x;\n        this.camera.position.y = this.position.y;\n        this.camera.position.z = this.position.z;\n      }\n\n      this.$emit('camera', this.camera);\n    },\n    watch: {\n      position: function position() {\n        if (this.position) {\n          this.camera.position.x = this.position.x;\n          this.camera.position.y = this.position.y;\n          this.camera.position.z = this.position.z;\n        }\n      },\n      aspect: function aspect() {\n        if (this.camera) {\n          this.camera.aspect = this.aspect;\n          this.camera.updateProjectionMatrix();\n        }\n      }\n    }\n  };\n});\n\n(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define(\"@/webgl/System/Raycaster.vue\", [\"exports\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(exports);\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(mod.exports);\n    global.webglSystemRaycasterVue = mod.exports;\n  }\n})(this, function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n\n  function _instanceof(left, right) {\n    if (right != null && typeof Symbol !== \"undefined\" && right[Symbol.hasInstance]) {\n      return right[Symbol.hasInstance](left);\n    } else {\n      return left instanceof right;\n    }\n  }\n\n  var css = \"\\n\\n\";\n  var head = document.head || document.getElementsByTagName('head')[0];\n  var style = document.createElement('style');\n  style.type = 'text/css';\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = css;\n  } else {\n    style.appendChild(document.createTextNode(css));\n  }\n\n  function addScope(styleElt, scopeName) {\n    function process() {\n      var sheet = styleElt.sheet;\n      var rules = sheet.cssRules;\n\n      for (var i = 0; i < rules.length; ++i) {\n        var rule = rules[i];\n        if (rule.type !== 1) continue;\n        var scopedSelectors = [];\n        rule.selectorText.split(/s*,s*/).forEach(function (sel) {\n          scopedSelectors.push(scopeName + ' ' + sel);\n          var segments = sel.match(/([^ :]+)(.+)?/);\n          scopedSelectors.push(segments[1] + scopeName + (segments[2] || ''));\n        });\n        var scopedRule = scopedSelectors.join(',') + rule.cssText.substr(rule.selectorText.length);\n        sheet.deleteRule(i);\n        sheet.insertRule(scopedRule, i);\n      }\n    }\n\n    try {\n      // firefox may fail sheet.cssRules with InvalidAccessError\n      process();\n    } catch (ex) {\n      if (_instanceof(ex, DOMException) && ex.code === DOMException.INVALID_ACCESS_ERR) {\n        styleElt.sheet.disabled = true;\n        styleElt.addEventListener('load', function onStyleLoaded() {\n          styleElt.removeEventListener('load', onStyleLoaded); // firefox need this timeout otherwise we have to use document.importNode(style, true)\n\n          setTimeout(function () {\n            process();\n            styleElt.sheet.disabled = false;\n          });\n        });\n        return;\n      }\n\n      throw ex;\n    }\n  }\n\n  head.appendChild(style);\n\n  if (false) {\n    addScope(style, '[data-s-17h6]');\n  }\n\n  exports.default = {\n    template: \"\\n<divdata-s-17h6></div>\\n\",\n    data: function data() {\n      return {\n        rAFID: 0,\n        mouse: null,\n        raycast: function raycast() {},\n        clean: function clean() {},\n        intersects: []\n      };\n    },\n    props: {\n      scene: {},\n      camera: {},\n      toucher: {}\n    },\n    created: function created() {},\n    activated: function activated() {\n      var _this = this;\n\n      var raycaster = new THREE.Raycaster();\n      this.mouse = new THREE.Vector2();\n      this.toucher.addEventListener('mousemove', this.handleMV, false);\n      this.toucher.addEventListener('click', this.handleClick, false);\n\n      this.clean = function () {\n        _this.toucher.removeEventListener('click', _this.handleClick, false);\n\n        _this.toucher.removeEventListener('mousemove', _this.handleMV);\n      };\n\n      var raycast = function raycast() {\n        var mouse = _this.mouse;\n        var scene = _this.scene;\n        var camera = _this.camera;\n        var restore = [];\n\n        _this.scene.traverse(function (ele) {\n          if (ele.$skipRayCast) {\n            restore.push({\n              parent: ele.parent,\n              ele: ele\n            });\n            ele.parent.remove(ele);\n          }\n        }); // update the picking ray with the camera and mouse position\n\n\n        raycaster.setFromCamera(mouse, camera); // calculate objects intersecting the picking ray\n\n        var intersects = raycaster.intersectObjects(scene.children, true);\n        restore.forEach(function (item) {\n          item.parent.add(item.ele);\n        });\n        return intersects;\n      };\n\n      this.raycast = raycast;\n\n      var rAF = function rAF() {\n        _this.rAFID = window.requestAnimationFrame(rAF); // this.raycast();\n      };\n\n      this.rAFID = window.requestAnimationFrame(rAF);\n    },\n    deactivated: function deactivated() {\n      window.cancelAnimationFrame(this.rAFID);\n      this.clean();\n    },\n    methods: {\n      handleClick: function handleClick(event) {\n        this.$emit('click', {\n          event: event,\n          intersects: this.raycast()\n        });\n      },\n      handleMV: function handleMV(event) {\n        this.mouse.x = event.clientX / window.innerWidth * 2 - 1;\n        this.mouse.y = -(event.clientY / window.innerHeight) * 2 + 1;\n      }\n    }\n  };\n});\n\n(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define(\"@/webgl/Material/MeshPhongMaterial.vue\", [\"exports\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(exports);\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(mod.exports);\n    global.webglMaterialMeshPhongMaterialVue = mod.exports;\n  }\n})(this, function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n\n  function _instanceof(left, right) {\n    if (right != null && typeof Symbol !== \"undefined\" && right[Symbol.hasInstance]) {\n      return right[Symbol.hasInstance](left);\n    } else {\n      return left instanceof right;\n    }\n  }\n\n  var css = \"\\n\\n\";\n  var head = document.head || document.getElementsByTagName('head')[0];\n  var style = document.createElement('style');\n  style.type = 'text/css';\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = css;\n  } else {\n    style.appendChild(document.createTextNode(css));\n  }\n\n  function addScope(styleElt, scopeName) {\n    function process() {\n      var sheet = styleElt.sheet;\n      var rules = sheet.cssRules;\n\n      for (var i = 0; i < rules.length; ++i) {\n        var rule = rules[i];\n        if (rule.type !== 1) continue;\n        var scopedSelectors = [];\n        rule.selectorText.split(/s*,s*/).forEach(function (sel) {\n          scopedSelectors.push(scopeName + ' ' + sel);\n          var segments = sel.match(/([^ :]+)(.+)?/);\n          scopedSelectors.push(segments[1] + scopeName + (segments[2] || ''));\n        });\n        var scopedRule = scopedSelectors.join(',') + rule.cssText.substr(rule.selectorText.length);\n        sheet.deleteRule(i);\n        sheet.insertRule(scopedRule, i);\n      }\n    }\n\n    try {\n      // firefox may fail sheet.cssRules with InvalidAccessError\n      process();\n    } catch (ex) {\n      if (_instanceof(ex, DOMException) && ex.code === DOMException.INVALID_ACCESS_ERR) {\n        styleElt.sheet.disabled = true;\n        styleElt.addEventListener('load', function onStyleLoaded() {\n          styleElt.removeEventListener('load', onStyleLoaded); // firefox need this timeout otherwise we have to use document.importNode(style, true)\n\n          setTimeout(function () {\n            process();\n            styleElt.sheet.disabled = false;\n          });\n        });\n        return;\n      }\n\n      throw ex;\n    }\n  }\n\n  head.appendChild(style);\n\n  if (false) {\n    addScope(style, '[data-s-1cd7]');\n  }\n\n  var THREE = window.THREE;\n  exports.default = {\n    template: \"\\n<div class=\\\"mesh-phong-material\\\"data-s-1cd7></div>\\n\",\n    props: {\n      color: {\n        default: function _default() {\n          return Math.random() * 0xffffff;\n        }\n      }\n    },\n    data: function data() {\n      return {\n        material: false\n      };\n    },\n    created: function created() {\n      this.material = new THREE.MeshPhongMaterial({\n        color: new THREE.Color(this.color),\n        specular: new THREE.Color(0x111111),\n        shininess: 50\n      });\n      this.$parent.$emit('material', this.material);\n    }\n  };\n});\n\n(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define(\"@/webgl/Material/ShaderMaterial.vue\", [\"exports\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(exports);\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(mod.exports);\n    global.webglMaterialShaderMaterialVue = mod.exports;\n  }\n})(this, function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n\n  function _instanceof(left, right) {\n    if (right != null && typeof Symbol !== \"undefined\" && right[Symbol.hasInstance]) {\n      return right[Symbol.hasInstance](left);\n    } else {\n      return left instanceof right;\n    }\n  }\n\n  var css = \"\\n\\n\";\n  var head = document.head || document.getElementsByTagName('head')[0];\n  var style = document.createElement('style');\n  style.type = 'text/css';\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = css;\n  } else {\n    style.appendChild(document.createTextNode(css));\n  }\n\n  function addScope(styleElt, scopeName) {\n    function process() {\n      var sheet = styleElt.sheet;\n      var rules = sheet.cssRules;\n\n      for (var i = 0; i < rules.length; ++i) {\n        var rule = rules[i];\n        if (rule.type !== 1) continue;\n        var scopedSelectors = [];\n        rule.selectorText.split(/s*,s*/).forEach(function (sel) {\n          scopedSelectors.push(scopeName + ' ' + sel);\n          var segments = sel.match(/([^ :]+)(.+)?/);\n          scopedSelectors.push(segments[1] + scopeName + (segments[2] || ''));\n        });\n        var scopedRule = scopedSelectors.join(',') + rule.cssText.substr(rule.selectorText.length);\n        sheet.deleteRule(i);\n        sheet.insertRule(scopedRule, i);\n      }\n    }\n\n    try {\n      // firefox may fail sheet.cssRules with InvalidAccessError\n      process();\n    } catch (ex) {\n      if (_instanceof(ex, DOMException) && ex.code === DOMException.INVALID_ACCESS_ERR) {\n        styleElt.sheet.disabled = true;\n        styleElt.addEventListener('load', function onStyleLoaded() {\n          styleElt.removeEventListener('load', onStyleLoaded); // firefox need this timeout otherwise we have to use document.importNode(style, true)\n\n          setTimeout(function () {\n            process();\n            styleElt.sheet.disabled = false;\n          });\n        });\n        return;\n      }\n\n      throw ex;\n    }\n  }\n\n  head.appendChild(style);\n\n  if (false) {\n    addScope(style, '[data-s-ruj]');\n  }\n\n  var THREE = window.THREE;\n  exports.default = {\n    template: \"\\n<div class=\\\"mesh-basic-material\\\"data-s-ruj></div>\\n\",\n    data: function data() {\n      return {\n        material: false\n      };\n    },\n    props: {\n      vs: {\n        default: \"void main ( void ) {\\n  vec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\\n  vec4 outputPos = projectionMatrix * mvPosition;\\n  gl_Position = outputPos;\\n}\"\n      },\n      fs: {\n        default: \"void main () {\\n  gl_FragColor = vec4(vec3(0.5), 1.0);\\n}\"\n      },\n      uniforms: {\n        default: function _default() {\n          return {};\n        }\n      }\n    },\n    watch: {\n      vs: function vs() {\n        this.initShader();\n      },\n      fs: function fs() {\n        this.initShader();\n      },\n      uniforms: function uniforms() {\n        this.initShader();\n      }\n    },\n    mounted: function mounted() {\n      this.initShader();\n    },\n    methods: {\n      initShader: function initShader() {\n        try {\n          this.material = new THREE.ShaderMaterial({\n            uniforms: { ...this.uniforms // ,\n              // ...THREE.UniformsUtils.merge([\n              //   THREE.UniformsLib.common,\n              //   THREE.UniformsLib.aomap,\n              //   THREE.UniformsLib.lightmap,\n              //   THREE.UniformsLib.emissivemap,\n              //   THREE.UniformsLib.bumpmap,\n              //   THREE.UniformsLib.normalmap,\n              //   THREE.UniformsLib.displacementmap,\n              //   THREE.UniformsLib.fog,\n              //   THREE.UniformsLib.lights,\n              //   THREE.UniformsLib.shadowmap,\n              //   {\n              //     flipEnvMap: {\n              //       value: 1\n              //     },\n              //     emissive: {\n              //       value: new THREE.Color(0x000000)\n              //     },\n              //     specular: {\n              //       value: new THREE.Color(0x111111)\n              //     },\n              //     shininess: {\n              //       value: 30\n              //     },\n              //     envMap: {\n              //       // value: cubeCamera.renderTarget\n              //     }\n              //   }\n              // ])\n\n            },\n            vertexShader: this.vs || this.$options.props.vs.default,\n            fragmentShader: this.fs || this.$options.props.fs.default\n          });\n          this.$parent.$emit('material', this.material);\n        } catch (e) {\n          console.log(e);\n        }\n      }\n    }\n  };\n});\n\n(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define(\"@/webgl/Element/PointLight.vue\", [\"exports\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(exports);\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(mod.exports);\n    global.webglElementPointLightVue = mod.exports;\n  }\n})(this, function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n\n  function _instanceof(left, right) {\n    if (right != null && typeof Symbol !== \"undefined\" && right[Symbol.hasInstance]) {\n      return right[Symbol.hasInstance](left);\n    } else {\n      return left instanceof right;\n    }\n  }\n\n  var css = \"\\n\\n\";\n  var head = document.head || document.getElementsByTagName('head')[0];\n  var style = document.createElement('style');\n  style.type = 'text/css';\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = css;\n  } else {\n    style.appendChild(document.createTextNode(css));\n  }\n\n  function addScope(styleElt, scopeName) {\n    function process() {\n      var sheet = styleElt.sheet;\n      var rules = sheet.cssRules;\n\n      for (var i = 0; i < rules.length; ++i) {\n        var rule = rules[i];\n        if (rule.type !== 1) continue;\n        var scopedSelectors = [];\n        rule.selectorText.split(/s*,s*/).forEach(function (sel) {\n          scopedSelectors.push(scopeName + ' ' + sel);\n          var segments = sel.match(/([^ :]+)(.+)?/);\n          scopedSelectors.push(segments[1] + scopeName + (segments[2] || ''));\n        });\n        var scopedRule = scopedSelectors.join(',') + rule.cssText.substr(rule.selectorText.length);\n        sheet.deleteRule(i);\n        sheet.insertRule(scopedRule, i);\n      }\n    }\n\n    try {\n      // firefox may fail sheet.cssRules with InvalidAccessError\n      process();\n    } catch (ex) {\n      if (_instanceof(ex, DOMException) && ex.code === DOMException.INVALID_ACCESS_ERR) {\n        styleElt.sheet.disabled = true;\n        styleElt.addEventListener('load', function onStyleLoaded() {\n          styleElt.removeEventListener('load', onStyleLoaded); // firefox need this timeout otherwise we have to use document.importNode(style, true)\n\n          setTimeout(function () {\n            process();\n            styleElt.sheet.disabled = false;\n          });\n        });\n        return;\n      }\n\n      throw ex;\n    }\n  }\n\n  head.appendChild(style);\n\n  if (false) {\n    addScope(style, '[data-s-1aw6]');\n  }\n\n  var THREE = window.THREE;\n  exports.default = {\n    template: \"\\n  <div class=\\\"light-point\\\"data-s-1aw6></div>\\n\",\n    props: {\n      color: {\n        default: function _default() {\n          return 0xffffff;\n        }\n      }\n    },\n    data: function data() {\n      return {\n        light: false\n      };\n    },\n    mounted: function mounted() {\n      this.light = new THREE.PointLight({\n        color: new THREE.Color(this.color)\n      });\n      this.$emit('element', this.light);\n      this.$parent.$emit('add', this.light);\n    },\n    beforeDestroy: function beforeDestroy() {\n      this.$parent.$emit('remove', this.light);\n    }\n  };\n});\n\n(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define(\"@/webgl/Element/Object3D.vue\", [\"exports\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(exports);\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(mod.exports);\n    global.webglElementObject3DVue = mod.exports;\n  }\n})(this, function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n\n  function _instanceof(left, right) {\n    if (right != null && typeof Symbol !== \"undefined\" && right[Symbol.hasInstance]) {\n      return right[Symbol.hasInstance](left);\n    } else {\n      return left instanceof right;\n    }\n  }\n\n  var css = \"\\n\\n\";\n  var head = document.head || document.getElementsByTagName('head')[0];\n  var style = document.createElement('style');\n  style.type = 'text/css';\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = css;\n  } else {\n    style.appendChild(document.createTextNode(css));\n  }\n\n  function addScope(styleElt, scopeName) {\n    function process() {\n      var sheet = styleElt.sheet;\n      var rules = sheet.cssRules;\n\n      for (var i = 0; i < rules.length; ++i) {\n        var rule = rules[i];\n        if (rule.type !== 1) continue;\n        var scopedSelectors = [];\n        rule.selectorText.split(/s*,s*/).forEach(function (sel) {\n          scopedSelectors.push(scopeName + ' ' + sel);\n          var segments = sel.match(/([^ :]+)(.+)?/);\n          scopedSelectors.push(segments[1] + scopeName + (segments[2] || ''));\n        });\n        var scopedRule = scopedSelectors.join(',') + rule.cssText.substr(rule.selectorText.length);\n        sheet.deleteRule(i);\n        sheet.insertRule(scopedRule, i);\n      }\n    }\n\n    try {\n      // firefox may fail sheet.cssRules with InvalidAccessError\n      process();\n    } catch (ex) {\n      if (_instanceof(ex, DOMException) && ex.code === DOMException.INVALID_ACCESS_ERR) {\n        styleElt.sheet.disabled = true;\n        styleElt.addEventListener('load', function onStyleLoaded() {\n          styleElt.removeEventListener('load', onStyleLoaded); // firefox need this timeout otherwise we have to use document.importNode(style, true)\n\n          setTimeout(function () {\n            process();\n            styleElt.sheet.disabled = false;\n          });\n        });\n        return;\n      }\n\n      throw ex;\n    }\n  }\n\n  head.appendChild(style);\n\n  if (false) {\n    addScope(style, '[data-s-1lof]');\n  }\n\n  var THREE = window.THREE;\n  exports.default = {\n    template: \"\\n<div class=\\\"object-3d\\\"data-s-1lof><slot></slot></div>\\n\",\n    data: function data() {\n      return {\n        object3d: false\n      };\n    },\n    props: {\n      visible: {\n        default: true\n      },\n      px: {\n        default: 0\n      },\n      py: {\n        default: 0\n      },\n      pz: {\n        default: 0\n      },\n      sx: {\n        default: 1\n      },\n      sy: {\n        default: 1\n      },\n      sz: {\n        default: 1\n      },\n      rx: {\n        default: 0\n      },\n      ry: {\n        default: 0\n      },\n      rz: {\n        default: 0\n      }\n    },\n    watch: {\n      visible: function visible() {\n        this.object3d.setVisible(this.visible);\n      },\n      px: function px() {\n        this.updatePosition('x', this.px);\n      },\n      py: function py() {\n        this.updatePosition('y', this.py);\n      },\n      pz: function pz() {\n        this.updatePosition('z', this.pz);\n      },\n      sx: function sx() {\n        this.updateScale('x', this.sx);\n      },\n      sy: function sy() {\n        this.updateScale('y', this.sy);\n      },\n      sz: function sz() {\n        this.updateScale('z', this.sz);\n      },\n      rx: function rx() {\n        this.updateRotation('x', this.rx);\n      },\n      ry: function ry() {\n        this.updateRotation('y', this.ry);\n      },\n      rz: function rz() {\n        this.updateRotation('z', this.rz);\n      }\n    },\n    created: function created() {\n      var _this = this;\n\n      this.object3d = new THREE.Object3D();\n      this.$emit('element', this.object3d);\n      this.object3d.visible = true;\n      this.updatePosition();\n      this.updateScale();\n      this.updateRotation();\n      this.$on('add', function (v) {\n        _this.object3d.add(v);\n      });\n      this.$on('remove', function (v) {\n        _this.object3d.remove(v);\n      });\n    },\n    mounted: function mounted() {\n      this.$parent.$emit('add', this.object3d);\n    },\n    beforeDestroy: function beforeDestroy() {\n      this.$parent.$emit('remove', this.object3d);\n    },\n    methods: {\n      updatePosition: function updatePosition(key, val) {\n        if (key) {\n          this.object3d.position[key] = val;\n        } else {\n          this.object3d.position.set(this.px, this.py, this.pz);\n        }\n      },\n      updateScale: function updateScale(key, val) {\n        if (key) {\n          this.object3d.scale[key] = val;\n        } else {\n          this.object3d.scale.set(this.sx, this.sy, this.sz);\n        }\n      },\n      updateRotation: function updateRotation(key, val) {\n        if (key) {\n          this.object3d.rotation[key] = val;\n        } else {\n          this.object3d.rotation.set(this.rx, this.ry, this.rz);\n        }\n      }\n    }\n  };\n});\n\n(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define(\"@/webgl/Element/Points.vue\", [\"exports\", \"@/three.js\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(exports, require(\"@/three.js\"));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(mod.exports, global.threeJs);\n    global.webglElementPointsVue = mod.exports;\n  }\n})(this, function (exports, _three) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n\n  var _three2 = _interopRequireDefault(_three);\n\n  function _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n      default: obj\n    };\n  }\n\n  function _instanceof(left, right) {\n    if (right != null && typeof Symbol !== \"undefined\" && right[Symbol.hasInstance]) {\n      return right[Symbol.hasInstance](left);\n    } else {\n      return left instanceof right;\n    }\n  }\n\n  var css = \"\\n\\n\";\n  var head = document.head || document.getElementsByTagName('head')[0];\n  var style = document.createElement('style');\n  style.type = 'text/css';\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = css;\n  } else {\n    style.appendChild(document.createTextNode(css));\n  }\n\n  function addScope(styleElt, scopeName) {\n    function process() {\n      var sheet = styleElt.sheet;\n      var rules = sheet.cssRules;\n\n      for (var i = 0; i < rules.length; ++i) {\n        var rule = rules[i];\n        if (rule.type !== 1) continue;\n        var scopedSelectors = [];\n        rule.selectorText.split(/s*,s*/).forEach(function (sel) {\n          scopedSelectors.push(scopeName + ' ' + sel);\n          var segments = sel.match(/([^ :]+)(.+)?/);\n          scopedSelectors.push(segments[1] + scopeName + (segments[2] || ''));\n        });\n        var scopedRule = scopedSelectors.join(',') + rule.cssText.substr(rule.selectorText.length);\n        sheet.deleteRule(i);\n        sheet.insertRule(scopedRule, i);\n      }\n    }\n\n    try {\n      // firefox may fail sheet.cssRules with InvalidAccessError\n      process();\n    } catch (ex) {\n      if (_instanceof(ex, DOMException) && ex.code === DOMException.INVALID_ACCESS_ERR) {\n        styleElt.sheet.disabled = true;\n        styleElt.addEventListener('load', function onStyleLoaded() {\n          styleElt.removeEventListener('load', onStyleLoaded); // firefox need this timeout otherwise we have to use document.importNode(style, true)\n\n          setTimeout(function () {\n            process();\n            styleElt.sheet.disabled = false;\n          });\n        });\n        return;\n      }\n\n      throw ex;\n    }\n  }\n\n  head.appendChild(style);\n\n  if (false) {\n    addScope(style, '[data-s-acy]');\n  }\n\n  exports.default = {\n    template: \"\\n  <div class=\\\"points\\\"data-s-acy>\\n    <slot>\\n    </slot>\\n  </div>\\n\",\n    props: {\n      position: {}\n    },\n    data: function data() {\n      return {\n        element: false,\n        points: false,\n        material: false,\n        geometry: false\n      };\n    },\n    created: function created() {\n      var _this = this;\n\n      this.element = this.points = new _three2.default.Points();\n      this.$parent.$emit('add', this.points);\n      this.$emit('element', this.points);\n      this.$on('material', function (v) {\n        _this.material = v;\n\n        _this.tryUpdateMaterial();\n      });\n      this.$on('geometry', function (v) {\n        _this.geometry = v;\n\n        _this.tryUpdateGeometry();\n      });\n    },\n    beforeDestroy: function beforeDestroy() {\n      this.uninstall();\n    },\n    methods: {\n      tryUpdateGeometry: function tryUpdateGeometry(v) {\n        if (this.points) {\n          this.points.geometry = this.geometry;\n        }\n      },\n      tryUpdateMaterial: function tryUpdateMaterial(v) {\n        if (this.points) {\n          this.points.material = this.material;\n        }\n      },\n      uninstall: function uninstall() {\n        this.$parent.$emit('remove', this.points);\n      }\n    }\n  };\n});\n\n(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define(\"@/webgl/Element/Mesh.vue\", [\"exports\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(exports);\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(mod.exports);\n    global.webglElementMeshVue = mod.exports;\n  }\n})(this, function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n\n  function _instanceof(left, right) {\n    if (right != null && typeof Symbol !== \"undefined\" && right[Symbol.hasInstance]) {\n      return right[Symbol.hasInstance](left);\n    } else {\n      return left instanceof right;\n    }\n  }\n\n  var css = \"\\n\\n\";\n  var head = document.head || document.getElementsByTagName('head')[0];\n  var style = document.createElement('style');\n  style.type = 'text/css';\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = css;\n  } else {\n    style.appendChild(document.createTextNode(css));\n  }\n\n  function addScope(styleElt, scopeName) {\n    function process() {\n      var sheet = styleElt.sheet;\n      var rules = sheet.cssRules;\n\n      for (var i = 0; i < rules.length; ++i) {\n        var rule = rules[i];\n        if (rule.type !== 1) continue;\n        var scopedSelectors = [];\n        rule.selectorText.split(/s*,s*/).forEach(function (sel) {\n          scopedSelectors.push(scopeName + ' ' + sel);\n          var segments = sel.match(/([^ :]+)(.+)?/);\n          scopedSelectors.push(segments[1] + scopeName + (segments[2] || ''));\n        });\n        var scopedRule = scopedSelectors.join(',') + rule.cssText.substr(rule.selectorText.length);\n        sheet.deleteRule(i);\n        sheet.insertRule(scopedRule, i);\n      }\n    }\n\n    try {\n      // firefox may fail sheet.cssRules with InvalidAccessError\n      process();\n    } catch (ex) {\n      if (_instanceof(ex, DOMException) && ex.code === DOMException.INVALID_ACCESS_ERR) {\n        styleElt.sheet.disabled = true;\n        styleElt.addEventListener('load', function onStyleLoaded() {\n          styleElt.removeEventListener('load', onStyleLoaded); // firefox need this timeout otherwise we have to use document.importNode(style, true)\n\n          setTimeout(function () {\n            process();\n            styleElt.sheet.disabled = false;\n          });\n        });\n        return;\n      }\n\n      throw ex;\n    }\n  }\n\n  head.appendChild(style);\n\n  if (false) {\n    addScope(style, '[data-s-m1j]');\n  }\n\n  var THREE = window.THREE;\n  exports.default = {\n    template: \"\\n  <div class=\\\"mesh\\\"data-s-m1j>\\n    <slot>\\n    </slot>\\n  </div>\\n\",\n    props: {},\n    data: function data() {\n      return {\n        element: false,\n        mesh: false,\n        material: false,\n        geometry: false\n      };\n    },\n    created: function created() {\n      var _this = this;\n\n      this.element = this.mesh = new THREE.Mesh();\n      this.$parent.$emit('add', this.mesh);\n      this.$emit('element', this.mesh);\n      this.$on('material', function (v) {\n        _this.material = v;\n\n        _this.tryUpdateMaterial();\n      });\n      this.$on('geometry', function (v) {\n        _this.geometry = v;\n\n        _this.tryUpdateGeometry();\n      });\n    },\n    beforeDestroy: function beforeDestroy() {\n      this.uninstall();\n    },\n    methods: {\n      tryUpdateGeometry: function tryUpdateGeometry(v) {\n        if (this.mesh) {\n          this.mesh.geometry = this.geometry;\n        }\n      },\n      tryUpdateMaterial: function tryUpdateMaterial(v) {\n        if (this.mesh) {\n          this.mesh.material = this.material;\n        }\n      },\n      uninstall: function uninstall() {\n        this.$parent.$emit('remove', this.mesh);\n      }\n    }\n  };\n});\n\n(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define(\"@/webgl/Geo/SphereBufferGeometry.vue\", [\"exports\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(exports);\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(mod.exports);\n    global.webglGeoSphereBufferGeometryVue = mod.exports;\n  }\n})(this, function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n\n  function _instanceof(left, right) {\n    if (right != null && typeof Symbol !== \"undefined\" && right[Symbol.hasInstance]) {\n      return right[Symbol.hasInstance](left);\n    } else {\n      return left instanceof right;\n    }\n  }\n\n  var css = \"\\n\\n\";\n  var head = document.head || document.getElementsByTagName('head')[0];\n  var style = document.createElement('style');\n  style.type = 'text/css';\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = css;\n  } else {\n    style.appendChild(document.createTextNode(css));\n  }\n\n  function addScope(styleElt, scopeName) {\n    function process() {\n      var sheet = styleElt.sheet;\n      var rules = sheet.cssRules;\n\n      for (var i = 0; i < rules.length; ++i) {\n        var rule = rules[i];\n        if (rule.type !== 1) continue;\n        var scopedSelectors = [];\n        rule.selectorText.split(/s*,s*/).forEach(function (sel) {\n          scopedSelectors.push(scopeName + ' ' + sel);\n          var segments = sel.match(/([^ :]+)(.+)?/);\n          scopedSelectors.push(segments[1] + scopeName + (segments[2] || ''));\n        });\n        var scopedRule = scopedSelectors.join(',') + rule.cssText.substr(rule.selectorText.length);\n        sheet.deleteRule(i);\n        sheet.insertRule(scopedRule, i);\n      }\n    }\n\n    try {\n      // firefox may fail sheet.cssRules with InvalidAccessError\n      process();\n    } catch (ex) {\n      if (_instanceof(ex, DOMException) && ex.code === DOMException.INVALID_ACCESS_ERR) {\n        styleElt.sheet.disabled = true;\n        styleElt.addEventListener('load', function onStyleLoaded() {\n          styleElt.removeEventListener('load', onStyleLoaded); // firefox need this timeout otherwise we have to use document.importNode(style, true)\n\n          setTimeout(function () {\n            process();\n            styleElt.sheet.disabled = false;\n          });\n        });\n        return;\n      }\n\n      throw ex;\n    }\n  }\n\n  head.appendChild(style);\n\n  if (false) {\n    addScope(style, '[data-s-13kz]');\n  }\n\n  var THREE = window.THREE;\n  exports.default = {\n    template: \"\\n  <div class=\\\"geo-sphere\\\"data-s-13kz></div>\\n\",\n    data: function data() {\n      return {\n        geometry: false\n      };\n    },\n    mounted: function mounted() {\n      var geometry = new THREE.SphereBufferGeometry(2, 256, 256);\n      this.$parent.$emit('geometry', geometry);\n    }\n  };\n});\n\n(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define(\"@/shader/Simple/vs.vert\", [\"exports\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(exports);\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(mod.exports);\n    global.shaderSimpleVsVert = mod.exports;\n  }\n})(this, function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = \"varying vec3 vPos;\\nuniform float time;\\n\\nvoid main (void) {\\n  vPos = position;\\n  vPos.x = vPos.x + sin(vPos.x + time);\\n  vPos.y = vPos.y + cos(vPos.y + time);\\n  vPos.z = vPos.z + tan(vPos.z + time);\\n  \\n  vec4 mvPosition = modelViewMatrix * vec4(position, 1.0);\\n  vec4 outputPos = projectionMatrix * mvPosition;\\n  gl_Position = outputPos;\\n  gl_PointSize = 1.0;\\n}\";\n});\n\n(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define(\"@/shader/Simple/fs.frag\", [\"exports\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(exports);\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(mod.exports);\n    global.shaderSimpleFsFrag = mod.exports;\n  }\n})(this, function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = \"varying vec3 vPos;\\n\\nvoid main () {\\n  gl_FragColor = vec4(vec3(vPos), 1.0);\\n}\";\n});\n\n(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define(\"@/shader/Fling/vs.vert\", [\"exports\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(exports);\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(mod.exports);\n    global.shaderFlingVsVert = mod.exports;\n  }\n})(this, function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = \"varying vec3 vPos;\\nuniform float time;\\n\\nvoid main (void) {\\n  vPos = position;\\n  vPos.x = vPos.x + sin(vPos.x + time);\\n  vPos.y = vPos.y + cos(vPos.y + time);\\n  vPos.z = vPos.z + tan(vPos.z + time);\\n  \\n  vec4 mvPosition = modelViewMatrix * vec4(vPos, 1.0);\\n  vec4 outputPos = projectionMatrix * mvPosition;\\n  gl_Position = outputPos;\\n}\";\n});\n\n(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define(\"@/three.js\", [\"exports\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(exports);\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(mod.exports);\n    global.threeJs = mod.exports;\n  }\n})(this, function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  var THREE = window.THREE;\n  exports.default = THREE;\n});\n\n    var deps = [\"https://cdnjs.cloudflare.com/ajax/libs/vue/2.5.2/vue.min.js\",\"https://cdnjs.cloudflare.com/ajax/libs/vue-router/3.0.1/vue-router.min.js\",\"https://cdnjs.cloudflare.com/ajax/libs/tween.js/16.3.5/Tween.min.js\",\"https://cdnjs.cloudflare.com/ajax/libs/three.js/88/three.min.js\",\"https://threejs.org/examples/js/GPUComputationRenderer.js\"];\n\n    function preload (deps, done) {\n      if (deps[0]) {\n        var script = document.createElement('script');\n        script.onload = function () {\n          deps.shift();\n          preload(deps, done);\n        };\n        script.src = deps[0];\n        document.body.appendChild(script);\n      } else {\n        done();\n      }\n    }\n\n    preload(deps, function() {\n      requireJSRequire(['@/main.js'], function () {\n        setTimeout(() => {\n          (window.opener || window.top).postMessage({ type: 'requirejs-ready' }, window.location.origin);\n        }, 10);\n      });\n    })\n  }\n  new OMG_TvwRIDZZiwqMqqPRrAYIPpFa();\n}());\n"},"now":{"currentFilePath":"@/shader/Simple/vs.vert","openedFiles":[{"path":"@/shader/Simple/vs.vert"},{"path":"@/webgl/pages/Happy.vue"},{"path":"@/webgl/pages/Home.vue"},{"path":"@/webgl/layout/Player.vue"},{"path":"@/index.html"}],"files":[{"path":"@/index.html","src":"<!DOCTYPE html>\n<html>\n  <head>\n    <meta charset=\"UTF-8\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge,chrome=1\">\n    <meta name=\"viewport\" content=\"width=device-width,initial-scale=1\">\n\n    <title>WebGL</title>\n\n    <meta name=\"author\" content=\"loklok\">\n    <meta name=\"description\" content=\"WebGL Art\">\n    <meta name=\"keywords\" content=\"WebGL, Art\">\n\n    <style type=\"text/css\">\n    </style>\n\n  </head>\n  <body>\n    <div id=\"app-attach-point\"></div>\n    \n    <script required src=\"https://cdnjs.cloudflare.com/ajax/libs/vue/2.5.2/vue.min.js\"></script>\n    <script required src=\"https://cdnjs.cloudflare.com/ajax/libs/vue-router/3.0.1/vue-router.min.js\"></script>\n    <script required src=\"https://cdnjs.cloudflare.com/ajax/libs/tween.js/16.3.5/Tween.min.js\"></script>\n    <script required src=\"https://cdnjs.cloudflare.com/ajax/libs/three.js/88/three.min.js\" integrity=\"sha256-6fhm481uY9c152qGWIVgE7KbzaCj5WjCi3BGIpZef2E=\" crossorigin=\"anonymous\"></script>\n    <script required src=\"https://threejs.org/examples/js/GPUComputationRenderer.js\"></script>\n  </body>\n</html>\n"},{"path":"@/style.css","src":"html, body {\n  width: 100%;\n  height: 100%;\n  margin: 0px;\n  padding: 0px;\n}\nhtml, body, #app {\n  box-sizing: border-box;\n  width: 100%;\n  height: 100%;\n  overflow: hidden;\n}\n.full{\n  width: 100%;\n  height: 100%;\n}"},{"path":"@/main.js","src":"import '@/style.css'\nimport App from '@/app.vue'\nimport router from '@/router.js'\n\nvar oldDOM = document.querySelector('#app-attach-point');\nvar newDOM = document.createElement('div');\nnewDOM.id = '#app-attach-point';\ndocument.body.appendChild(newDOM);\nvar target = oldDOM || newDOM;\n\nvar app = new Vue({\n  router,\n  el: target,\n  components: {\n    App\n  },\n  template: '<div id=\"app\"><App /></div>'\n})\n\nwindow.addEventListener('message', (evt) => {\n  var { type, data } = evt.data;\n  window.dispatchEvent(new CustomEvent(type, { detail: data }))\n}, false);\n\nwindow.addEventListener('slider', ({ detail }) => {\n  console.log(detail);\n  (window.opener || window.top).dispatchEvent(new CustomEvent('loklok', { detail: { rand: Math.random() } }))\n});\n\nexport default app;\n"},{"path":"@/router.js","src":"import Player from '@/webgl/layout/Player.vue'\nimport Home from '@/webgl/pages/Home.vue'\nimport Happy from '@/webgl/pages/Happy.vue'\n\nconst router = new VueRouter({\n  mode: 'hash',\n  routes: [\n    {\n      path: '/',\n      component: Player,\n      children: [\n        {\n          path: '',\n          component: Home\n        },\n        {\n          path: 'happy',\n          component: Happy\n        }\n      ]\n    }\n  ]\n})\n\nexport default router\n"},{"path":"@/app.vue","src":"<template>\n  <div>\n    <router-view></router-view>\n  </div>\n</template>\n\n<script>\nimport THREE from '@/three.js'\n\nexport default {\n  data () {\n    return {\n      \n    }\n  },\n  created () {\n    \n  },\n  beforeDestroy () {\n    \n  },\n  methods: {\n    \n  }\n}\n</script>\n\n<style>\n\n</style>\n"},{"path":"@/webgl/layout/Player.vue","src":"<template>\n  <div class=\"full\" ref=\"full\">\n\n    <Renderer\n      :alpha=\"false\"\n      ref=\"renderer\"\n      :size=\"size\"\n      @renderer=\"(v) => { renderer = v }\"\n      @toucher=\"(v) => { toucher = v }\"\n    >\n    </Renderer>\n    \n    <keep-alive>\n      <component\n        class=\"hidden\"\n        :is=\"'router-view'\"\n        v-if=\"renderer\"\n        :size=\"size\"\n        :toucher=\"toucher\"\n        :renderer=\"renderer\"\n      >\n      </component>\n    </keep-alive>\n\n  </div>\n</template>\n\n<script>\nimport Bundle from '@/webgl/Bundle.js';\n\nexport default {\n  components: {\n    ...Bundle\n  },\n  computed: {\n  },\n  methods: {\n    \n  },\n  data () {\n    return {\n      toucher: false,\n      resizer: () => {},\n      renderer: false,\n      size: {\n        width: 100,\n        height: 100,\n        aspect: 1\n      }\n    }\n  },\n  created () {\n    \n  },\n  mounted () {\n    var resizer = this.resizer = () => {\n      this.$nextTick(() => {\n        var rect = this.$refs.full.getBoundingClientRect()\n        this.size = {\n          width: rect.width,\n          height: rect.height,\n          aspect: rect.width / rect.height\n        }\n      })\n    }\n    window.addEventListener('resize', resizer.bind(this))\n    resizer()\n  }\n}\n</script>\n\n<style scoped>\n.hidden{\n  display: none;\n}\n.full{\n  width: 100%;\n  height: 100%;\n}\n</style>\n"},{"path":"@/webgl/pages/Home.vue","src":"<template>\n  <div class=\"\">\n    <PerspectiveCamera\n      :fov=\"75\"\n      :aspect=\"size.aspect\"\n      :near=\"1\"\n      :far=\"1000\"\n      :position=\"{ x: 0, y: 0, z: 15 }\"\n      @camera=\"(v) => { camera = v; }\"\n    />\n    \n    <Scene @scene=\"(v) => { scene = v; }\">\n      <Object3D pz=\"10\">\n        <PointLight />\n      </Object3D>\n      \n      <Object3D pz=\"0\">\n        <Mesh>\n          <SphereBufferGeometry />\n          <ShaderMaterial :vs=\"simpleVS\" :fs=\"simpleFS\" :uniforms=\"animatable\" />\n        </Mesh>\n      </Object3D>\n    </Scene>\n    \n    <Raycaster v-if=\"camera && toucher && scene\" :scene=\"scene\" :toucher=\"toucher\" :camera=\"camera\" @found=\"(v) => { found = v; }\" @click=\"onClick\">\n    </Raycaster>\n    \n  </div>\n</template>\n\n<script>\nimport Bundle from '@/webgl/Bundle.js';\n\nimport simpleVS from '@/shader/Simple/vs.vert'\nimport simpleFS from '@/shader/Simple/fs.frag'\n\nexport default {\n  name: 'Home',\n  props: {\n    toucher: {},\n    size: {},\n    renderer: {},\n    doc: {}\n  },\n  components: {\n    ...Bundle\n  },\n  computed: {\n  },\n  data () {\n    return {\n      cam: {\n        pos: { x: 3, y: 5, z: 10 }\n      },\n      ready: false,\n      cubeCamera: false,\n      visible: true,\n      resizer: () => {},\n      scene: false,\n      camera: false,\n      \n      found: [],\n      \n      animatable: {\n        time: { value: 0 }\n      },\n      simpleVS,\n      simpleFS\n      \n    }\n  },\n  methods: {\n    onClick ({ event, intersects }) {\n      this.$router.push({\n        path: '/happy'\n      })\n      this.$forceUpdate()\n      console.log('Click to happy');\n    },\n    setup () {\n      this.scene.background = new THREE.Color(0xffffff);\n    },\n    renderWebGL () {\n      TWEEN.update()\n      \n      this.animatable.time.value += 0.01;\n      \n      if (this.scene && this.camera && this.renderer) {\n        this.renderer.render(this.scene, this.camera)\n      }\n    }\n  },\n  watch: {\n    camera () {\n      if (this.camera && this.renderer) {\n        this.ready = true\n      }\n    },\n    renderer () {\n      if (this.camera && this.renderer) {\n        this.ready = true\n      }\n    },\n    ready () {\n      if (this.ready) {\n        this.setup()\n      }\n    }\n  },\n  created () {\n    \n  },\n  activated () {\n    var self = this\n    function loop (rAFT) {\n      self.rAFID = window.requestAnimationFrame(loop)\n      self.renderWebGL(rAFT)\n    }\n    self.rAFID = window.requestAnimationFrame(loop)\n  },\n  deactivated () {\n    window.cancelAnimationFrame(this.rAFID)\n  }\n}\n</script>\n\n<style scoped>\n.full{\n  width: 100%;\n  height: 100%;\n}\n</style>\n"},{"path":"@/webgl/pages/Happy.vue","src":"<template>\n  <div class=\"\">\n\n    <PerspectiveCamera\n      :fov=\"75\"\n      :aspect=\"size.aspect\"\n      :near=\"1\"\n      :far=\"1000\"\n      :position=\"{ x: 0, y: 0, z: 15 }\"\n      @camera=\"(v) => { camera = v; }\"\n    />\n    \n    <Scene @scene=\"(v) => { scene = v }\">\n      <Object3D pz=\"10\">\n        <PointLight />\n      </Object3D>\n      \n      <Object3D pz=\"0\">\n        <Points @element=\"(v) => { v.$skipRayCast = true }\">\n          <SphereBufferGeometry />\n          <ShaderMaterial :vs=\"simpleVS2\" :fs=\"simpleFS\" :uniforms=\"animatable\" />\n        </Points>\n      </Object3D>\n      \n      <Object3D pz=\"1\">\n        <Mesh>\n          <SphereBufferGeometry />\n          <ShaderMaterial :vs=\"simpleVS\" :fs=\"simpleFS\" :uniforms=\"animatable\" />\n        </Mesh>\n      </Object3D>\n    </Scene>\n    \n    <Raycaster v-if=\"renderer && camera && toucher && scene\" :scene=\"scene\" :toucher=\"toucher\" :camera=\"camera\" @found=\"(v) => { found = v; }\" @click=\"onClick\">\n    </Raycaster>\n\n  </div>\n</template>\n\n<script>\nimport Bundle from '@/webgl/Bundle.js';\n\nimport simpleVS2 from '@/shader/Fling/vs.vert'\nimport simpleVS from '@/shader/Simple/vs.vert'\nimport simpleFS from '@/shader/Simple/fs.frag'\n\nexport default {\n  name: 'Happy',\n  props: {\n    toucher: {},\n    size: {},\n    renderer: {},\n    doc: {}\n  },\n  components: {\n    ...Bundle\n  },\n  computed: {\n  },\n  data () {\n    return {\n      cam: {\n        pos: { x: 3, y: 5, z: 10 }\n      },\n      ready: false,\n      cubeCamera: false,\n      visible: true,\n      resizer: () => {},\n      scene: false,\n      camera: false,\n      \n      found: [],\n      \n      animatable: {\n        time: { value: 0 }\n      },\n      simpleVS,\n      simpleFS,\n      simpleVS2\n      \n    }\n  },\n  methods: {\n    onClick ({ event, intersects }) {\n      console.log(event, intersects)\n      this.$router.push('/')\n    },\n    setup () {\n      this.scene.background = new THREE.Color(0xffffff);\n    },\n    renderWebGL () {\n      TWEEN.update()\n      \n      this.animatable.time.value += 0.01;\n      \n      if (this.scene && this.camera && this.renderer) {\n        this.renderer.render(this.scene, this.camera)\n      }\n    }\n  },\n  watch: {\n    camera () {\n      if (this.camera && this.renderer) {\n        this.ready = true\n      }\n    },\n    renderer () {\n      if (this.camera && this.renderer) {\n        this.ready = true\n      }\n    },\n    ready () {\n      if (this.ready) {\n        this.setup()\n      }\n    }\n  },\n  created () {\n    \n  },\n  activated () {\n    var self = this\n    function loop (rAFT) {\n      self.rAFID = window.requestAnimationFrame(loop)\n      self.renderWebGL(rAFT)\n    }\n    self.rAFID = window.requestAnimationFrame(loop)\n  },\n  deactivated () {\n    window.cancelAnimationFrame(this.rAFID);\n    console.log('cancel animation frame')\n  }\n}\n</script>\n\n<style scoped>\n.full{\n  width: 100%;\n  height: 100%;\n}\n</style>\n"},{"path":"@/webgl/sample.vue","src":"<template>\n  <div class=\"full\">\n\n    <Renderer\n      ref=\"renderer\"\n      :size=\"size\"\n      @renderer=\"(v) => { renderer = v }\"\n    >\n    </Renderer>\n\n    <PerspectiveCamera\n      :fov=\"75\"\n      :aspect=\"size.aspect\"\n      :near=\"1\"\n      :far=\"1000\"\n      :position=\"{ x: 0, y: 0, z: 10 }\"\n      @camera=\"(v) => { camera = v; }\"\n    />\n\n    <Scene @scene=\"(v) => { scene = v }\">\n      <Object3D pz=\"10\">\n        <PointLight />\n      </Object3D>\n      \n      <Object3D pz=\"0\">\n        <Points>\n          <SphereBufferGeometry />\n          <ShaderMaterial :vs=\"simpleVS\" :fs=\"simpleFS\" :uniforms=\"animatable\" />\n        </Points>\n      </Object3D>\n      \n    </Scene>\n\n  </div>\n</template>\n\n<script>\nimport Bundle from '@/webgl/Bundle.js';\nimport simpleVS from '@/shader/Simple/vs.vert'\nimport simpleFS from '@/shader/Simple/fs.frag'\n\nexport default {\n  components: {\n    ...Bundle\n  },\n  computed: {\n  },\n  methods: {\n    renderWebGL () {\n      this.animatable.time.value = window.performance.now() * 0.001;\n      \n      if (this.scene && this.camera && this.renderer) {\n        this.renderer.render(this.scene, this.camera)\n      }\n    }\n  },\n  data () {\n    return {\n      animatable: {\n        time: { value: 0 }\n      },\n      simpleVS,\n      simpleFS,\n      size: {\n        width: window.innerWidth,\n        height: window.innerHeight,\n        aspect: window.innerWidth / window.innerHeight\n      },\n      renderer: false,\n      scene: false,\n      camera: false\n    }\n  },\n  created () {\n    \n  },\n  mounted () {\n    var self = this\n    function loop () {\n      self.rAFID = window.requestAnimationFrame(loop)\n      self.renderWebGL()\n    }\n    self.rAFID = window.requestAnimationFrame(loop)\n  }\n}\n</script>\n\n<style scoped>\n.full{\n  width: 100%;\n  height: 100%;\n}\n</style>\n"},{"path":"@/webgl/Bundle.js","src":"import Renderer from '@/webgl/System/Renderer.vue';\nimport Scene from '@/webgl/System/Scene.vue';\nimport PerspectiveCamera from '@/webgl/System/PerspectiveCamera.vue';\nimport Raycaster from '@/webgl/System/Raycaster.vue';\n\nimport MeshPhongMaterial from '@/webgl/Material/MeshPhongMaterial.vue';\nimport ShaderMaterial from '@/webgl/Material/ShaderMaterial.vue';\n\nimport Object3D from '@/webgl/Element/Object3D.vue';\nimport Mesh from '@/webgl/Element/Mesh.vue';\nimport Points from '@/webgl/Element/Points.vue';\nimport PointLight from '@/webgl/Element/PointLight.vue';\n\nimport SphereBufferGeometry from '@/webgl/Geo/SphereBufferGeometry.vue';\n\n\nexport default {\n  //materials\n  MeshPhongMaterial,\n  ShaderMaterial,\n  \n  //system\n  Renderer,\n  Scene,\n  PerspectiveCamera,\n  Raycaster,\n  \n  //Elemnts\n  PointLight,\n  Points,\n  Object3D,\n  Mesh,\n  \n  //Geo\n  SphereBufferGeometry\n}\n"},{"path":"@/webgl/System/Renderer.vue","src":"<template>\n  <div class=\"full pos-rel\">\n    <div class=\"full layer\" ref=\"mounter\"></div>\n    <div class=\"full layer\" ref=\"toucher\"><slot></slot></div>\n  </div>\n</template>\n\n<script>\nvar THREE = window.THREE\n\nexport default {\n  data () {\n    return {\n      // THREE,\n      renderer: false\n    }\n  },\n  props: {\n    size: { default () { return { width: 500, height: 500 } } },\n    alpha: { default: true },\n    antialias: { default: true }\n  },\n  mounted () {\n    this.renderer = new THREE.WebGLRenderer({\n      alpha: this.alpha,\n      antialias: this.antialias\n    })\n    this.resize()\n    this.renderer.domElement.style.marginBottom = '-6px'\n    this.$refs.mounter.appendChild(this.renderer.domElement)\n    \n    this.$emit('toucher', this.$refs['toucher'])\n    this.$emit('renderer', this.renderer)\n  },\n  beforeDestroy () {\n    this.$refs.mounter.removeChild(this.renderer.domElement)\n  },\n  watch: {\n    size () {\n      this.resize()\n    }\n  },\n  methods: {\n    resize () {\n      let ratio = window.devicePixelRatio || 1\n      this.renderer.setPixelRatio(ratio)\n      this.renderer.setSize(this.size.width, this.size.height)\n    }\n  }\n}\n</script>\n\n<style scoped>\n.full{\n  width: 100%;\n  height: 100%;\n}\n.pos-rel{\n  position: relative;\n}\n.layer{\n  position: absolute;\n  top: 0px;\n  left: 0px;\n}\n</style>\n"},{"path":"@/webgl/System/Scene.vue","src":"<template>\n  <div ref=\"mounter\" class=\"mounter\"><slot></slot></div>\n</template>\n\n<script>\nvar THREE = window.THREE\nexport default {\n  data () {\n    return {\n      scene: false\n    }\n  },\n  props: {\n    size: { default () { return { width: 500, height: 500 } } },\n    alpha: { default: true },\n    antialias: { default: true }\n  },\n  created () {\n    this.scene = new THREE.Scene()\n    this.$on('add', (v) => {\n      this.scene.add(v)\n    })\n    this.$on('remove', (v) => {\n      this.scene.remove(v)\n    })\n  },\n  mounted () {\n    this.$emit('scene', this.scene)\n  }\n}\n</script>\n\n<style scoped>\n.mounter {\n  display: none;\n}\n</style>\n"},{"path":"@/webgl/System/PerspectiveCamera.vue","src":"<script>\nvar THREE = window.THREE;\nexport default {\n  abstract: true,\n  render () {\n    return null\n  },\n  props: ['fov', 'aspect', 'near', 'far', 'position'],\n  data () {\n    return {\n      camera: null\n    }\n  },\n  created () {\n    this.camera = new THREE.PerspectiveCamera(this.fov, this.aspect, this.near, this.far)\n\n    if (this.position) {\n      this.camera.position.x = this.position.x\n      this.camera.position.y = this.position.y\n      this.camera.position.z = this.position.z\n    }\n    this.$emit('camera', this.camera)\n  },\n  watch: {\n    position () {\n      if (this.position) {\n        this.camera.position.x = this.position.x\n        this.camera.position.y = this.position.y\n        this.camera.position.z = this.position.z\n      }\n    },\n    aspect () {\n      if (this.camera) {\n        this.camera.aspect = this.aspect\n        this.camera.updateProjectionMatrix()\n      }\n    }\n  }\n}\n</script>\n\n<style scoped>\n.perspective-camera{\n  display: none;\n}\n</style>\n"},{"path":"@/webgl/System/Raycaster.vue","src":"<template>\n<div></div>\n</template>\n\n<script>\n\nexport default {\n  data () {\n    return {\n      rAFID: 0,\n      mouse: null,\n      raycast () {},\n      clean () {},\n      intersects: []\n    }\n  },\n  props: {\n    scene: {},\n    camera: {},\n    toucher: {}\n  },\n  created () {\n  },\n  activated () {\n    var raycaster = new THREE.Raycaster();\n    this.mouse = new THREE.Vector2();\n    \n    this.toucher.addEventListener('mousemove', this.handleMV, false);\n    this.toucher.addEventListener('click', this.handleClick, false);\n    this.clean = () => {\n      this.toucher.removeEventListener('click', this.handleClick, false);\n      this.toucher.removeEventListener('mousemove', this.handleMV);\n    }\n    \n    var raycast = () => {\n      var mouse = this.mouse;\n      var scene = this.scene;\n      var camera = this.camera;\n      \n      var restore = [];\n      this.scene.traverse((ele) => {\n        if (ele.$skipRayCast) {\n          restore.push({\n            parent: ele.parent,\n            ele: ele\n          })\n          ele.parent.remove(ele);\n        }\n      })\n      \n      \n    \t// update the picking ray with the camera and mouse position\n    \traycaster.setFromCamera( mouse, camera );\n    \t// calculate objects intersecting the picking ray\n    \tvar intersects = raycaster.intersectObjects( scene.children, true );\n    \t\n    \trestore.forEach((item) => {\n        item.parent.add(item.ele);\n      })\n    \t\n    \treturn intersects\n  \t};\n    this.raycast = raycast; \n    \n    var rAF = () => {\n      this.rAFID = window.requestAnimationFrame(rAF);\n      // this.raycast();\n    }\n    this.rAFID = window.requestAnimationFrame(rAF);\n  },\n  deactivated () {\n    window.cancelAnimationFrame(this.rAFID);\n    this.clean();\n  },\n  methods: {\n    handleClick (event) {\n      this.$emit('click', {\n        event,\n        intersects: this.raycast()\n      })\n    },\n    handleMV (event) {\n      this.mouse.x = (event.clientX / window.innerWidth) * 2 - 1;\n\t    this.mouse.y = - (event.clientY / window.innerHeight) * 2 + 1;\n    }\n    \n  }\n}\n</script>\n\n<style>\n\n</style>\n"},{"path":"@/webgl/Material/MeshPhongMaterial.vue","src":"<template>\n<div class=\"mesh-phong-material\"></div>\n</template>\n\n<script>\nvar THREE = window.THREE;\n\nexport default {\n  props: {\n    color: {\n      default () {\n        return Math.random() * 0xffffff\n      }\n    }\n  },\n  data () {\n    return {\n      material: false\n    }\n  },\n  created () {\n    this.material = new THREE.MeshPhongMaterial({\n      color: new THREE.Color(this.color),\n      specular: new THREE.Color(0x111111),\n      shininess: 50\n    })\n    this.$parent.$emit('material', this.material)\n  }\n}\n</script>\n\n<style>\n\n</style>\n"},{"path":"@/webgl/Material/ShaderMaterial.vue","src":"<template>\n<div class=\"mesh-basic-material\"></div>\n</template>\n\n<script>\nvar THREE = window.THREE;\n\nexport default {\n  data () {\n    return {\n      material: false\n    }\n  },\n  props: {\n    vs: {\n      default:\n`void main ( void ) {\n  vec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\n  vec4 outputPos = projectionMatrix * mvPosition;\n  gl_Position = outputPos;\n}`\n    },\n    fs: {\n      default:\n`void main () {\n  gl_FragColor = vec4(vec3(0.5), 1.0);\n}`\n    },\n    uniforms: {\n      default () {\n        return {}\n      }\n    }\n  },\n  watch: {\n    vs () { this.initShader() },\n    fs () { this.initShader() },\n    uniforms () { this.initShader() }\n  },\n  mounted () {\n    this.initShader()\n  },\n  methods: {\n    initShader () {\n      try {\n        this.material = new THREE.ShaderMaterial({\n          uniforms: {\n            ...this.uniforms// ,\n            // ...THREE.UniformsUtils.merge([\n            //   THREE.UniformsLib.common,\n            //   THREE.UniformsLib.aomap,\n            //   THREE.UniformsLib.lightmap,\n            //   THREE.UniformsLib.emissivemap,\n            //   THREE.UniformsLib.bumpmap,\n            //   THREE.UniformsLib.normalmap,\n            //   THREE.UniformsLib.displacementmap,\n            //   THREE.UniformsLib.fog,\n            //   THREE.UniformsLib.lights,\n            //   THREE.UniformsLib.shadowmap,\n            //   {\n            //     flipEnvMap: {\n            //       value: 1\n            //     },\n            //     emissive: {\n            //       value: new THREE.Color(0x000000)\n            //     },\n            //     specular: {\n            //       value: new THREE.Color(0x111111)\n            //     },\n            //     shininess: {\n            //       value: 30\n            //     },\n            //     envMap: {\n            //       // value: cubeCamera.renderTarget\n            //     }\n            //   }\n            // ])\n          },\n          vertexShader: this.vs || this.$options.props.vs.default,\n          fragmentShader: this.fs || this.$options.props.fs.default\n        })\n        this.$parent.$emit('material', this.material)\n      } catch (e) {\n        console.log(e)\n      }\n    }\n  }\n}\n</script>\n\n<style>\n\n</style>\n"},{"path":"@/webgl/Element/PointLight.vue","src":"<template>\n  <div class=\"light-point\"></div>\n</template>\n\n<script>\nvar THREE = window.THREE;\n\nexport default {\n  props: {\n    color: {\n      default () {\n        return 0xffffff\n      }\n    }\n  },\n  data () {\n    return {\n      light: false\n    }\n  },\n  mounted () {\n    this.light = new THREE.PointLight({ color: new THREE.Color(this.color) })\n    this.$emit('element', this.light)\n    this.$parent.$emit('add', this.light)\n  },\n  beforeDestroy () {\n    this.$parent.$emit('remove', this.light)\n  }\n}\n</script>\n\n<style>\n\n</style>\n"},{"path":"@/webgl/Element/Object3D.vue","src":"<template>\n<div class=\"object-3d\"><slot></slot></div>\n</template>\n\n<script>\nvar THREE = window.THREE;\nexport default {\n  data () {\n    return {\n      object3d: false\n    }\n  },\n  props: {\n    visible: { default: true },\n    px: { default: 0 },\n    py: { default: 0 },\n    pz: { default: 0 },\n\n    sx: { default: 1 },\n    sy: { default: 1 },\n    sz: { default: 1 },\n\n    rx: { default: 0 },\n    ry: { default: 0 },\n    rz: { default: 0 }\n  },\n  watch: {\n    visible () { this.object3d.setVisible(this.visible) },\n    px () { this.updatePosition('x', this.px) },\n    py () { this.updatePosition('y', this.py) },\n    pz () { this.updatePosition('z', this.pz) },\n\n    sx () { this.updateScale('x', this.sx) },\n    sy () { this.updateScale('y', this.sy) },\n    sz () { this.updateScale('z', this.sz) },\n\n    rx () { this.updateRotation('x', this.rx) },\n    ry () { this.updateRotation('y', this.ry) },\n    rz () { this.updateRotation('z', this.rz) }\n  },\n  created () {\n    this.object3d = new THREE.Object3D()\n    this.$emit('element', this.object3d)\n    this.object3d.visible = true\n    this.updatePosition()\n    this.updateScale()\n    this.updateRotation()\n    this.$on('add', (v) => {\n      this.object3d.add(v)\n    })\n    this.$on('remove', (v) => {\n      this.object3d.remove(v)\n    })\n  },\n  mounted () {\n    this.$parent.$emit('add', this.object3d)\n  },\n  beforeDestroy () {\n    this.$parent.$emit('remove', this.object3d)\n  },\n  methods: {\n    updatePosition (key, val) {\n      if (key) {\n        this.object3d.position[key] = val\n      } else {\n        this.object3d.position.set(this.px, this.py, this.pz)\n      }\n    },\n    updateScale (key, val) {\n      if (key) {\n        this.object3d.scale[key] = val\n      } else {\n        this.object3d.scale.set(this.sx, this.sy, this.sz)\n      }\n    },\n    updateRotation (key, val) {\n      if (key) {\n        this.object3d.rotation[key] = val\n      } else {\n        this.object3d.rotation.set(this.rx, this.ry, this.rz)\n      }\n    }\n  }\n}\n</script>\n\n<style>\n\n</style>\n"},{"path":"@/webgl/Element/Points.vue","src":"<template>\n  <div class=\"points\">\n    <slot>\n    </slot>\n  </div>\n</template>\n\n<script>\nimport THREE from '@/three.js'\n\nexport default {\n  props: {\n    position: {}\n  },\n  data () {\n    return {\n      element: false,\n      points: false,\n      material: false,\n      geometry: false\n    }\n  },\n  created () {\n    this.element = this.points = new THREE.Points()\n    this.$parent.$emit('add', this.points)\n    this.$emit('element', this.points)\n    this.$on('material', (v) => {\n      this.material = v\n      this.tryUpdateMaterial()\n    })\n    this.$on('geometry', (v) => {\n      this.geometry = v\n      this.tryUpdateGeometry()\n    })\n  },\n  beforeDestroy () {\n    this.uninstall()\n  },\n  methods: {\n    tryUpdateGeometry (v) {\n      if (this.points) {\n        this.points.geometry = this.geometry\n      }\n    },\n    tryUpdateMaterial (v) {\n      if (this.points) {\n        this.points.material = this.material\n      }\n    },\n    uninstall () {\n      this.$parent.$emit('remove', this.points)\n    }\n  }\n}\n</script>\n\n<style>\n\n</style>\n"},{"path":"@/webgl/Element/Mesh.vue","src":"<template>\n  <div class=\"mesh\">\n    <slot>\n    </slot>\n  </div>\n</template>\n\n<script>\nvar THREE = window.THREE;\nexport default {\n  props: {\n  },\n  data () {\n    return {\n      element: false,\n      mesh: false,\n      material: false,\n      geometry: false\n    }\n  },\n  created () {\n    this.element = this.mesh = new THREE.Mesh()\n    this.$parent.$emit('add', this.mesh)\n    this.$emit('element', this.mesh)\n\n    this.$on('material', (v) => {\n      this.material = v\n      this.tryUpdateMaterial()\n    })\n    this.$on('geometry', (v) => {\n      this.geometry = v\n      this.tryUpdateGeometry()\n    })\n  },\n  beforeDestroy () {\n    this.uninstall()\n  },\n  methods: {\n    tryUpdateGeometry (v) {\n      if (this.mesh) {\n        this.mesh.geometry = this.geometry\n      }\n    },\n    tryUpdateMaterial (v) {\n      if (this.mesh) {\n        this.mesh.material = this.material\n      }\n    },\n    uninstall () {\n      this.$parent.$emit('remove', this.mesh)\n    }\n  }\n}\n</script>\n\n<style>\n\n</style>\n"},{"path":"@/webgl/Geo/SphereBufferGeometry.vue","src":"<template>\n  <div class=\"geo-sphere\"></div>\n</template>\n\n<script>\nvar THREE = window.THREE\nexport default {\n  data () {\n    return {\n      geometry: false\n    }\n  },\n  mounted () {\n    let geometry = new THREE.SphereBufferGeometry(2, 256, 256)\n    this.$parent.$emit('geometry', geometry)\n  }\n}\n</script>\n\n<style>\n\n</style>\n"},{"path":"@/shader/Simple/vs.vert","src":"varying vec3 vPos;\nuniform float time;\n\nvoid main (void) {\n  vPos = position;\n  vPos.x = vPos.x + sin(vPos.x + time);\n  vPos.y = vPos.y + cos(vPos.y + time);\n  vPos.z = vPos.z + tan(vPos.z + time);\n  \n  vec4 mvPosition = modelViewMatrix * vec4(position, 1.0);\n  vec4 outputPos = projectionMatrix * mvPosition;\n  gl_Position = outputPos;\n  gl_PointSize = 1.0;\n}"},{"path":"@/shader/Simple/fs.frag","src":"varying vec3 vPos;\n\nvoid main () {\n  gl_FragColor = vec4(vec3(vPos), 1.0);\n}"},{"path":"@/shader/Fling/vs.vert","src":"varying vec3 vPos;\nuniform float time;\n\nvoid main (void) {\n  vPos = position;\n  vPos.x = vPos.x + sin(vPos.x + time);\n  vPos.y = vPos.y + cos(vPos.y + time);\n  vPos.z = vPos.z + tan(vPos.z + time);\n  \n  vec4 mvPosition = modelViewMatrix * vec4(vPos, 1.0);\n  vec4 outputPos = projectionMatrix * mvPosition;\n  gl_Position = outputPos;\n}"},{"path":"@/three.js","src":"var THREE = window.THREE\nexport default THREE\n"}],"date":"Fri Feb 16 2018 06:02:19 GMT+0800 (HKT)"},"backups":[{"currentFilePath":"@/index.html","openedFiles":[{"path":"@/index.html"}],"files":[{"path":"@/index.html","src":"<!DOCTYPE html>\n<html>\n  <head>\n    <meta charset=\"UTF-8\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge,chrome=1\">\n    <meta name=\"viewport\" content=\"width=device-width,initial-scale=1\">\n\n    <title>WebGL</title>\n\n    <meta name=\"author\" content=\"loklok\">\n    <meta name=\"description\" content=\"WebGL Art\">\n    <meta name=\"keywords\" content=\"WebGL, Art\">\n\n    <style type=\"text/css\">\n    </style>\n\n  </head>\n  <body>\n    <div id=\"app-attach-point\"></div>\n    \n    \n    \n    <script required src=\"https://cdnjs.cloudflare.com/ajax/libs/vue/2.5.2/vue.min.js\"></script>\n    <script required src=\"https://cdnjs.cloudflare.com/ajax/libs/vue-router/3.0.1/vue-router.min.js\"></script>\n    <script required src=\"https://cdnjs.cloudflare.com/ajax/libs/tween.js/16.3.5/Tween.min.js\"></script>\n    <script required src=\"https://cdnjs.cloudflare.com/ajax/libs/three.js/88/three.min.js\" integrity=\"sha256-6fhm481uY9c152qGWIVgE7KbzaCj5WjCi3BGIpZef2E=\" crossorigin=\"anonymous\"></script>\n    <script required src=\"https://threejs.org/examples/js/GPUComputationRenderer.js\"></script>\n  </body>\n</html>\n"},{"path":"@/style.css","src":"html, body {\n  width: 100%;\n  height: 100%;\n  margin: 0px;\n  padding: 0px;\n}\nhtml, body, #app {\n  box-sizing: border-box;\n  width: 100%;\n  height: 100%;\n  overflow: hidden;\n}\n.full{\n  width: 100%;\n  height: 100%;\n}"},{"path":"@/main.js","src":"import '@/style.css'\nimport App from '@/app.vue'\nimport router from '@/router.js'\n\nvar oldDOM = document.querySelector('#app-attach-point');\nvar newDOM = document.createElement('div');\nnewDOM.id = '#app-attach-point';\ndocument.body.appendChild(newDOM);\nvar target = oldDOM || newDOM;\n\nvar app = new Vue({\n  router,\n  el: target,\n  components: {\n    App\n  },\n  template: '<div id=\"app\"><App /></div>'\n})\n\nwindow.addEventListener('message', (evt) => {\n  var { type, data } = evt.data;\n  window.dispatchEvent(new CustomEvent(type, { detail: data }))\n}, false);\n\nwindow.addEventListener('slider', ({ detail }) => {\n  console.log(detail);\n  (window.opener || window.top).dispatchEvent(new CustomEvent('loklok', { detail: { rand: Math.random() } }))\n});\n\nexport default app;\n"},{"path":"@/router.js","src":"import Player from '@/webgl/layout/Player.vue'\nimport Home from '@/webgl/pages/Home.vue'\nimport Happy from '@/webgl/pages/Happy.vue'\n\nconst router = new VueRouter({\n  mode: 'hash',\n  routes: [\n    {\n      path: '/',\n      component: Player,\n      children: [\n        {\n          path: '',\n          component: Home\n        },\n        {\n          path: 'happy',\n          component: Happy\n        }\n      ]\n    }\n  ]\n})\n\nexport default router\n"},{"path":"@/app.vue","src":"<template>\n  <div>\n    <router-view></router-view>\n  </div>\n</template>\n\n<script>\nimport THREE from '@/three.js'\n\nexport default {\n  data () {\n    return {\n      \n    }\n  },\n  created () {\n    \n  },\n  beforeDestroy () {\n    \n  },\n  methods: {\n    \n  }\n}\n</script>\n\n<style>\n\n</style>\n"},{"path":"@/webgl/layout/Player.vue","src":"<template>\n  <div class=\"full\" ref=\"full\">\n\n    <Renderer\n      ref=\"renderer\"\n      :size=\"size\"\n      @renderer=\"(v) => { renderer = v }\"\n      @toucher=\"(v) => { toucher = v }\"\n    >\n    </Renderer>\n    \n    <keep-alive>\n      <component\n        class=\"hidden\"\n        :is=\"'router-view'\"\n        v-if=\"renderer\"\n        :size=\"size\"\n        :toucher=\"toucher\"\n        :renderer=\"renderer\"\n      >\n      </component>\n    </keep-alive>\n\n  </div>\n</template>\n\n<script>\nimport Bundle from '@/webgl/Bundle.js';\n\nexport default {\n  components: {\n    ...Bundle\n  },\n  computed: {\n  },\n  methods: {\n    \n  },\n  data () {\n    return {\n      toucher: false,\n      resizer: () => {},\n      renderer: false,\n      size: {\n        width: 100,\n        height: 100,\n        aspect: 1\n      }\n    }\n  },\n  created () {\n    \n  },\n  mounted () {\n    var resizer = this.resizer = () => {\n      this.$nextTick(() => {\n        var rect = this.$refs.full.getBoundingClientRect()\n        this.size = {\n          width: rect.width,\n          height: rect.height,\n          aspect: rect.width / rect.height\n        }\n      })\n    }\n    window.addEventListener('resize', resizer.bind(this))\n    resizer()\n  }\n}\n</script>\n\n<style scoped>\n.hidden{\n  display: none;\n}\n.full{\n  width: 100%;\n  height: 100%;\n}\n</style>\n"},{"path":"@/webgl/pages/Home.vue","src":"<template>\n  <div class=\"\">\n    <PerspectiveCamera\n      :fov=\"75\"\n      :aspect=\"size.aspect\"\n      :near=\"1\"\n      :far=\"1000\"\n      :position=\"{ x: 0, y: 0, z: 15 }\"\n      @camera=\"(v) => { camera = v; }\"\n    />\n    \n    <Scene @scene=\"(v) => { scene = v }\">\n      <Object3D pz=\"10\">\n        <PointLight />\n      </Object3D>\n      \n      <Object3D pz=\"0\">\n        <Mesh>\n          <SphereBufferGeometry />\n          <ShaderMaterial :vs=\"simpleVS\" :fs=\"simpleFS\" :uniforms=\"animatable\" />\n        </Mesh>\n      </Object3D>\n    </Scene>\n    \n    <Raycaster v-if=\"camera && toucher && scene\" :scene=\"scene\" :toucher=\"toucher\" :camera=\"camera\" @found=\"(v) => { found = v; }\" @click=\"onClick\">\n    </Raycaster>\n    \n  </div>\n</template>\n\n<script>\nimport Bundle from '@/webgl/Bundle.js';\n\nimport simpleVS from '@/shader/Simple/vs.vert'\nimport simpleFS from '@/shader/Simple/fs.frag'\n\nexport default {\n  name: 'Home',\n  props: {\n    toucher: {},\n    size: {},\n    renderer: {},\n    doc: {}\n  },\n  components: {\n    ...Bundle\n  },\n  computed: {\n  },\n  data () {\n    return {\n      cam: {\n        pos: { x: 3, y: 5, z: 10 }\n      },\n      ready: false,\n      cubeCamera: false,\n      visible: true,\n      resizer: () => {},\n      scene: false,\n      camera: false,\n      \n      found: [],\n      \n      animatable: {\n        time: { value: 0 }\n      },\n      simpleVS,\n      simpleFS\n      \n    }\n  },\n  methods: {\n    onClick ({ event, intersects }) {\n      this.$router.push({\n        path: '/happy'\n      })\n      this.$forceUpdate()\n      console.log('Click to happy');\n    },\n    setup () {\n    },\n    renderWebGL () {\n      TWEEN.update()\n      \n      this.animatable.time.value += 0.01;\n      \n      if (this.scene && this.camera && this.renderer) {\n        this.renderer.render(this.scene, this.camera)\n      }\n    }\n  },\n  watch: {\n    camera () {\n      if (this.camera && this.renderer) {\n        this.ready = true\n      }\n    },\n    renderer () {\n      if (this.camera && this.renderer) {\n        this.ready = true\n      }\n    },\n    ready () {\n      if (this.ready) {\n        this.setup()\n      }\n    }\n  },\n  created () {\n    \n  },\n  activated () {\n    var self = this\n    function loop (rAFT) {\n      self.rAFID = window.requestAnimationFrame(loop)\n      self.renderWebGL(rAFT)\n    }\n    self.rAFID = window.requestAnimationFrame(loop)\n  },\n  deactivated () {\n    window.cancelAnimationFrame(this.rAFID)\n  }\n}\n</script>\n\n<style scoped>\n.full{\n  width: 100%;\n  height: 100%;\n}\n</style>\n"},{"path":"@/webgl/pages/Happy.vue","src":"<template>\n  <div class=\"\">\n\n    <PerspectiveCamera\n      :fov=\"75\"\n      :aspect=\"size.aspect\"\n      :near=\"1\"\n      :far=\"1000\"\n      :position=\"{ x: 0, y: 0, z: 15 }\"\n      @camera=\"(v) => { camera = v; }\"\n    />\n    \n    <Scene @scene=\"(v) => { scene = v }\">\n      <Object3D pz=\"10\">\n        <PointLight />\n      </Object3D>\n      \n      <Object3D pz=\"0\">\n        <Points @element=\"(v) => { v.$skipRayCast = true }\">\n          <SphereBufferGeometry />\n          <ShaderMaterial :vs=\"simpleVS2\" :fs=\"simpleFS\" :uniforms=\"animatable\" />\n        </Points>\n      </Object3D>\n      \n      <Object3D pz=\"1\">\n        <Mesh>\n          <SphereBufferGeometry />\n          <ShaderMaterial :vs=\"simpleVS\" :fs=\"simpleFS\" :uniforms=\"animatable\" />\n        </Mesh>\n      </Object3D>\n    </Scene>\n    \n    <Raycaster v-if=\"renderer && camera && toucher && scene\" :scene=\"scene\" :toucher=\"toucher\" :camera=\"camera\" @found=\"(v) => { found = v; }\" @click=\"onClick\">\n    </Raycaster>\n\n  </div>\n</template>\n\n<script>\nimport Bundle from '@/webgl/Bundle.js';\n\nimport simpleVS2 from '@/shader/Fling/vs.vert'\nimport simpleVS from '@/shader/Simple/vs.vert'\nimport simpleFS from '@/shader/Simple/fs.frag'\n\nexport default {\n  name: 'Happy',\n  props: {\n    toucher: {},\n    size: {},\n    renderer: {},\n    doc: {}\n  },\n  components: {\n    ...Bundle\n  },\n  computed: {\n  },\n  data () {\n    return {\n      cam: {\n        pos: { x: 3, y: 5, z: 10 }\n      },\n      ready: false,\n      cubeCamera: false,\n      visible: true,\n      resizer: () => {},\n      scene: false,\n      camera: false,\n      \n      found: [],\n      \n      animatable: {\n        time: { value: 0 }\n      },\n      simpleVS,\n      simpleFS,\n      simpleVS2\n      \n    }\n  },\n  methods: {\n    onClick ({ event, intersects }) {\n      console.log(event, intersects)\n      this.$router.push('/')\n    },\n    setup () {\n    },\n    renderWebGL () {\n      TWEEN.update()\n      \n      this.animatable.time.value += 0.01;\n      \n      if (this.scene && this.camera && this.renderer) {\n        this.renderer.render(this.scene, this.camera)\n      }\n    }\n  },\n  watch: {\n    camera () {\n      if (this.camera && this.renderer) {\n        this.ready = true\n      }\n    },\n    renderer () {\n      if (this.camera && this.renderer) {\n        this.ready = true\n      }\n    },\n    ready () {\n      if (this.ready) {\n        this.setup()\n      }\n    }\n  },\n  created () {\n    \n  },\n  activated () {\n    var self = this\n    function loop (rAFT) {\n      self.rAFID = window.requestAnimationFrame(loop)\n      self.renderWebGL(rAFT)\n    }\n    self.rAFID = window.requestAnimationFrame(loop)\n  },\n  deactivated () {\n    window.cancelAnimationFrame(this.rAFID);\n    console.log('cancel animation frame')\n  }\n}\n</script>\n\n<style scoped>\n.full{\n  width: 100%;\n  height: 100%;\n}\n</style>\n"},{"path":"@/webgl/sample.vue","src":"<template>\n  <div class=\"full\">\n\n    <Renderer\n      ref=\"renderer\"\n      :size=\"size\"\n      @renderer=\"(v) => { renderer = v }\"\n    >\n    </Renderer>\n\n    <PerspectiveCamera\n      :fov=\"75\"\n      :aspect=\"size.aspect\"\n      :near=\"1\"\n      :far=\"1000\"\n      :position=\"{ x: 0, y: 0, z: 10 }\"\n      @camera=\"(v) => { camera = v; }\"\n    />\n\n    <Scene @scene=\"(v) => { scene = v }\">\n      <Object3D pz=\"10\">\n        <PointLight />\n      </Object3D>\n      \n      <Object3D pz=\"0\">\n        <Points>\n          <SphereBufferGeometry />\n          <ShaderMaterial :vs=\"simpleVS\" :fs=\"simpleFS\" :uniforms=\"animatable\" />\n        </Points>\n      </Object3D>\n      \n    </Scene>\n\n  </div>\n</template>\n\n<script>\nimport Bundle from '@/webgl/Bundle.js';\nimport simpleVS from '@/shader/Simple/vs.vert'\nimport simpleFS from '@/shader/Simple/fs.frag'\n\nexport default {\n  components: {\n    ...Bundle\n  },\n  computed: {\n  },\n  methods: {\n    renderWebGL () {\n      this.animatable.time.value = window.performance.now() * 0.001;\n      \n      if (this.scene && this.camera && this.renderer) {\n        this.renderer.render(this.scene, this.camera)\n      }\n    }\n  },\n  data () {\n    return {\n      animatable: {\n        time: { value: 0 }\n      },\n      simpleVS,\n      simpleFS,\n      size: {\n        width: window.innerWidth,\n        height: window.innerHeight,\n        aspect: window.innerWidth / window.innerHeight\n      },\n      renderer: false,\n      scene: false,\n      camera: false\n    }\n  },\n  created () {\n    \n  },\n  mounted () {\n    var self = this\n    function loop () {\n      self.rAFID = window.requestAnimationFrame(loop)\n      self.renderWebGL()\n    }\n    self.rAFID = window.requestAnimationFrame(loop)\n  }\n}\n</script>\n\n<style scoped>\n.full{\n  width: 100%;\n  height: 100%;\n}\n</style>\n"},{"path":"@/webgl/Bundle.js","src":"import Renderer from '@/webgl/System/Renderer.vue';\nimport Scene from '@/webgl/System/Scene.vue';\nimport PerspectiveCamera from '@/webgl/System/PerspectiveCamera.vue';\nimport Raycaster from '@/webgl/System/Raycaster.vue';\n\nimport MeshPhongMaterial from '@/webgl/Material/MeshPhongMaterial.vue';\nimport ShaderMaterial from '@/webgl/Material/ShaderMaterial.vue';\n\nimport Object3D from '@/webgl/Element/Object3D.vue';\nimport Mesh from '@/webgl/Element/Mesh.vue';\nimport Points from '@/webgl/Element/Points.vue';\nimport PointLight from '@/webgl/Element/PointLight.vue';\n\nimport SphereBufferGeometry from '@/webgl/Geo/SphereBufferGeometry.vue';\n\n\nexport default {\n  //materials\n  MeshPhongMaterial,\n  ShaderMaterial,\n  \n  //system\n  Renderer,\n  Scene,\n  PerspectiveCamera,\n  Raycaster,\n  \n  //Elemnts\n  PointLight,\n  Points,\n  Object3D,\n  Mesh,\n  \n  //Geo\n  SphereBufferGeometry\n}\n"},{"path":"@/webgl/System/Renderer.vue","src":"<template>\n  <div class=\"full pos-rel\">\n    <div class=\"full layer\" ref=\"mounter\"></div>\n    <div class=\"full layer\" ref=\"toucher\"><slot></slot></div>\n  </div>\n</template>\n\n<script>\nvar THREE = window.THREE\n\nexport default {\n  data () {\n    return {\n      // THREE,\n      renderer: false\n    }\n  },\n  props: {\n    size: { default () { return { width: 500, height: 500 } } },\n    alpha: { default: true },\n    antialias: { default: true }\n  },\n  mounted () {\n    this.renderer = new THREE.WebGLRenderer({\n      alpha: this.alpha,\n      antialias: this.antialias\n    })\n    this.resize()\n    this.renderer.domElement.style.marginBottom = '-6px'\n    this.$refs.mounter.appendChild(this.renderer.domElement)\n    \n    this.$emit('toucher', this.$refs['toucher'])\n    this.$emit('renderer', this.renderer)\n  },\n  beforeDestroy () {\n    this.$refs.mounter.removeChild(this.renderer.domElement)\n  },\n  watch: {\n    size () {\n      this.resize()\n    }\n  },\n  methods: {\n    resize () {\n      let ratio = window.devicePixelRatio || 1\n      this.renderer.setPixelRatio(ratio)\n      this.renderer.setSize(this.size.width, this.size.height)\n    }\n  }\n}\n</script>\n\n<style scoped>\n.full{\n  width: 100%;\n  height: 100%;\n}\n.pos-rel{\n  position: relative;\n}\n.layer{\n  position: absolute;\n  top: 0px;\n  left: 0px;\n}\n</style>\n"},{"path":"@/webgl/System/Scene.vue","src":"<template>\n  <div ref=\"mounter\" class=\"mounter\"><slot></slot></div>\n</template>\n\n<script>\nvar THREE = window.THREE\nexport default {\n  data () {\n    return {\n      scene: false\n    }\n  },\n  props: {\n    size: { default () { return { width: 500, height: 500 } } },\n    alpha: { default: true },\n    antialias: { default: true }\n  },\n  created () {\n    this.scene = new THREE.Scene()\n    this.$on('add', (v) => {\n      this.scene.add(v)\n    })\n    this.$on('remove', (v) => {\n      this.scene.remove(v)\n    })\n  },\n  mounted () {\n    this.$emit('scene', this.scene)\n  }\n}\n</script>\n\n<style scoped>\n.mounter {\n  display: none;\n}\n</style>\n"},{"path":"@/webgl/System/PerspectiveCamera.vue","src":"<script>\nvar THREE = window.THREE;\nexport default {\n  abstract: true,\n  render () {\n    return null\n  },\n  props: ['fov', 'aspect', 'near', 'far', 'position'],\n  data () {\n    return {\n      camera: null\n    }\n  },\n  created () {\n    this.camera = new THREE.PerspectiveCamera(this.fov, this.aspect, this.near, this.far)\n\n    if (this.position) {\n      this.camera.position.x = this.position.x\n      this.camera.position.y = this.position.y\n      this.camera.position.z = this.position.z\n    }\n    this.$emit('camera', this.camera)\n  },\n  watch: {\n    position () {\n      if (this.position) {\n        this.camera.position.x = this.position.x\n        this.camera.position.y = this.position.y\n        this.camera.position.z = this.position.z\n      }\n    },\n    aspect () {\n      if (this.camera) {\n        this.camera.aspect = this.aspect\n        this.camera.updateProjectionMatrix()\n      }\n    }\n  }\n}\n</script>\n\n<style scoped>\n.perspective-camera{\n  display: none;\n}\n</style>\n"},{"path":"@/webgl/System/Raycaster.vue","src":"<template>\n<div></div>\n</template>\n\n<script>\n\nexport default {\n  data () {\n    return {\n      rAFID: 0,\n      mouse: null,\n      raycast () {},\n      clean () {},\n      intersects: []\n    }\n  },\n  props: {\n    scene: {},\n    camera: {},\n    toucher: {}\n  },\n  created () {\n  },\n  activated () {\n    var raycaster = new THREE.Raycaster();\n    this.mouse = new THREE.Vector2();\n    \n    this.toucher.addEventListener('mousemove', this.handleMV, false);\n    this.toucher.addEventListener('click', this.handleClick, false);\n    this.clean = () => {\n      this.toucher.removeEventListener('click', this.handleClick, false);\n      this.toucher.removeEventListener('mousemove', this.handleMV);\n    }\n    \n    var raycast = () => {\n      var mouse = this.mouse;\n      var scene = this.scene;\n      var camera = this.camera;\n      \n      var restore = [];\n      this.scene.traverse((ele) => {\n        if (ele.$skipRayCast) {\n          restore.push({\n            parent: ele.parent,\n            ele: ele\n          })\n          ele.parent.remove(ele);\n        }\n      })\n      \n      \n    \t// update the picking ray with the camera and mouse position\n    \traycaster.setFromCamera( mouse, camera );\n    \t// calculate objects intersecting the picking ray\n    \tvar intersects = raycaster.intersectObjects( scene.children, true );\n    \t\n    \trestore.forEach((item) => {\n        item.parent.add(item.ele);\n      })\n    \t\n    \treturn intersects\n  \t};\n    this.raycast = raycast; \n    \n    var rAF = () => {\n      this.rAFID = window.requestAnimationFrame(rAF);\n      // this.raycast();\n    }\n    this.rAFID = window.requestAnimationFrame(rAF);\n  },\n  deactivated () {\n    window.cancelAnimationFrame(this.rAFID);\n    this.clean();\n  },\n  methods: {\n    handleClick (event) {\n      this.$emit('click', {\n        event,\n        intersects: this.raycast()\n      })\n    },\n    handleMV (event) {\n      this.mouse.x = (event.clientX / window.innerWidth) * 2 - 1;\n\t    this.mouse.y = - (event.clientY / window.innerHeight) * 2 + 1;\n    }\n    \n  }\n}\n</script>\n\n<style>\n\n</style>\n"},{"path":"@/webgl/Material/MeshPhongMaterial.vue","src":"<template>\n<div class=\"mesh-phong-material\"></div>\n</template>\n\n<script>\nvar THREE = window.THREE;\n\nexport default {\n  props: {\n    color: {\n      default () {\n        return Math.random() * 0xffffff\n      }\n    }\n  },\n  data () {\n    return {\n      material: false\n    }\n  },\n  created () {\n    this.material = new THREE.MeshPhongMaterial({\n      color: new THREE.Color(this.color),\n      specular: new THREE.Color(0x111111),\n      shininess: 50\n    })\n    this.$parent.$emit('material', this.material)\n  }\n}\n</script>\n\n<style>\n\n</style>\n"},{"path":"@/webgl/Material/ShaderMaterial.vue","src":"<template>\n<div class=\"mesh-basic-material\"></div>\n</template>\n\n<script>\nvar THREE = window.THREE;\n\nexport default {\n  data () {\n    return {\n      material: false\n    }\n  },\n  props: {\n    vs: {\n      default:\n`void main ( void ) {\n  vec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\n  vec4 outputPos = projectionMatrix * mvPosition;\n  gl_Position = outputPos;\n}`\n    },\n    fs: {\n      default:\n`void main () {\n  gl_FragColor = vec4(vec3(0.5), 1.0);\n}`\n    },\n    uniforms: {\n      default () {\n        return {}\n      }\n    }\n  },\n  watch: {\n    vs () { this.initShader() },\n    fs () { this.initShader() },\n    uniforms () { this.initShader() }\n  },\n  mounted () {\n    this.initShader()\n  },\n  methods: {\n    initShader () {\n      try {\n        this.material = new THREE.ShaderMaterial({\n          uniforms: {\n            ...this.uniforms// ,\n            // ...THREE.UniformsUtils.merge([\n            //   THREE.UniformsLib.common,\n            //   THREE.UniformsLib.aomap,\n            //   THREE.UniformsLib.lightmap,\n            //   THREE.UniformsLib.emissivemap,\n            //   THREE.UniformsLib.bumpmap,\n            //   THREE.UniformsLib.normalmap,\n            //   THREE.UniformsLib.displacementmap,\n            //   THREE.UniformsLib.fog,\n            //   THREE.UniformsLib.lights,\n            //   THREE.UniformsLib.shadowmap,\n            //   {\n            //     flipEnvMap: {\n            //       value: 1\n            //     },\n            //     emissive: {\n            //       value: new THREE.Color(0x000000)\n            //     },\n            //     specular: {\n            //       value: new THREE.Color(0x111111)\n            //     },\n            //     shininess: {\n            //       value: 30\n            //     },\n            //     envMap: {\n            //       // value: cubeCamera.renderTarget\n            //     }\n            //   }\n            // ])\n          },\n          vertexShader: this.vs || this.$options.props.vs.default,\n          fragmentShader: this.fs || this.$options.props.fs.default\n        })\n        this.$parent.$emit('material', this.material)\n      } catch (e) {\n        console.log(e)\n      }\n    }\n  }\n}\n</script>\n\n<style>\n\n</style>\n"},{"path":"@/webgl/Element/PointLight.vue","src":"<template>\n  <div class=\"light-point\"></div>\n</template>\n\n<script>\nvar THREE = window.THREE;\n\nexport default {\n  props: {\n    color: {\n      default () {\n        return 0xffffff\n      }\n    }\n  },\n  data () {\n    return {\n      light: false\n    }\n  },\n  mounted () {\n    this.light = new THREE.PointLight({ color: new THREE.Color(this.color) })\n    this.$emit('element', this.light)\n    this.$parent.$emit('add', this.light)\n  },\n  beforeDestroy () {\n    this.$parent.$emit('remove', this.light)\n  }\n}\n</script>\n\n<style>\n\n</style>\n"},{"path":"@/webgl/Element/Object3D.vue","src":"<template>\n<div class=\"object-3d\"><slot></slot></div>\n</template>\n\n<script>\nvar THREE = window.THREE;\nexport default {\n  data () {\n    return {\n      object3d: false\n    }\n  },\n  props: {\n    visible: { default: true },\n    px: { default: 0 },\n    py: { default: 0 },\n    pz: { default: 0 },\n\n    sx: { default: 1 },\n    sy: { default: 1 },\n    sz: { default: 1 },\n\n    rx: { default: 0 },\n    ry: { default: 0 },\n    rz: { default: 0 }\n  },\n  watch: {\n    visible () { this.object3d.setVisible(this.visible) },\n    px () { this.updatePosition('x', this.px) },\n    py () { this.updatePosition('y', this.py) },\n    pz () { this.updatePosition('z', this.pz) },\n\n    sx () { this.updateScale('x', this.sx) },\n    sy () { this.updateScale('y', this.sy) },\n    sz () { this.updateScale('z', this.sz) },\n\n    rx () { this.updateRotation('x', this.rx) },\n    ry () { this.updateRotation('y', this.ry) },\n    rz () { this.updateRotation('z', this.rz) }\n  },\n  created () {\n    this.object3d = new THREE.Object3D()\n    this.$emit('element', this.object3d)\n    this.object3d.visible = true\n    this.updatePosition()\n    this.updateScale()\n    this.updateRotation()\n    this.$on('add', (v) => {\n      this.object3d.add(v)\n    })\n    this.$on('remove', (v) => {\n      this.object3d.remove(v)\n    })\n  },\n  mounted () {\n    this.$parent.$emit('add', this.object3d)\n  },\n  beforeDestroy () {\n    this.$parent.$emit('remove', this.object3d)\n  },\n  methods: {\n    updatePosition (key, val) {\n      if (key) {\n        this.object3d.position[key] = val\n      } else {\n        this.object3d.position.set(this.px, this.py, this.pz)\n      }\n    },\n    updateScale (key, val) {\n      if (key) {\n        this.object3d.scale[key] = val\n      } else {\n        this.object3d.scale.set(this.sx, this.sy, this.sz)\n      }\n    },\n    updateRotation (key, val) {\n      if (key) {\n        this.object3d.rotation[key] = val\n      } else {\n        this.object3d.rotation.set(this.rx, this.ry, this.rz)\n      }\n    }\n  }\n}\n</script>\n\n<style>\n\n</style>\n"},{"path":"@/webgl/Element/Points.vue","src":"<template>\n  <div class=\"points\">\n    <slot>\n    </slot>\n  </div>\n</template>\n\n<script>\nimport THREE from '@/three.js'\n\nexport default {\n  props: {\n    position: {}\n  },\n  data () {\n    return {\n      element: false,\n      points: false,\n      material: false,\n      geometry: false\n    }\n  },\n  created () {\n    this.element = this.points = new THREE.Points()\n    this.$parent.$emit('add', this.points)\n    this.$emit('element', this.points)\n    this.$on('material', (v) => {\n      this.material = v\n      this.tryUpdateMaterial()\n    })\n    this.$on('geometry', (v) => {\n      this.geometry = v\n      this.tryUpdateGeometry()\n    })\n  },\n  beforeDestroy () {\n    this.uninstall()\n  },\n  methods: {\n    tryUpdateGeometry (v) {\n      if (this.points) {\n        this.points.geometry = this.geometry\n      }\n    },\n    tryUpdateMaterial (v) {\n      if (this.points) {\n        this.points.material = this.material\n      }\n    },\n    uninstall () {\n      this.$parent.$emit('remove', this.points)\n    }\n  }\n}\n</script>\n\n<style>\n\n</style>\n"},{"path":"@/webgl/Element/Mesh.vue","src":"<template>\n  <div class=\"mesh\">\n    <slot>\n    </slot>\n  </div>\n</template>\n\n<script>\nvar THREE = window.THREE;\nexport default {\n  props: {\n  },\n  data () {\n    return {\n      element: false,\n      mesh: false,\n      material: false,\n      geometry: false\n    }\n  },\n  created () {\n    this.element = this.mesh = new THREE.Mesh()\n    this.$parent.$emit('add', this.mesh)\n    this.$emit('element', this.mesh)\n\n    this.$on('material', (v) => {\n      this.material = v\n      this.tryUpdateMaterial()\n    })\n    this.$on('geometry', (v) => {\n      this.geometry = v\n      this.tryUpdateGeometry()\n    })\n  },\n  beforeDestroy () {\n    this.uninstall()\n  },\n  methods: {\n    tryUpdateGeometry (v) {\n      if (this.mesh) {\n        this.mesh.geometry = this.geometry\n      }\n    },\n    tryUpdateMaterial (v) {\n      if (this.mesh) {\n        this.mesh.material = this.material\n      }\n    },\n    uninstall () {\n      this.$parent.$emit('remove', this.mesh)\n    }\n  }\n}\n</script>\n\n<style>\n\n</style>\n"},{"path":"@/webgl/Geo/SphereBufferGeometry.vue","src":"<template>\n  <div class=\"geo-sphere\"></div>\n</template>\n\n<script>\nvar THREE = window.THREE\nexport default {\n  data () {\n    return {\n      geometry: false\n    }\n  },\n  mounted () {\n    let geometry = new THREE.SphereBufferGeometry(2, 256, 256)\n    this.$parent.$emit('geometry', geometry)\n  }\n}\n</script>\n\n<style>\n\n</style>\n"},{"path":"@/shader/Simple/vs.vert","src":"varying vec3 vPos;\nuniform float time;\n\nvoid main (void) {\n  vPos = position;\n  vPos.x = vPos.x + sin(vPos.x + time);\n  vPos.y = vPos.y + cos(vPos.y + time);\n  vPos.z = vPos.z + tan(vPos.z + time);\n  \n  vec4 mvPosition = modelViewMatrix * vec4(position, 1.0);\n  vec4 outputPos = projectionMatrix * mvPosition;\n  gl_Position = outputPos;\n}"},{"path":"@/shader/Simple/fs.frag","src":"varying vec3 vPos;\n\nvoid main () {\n  gl_FragColor = vec4(vec3(vPos), 1.0);\n}"},{"path":"@/shader/Fling/vs.vert","src":"varying vec3 vPos;\nuniform float time;\n\nvoid main (void) {\n  vPos = position;\n  vPos.x = vPos.x + sin(vPos.x + time);\n  vPos.y = vPos.y + cos(vPos.y + time);\n  vPos.z = vPos.z + tan(vPos.z + time);\n  \n  vec4 mvPosition = modelViewMatrix * vec4(vPos, 1.0);\n  vec4 outputPos = projectionMatrix * mvPosition;\n  gl_Position = outputPos;\n}"},{"path":"@/three.js","src":"var THREE = window.THREE\nexport default THREE\n"}],"date":"Thu Feb 15 2018 16:32:46 GMT+0800 (HKT)"},{"currentFilePath":"@/index.html","openedFiles":[{"path":"@/index.html"}],"files":[{"path":"@/index.html","src":"<!DOCTYPE html>\n<html>\n  <head>\n    <meta charset=\"UTF-8\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge,chrome=1\">\n    <meta name=\"viewport\" content=\"width=device-width,initial-scale=1\">\n\n    <title>WebGL</title>\n\n    <meta name=\"author\" content=\"loklok\">\n    <meta name=\"description\" content=\"WebGL Art\">\n    <meta name=\"keywords\" content=\"WebGL, Art\">\n\n    <style type=\"text/css\">\n    </style>\n\n  </head>\n  <body>\n    <div id=\"app-attach-point\"></div>\n    \n    \n    \n    <script required src=\"https://cdnjs.cloudflare.com/ajax/libs/vue/2.5.2/vue.min.js\"></script>\n    <script required src=\"https://cdnjs.cloudflare.com/ajax/libs/vue-router/3.0.1/vue-router.min.js\"></script>\n    <script required src=\"https://cdnjs.cloudflare.com/ajax/libs/tween.js/16.3.5/Tween.min.js\"></script>\n    <script required src=\"https://cdnjs.cloudflare.com/ajax/libs/three.js/88/three.min.js\" integrity=\"sha256-6fhm481uY9c152qGWIVgE7KbzaCj5WjCi3BGIpZef2E=\" crossorigin=\"anonymous\"></script>\n    <script required src=\"https://threejs.org/examples/js/GPUComputationRenderer.js\"></script>\n  </body>\n</html>\n"},{"path":"@/style.css","src":"html, body {\n  width: 100%;\n  height: 100%;\n  margin: 0px;\n  padding: 0px;\n}\nhtml, body, #app {\n  box-sizing: border-box;\n  width: 100%;\n  height: 100%;\n  overflow: hidden;\n}\n.full{\n  width: 100%;\n  height: 100%;\n}"},{"path":"@/main.js","src":"import '@/style.css'\nimport App from '@/app.vue'\nimport router from '@/router.js'\n\nvar oldDOM = document.querySelector('#app-attach-point');\nvar newDOM = document.createElement('div');\nnewDOM.id = '#app-attach-point';\ndocument.body.appendChild(newDOM);\nvar target = oldDOM || newDOM;\n\nvar app = new Vue({\n  router,\n  el: target,\n  components: {\n    App\n  },\n  template: '<div id=\"app\"><App /></div>'\n})\n\nwindow.addEventListener('message', (evt) => {\n  var { type, data } = evt.data;\n  window.dispatchEvent(new CustomEvent(type, { detail: data }))\n}, false);\n\nwindow.addEventListener('slider', ({ detail }) => {\n  console.log(detail);\n  (window.opener || window.top).dispatchEvent(new CustomEvent('loklok', { detail: { rand: Math.random() } }))\n});\n\nexport default app;\n"},{"path":"@/router.js","src":"import Player from '@/webgl/layout/Player.vue'\nimport Home from '@/webgl/pages/Home.vue'\nimport Happy from '@/webgl/pages/Happy.vue'\n\nconst router = new VueRouter({\n  mode: 'hash',\n  routes: [\n    {\n      path: '/',\n      component: Player,\n      children: [\n        {\n          path: '',\n          component: Home\n        },\n        {\n          path: 'happy',\n          component: Happy\n        }\n      ]\n    }\n  ]\n})\n\nexport default router\n"},{"path":"@/app.vue","src":"<template>\n  <div>\n    <router-view></router-view>\n  </div>\n</template>\n\n<script>\nimport THREE from '@/three.js'\n\nexport default {\n  data () {\n    return {\n      \n    }\n  },\n  created () {\n    \n  },\n  beforeDestroy () {\n    \n  },\n  methods: {\n    \n  }\n}\n</script>\n\n<style>\n\n</style>\n"},{"path":"@/webgl/layout/Player.vue","src":"<template>\n  <div class=\"full\" ref=\"full\">\n\n    <Renderer\n      ref=\"renderer\"\n      :size=\"size\"\n      @renderer=\"(v) => { renderer = v }\"\n      @toucher=\"(v) => { toucher = v }\"\n    >\n    </Renderer>\n    \n    <keep-alive>\n      <component\n        class=\"hidden\"\n        :is=\"'router-view'\"\n        v-if=\"renderer\"\n        :size=\"size\"\n        :toucher=\"toucher\"\n        :renderer=\"renderer\"\n      >\n      </component>\n    </keep-alive>\n\n  </div>\n</template>\n\n<script>\nimport Bundle from '@/webgl/Bundle.js';\n\nexport default {\n  components: {\n    ...Bundle\n  },\n  computed: {\n  },\n  methods: {\n    \n  },\n  data () {\n    return {\n      toucher: false,\n      resizer: () => {},\n      renderer: false,\n      size: {\n        width: 100,\n        height: 100,\n        aspect: 1\n      }\n    }\n  },\n  created () {\n    \n  },\n  mounted () {\n    var resizer = this.resizer = () => {\n      this.$nextTick(() => {\n        var rect = this.$refs.full.getBoundingClientRect()\n        this.size = {\n          width: rect.width,\n          height: rect.height,\n          aspect: rect.width / rect.height\n        }\n      })\n    }\n    window.addEventListener('resize', resizer.bind(this))\n    resizer()\n  }\n}\n</script>\n\n<style scoped>\n.hidden{\n  display: none;\n}\n.full{\n  width: 100%;\n  height: 100%;\n}\n</style>\n"},{"path":"@/webgl/pages/Home.vue","src":"<template>\n  <div class=\"\">\n    <PerspectiveCamera\n      :fov=\"75\"\n      :aspect=\"size.aspect\"\n      :near=\"1\"\n      :far=\"1000\"\n      :position=\"{ x: 0, y: 0, z: 15 }\"\n      @camera=\"(v) => { camera = v; }\"\n    />\n    \n    <Scene @scene=\"(v) => { scene = v }\">\n      <Object3D pz=\"10\">\n        <PointLight />\n      </Object3D>\n      \n      <Object3D pz=\"0\">\n        <Mesh>\n          <SphereBufferGeometry />\n          <ShaderMaterial :vs=\"simpleVS\" :fs=\"simpleFS\" :uniforms=\"animatable\" />\n        </Mesh>\n      </Object3D>\n    </Scene>\n    \n    <Raycaster v-if=\"camera && toucher && scene\" :scene=\"scene\" :toucher=\"toucher\" :camera=\"camera\" @found=\"(v) => { found = v; }\" @click=\"onClick\">\n    </Raycaster>\n    \n  </div>\n</template>\n\n<script>\nimport Bundle from '@/webgl/Bundle.js';\n\nimport simpleVS from '@/shader/Simple/vs.vert'\nimport simpleFS from '@/shader/Simple/fs.frag'\n\nexport default {\n  name: 'Home',\n  props: {\n    toucher: {},\n    size: {},\n    renderer: {},\n    doc: {}\n  },\n  components: {\n    ...Bundle\n  },\n  computed: {\n  },\n  data () {\n    return {\n      cam: {\n        pos: { x: 3, y: 5, z: 10 }\n      },\n      ready: false,\n      cubeCamera: false,\n      visible: true,\n      resizer: () => {},\n      scene: false,\n      camera: false,\n      \n      found: [],\n      \n      animatable: {\n        time: { value: 0 }\n      },\n      simpleVS,\n      simpleFS\n      \n    }\n  },\n  methods: {\n    onClick ({ event, intersects }) {\n      this.$router.push({\n        path: '/happy'\n      })\n      this.$forceUpdate()\n      console.log('Click to happy');\n    },\n    setup () {\n    },\n    renderWebGL () {\n      TWEEN.update()\n      \n      this.animatable.time.value += 0.01;\n      \n      if (this.scene && this.camera && this.renderer) {\n        this.renderer.render(this.scene, this.camera)\n      }\n    }\n  },\n  watch: {\n    camera () {\n      if (this.camera && this.renderer) {\n        this.ready = true\n      }\n    },\n    renderer () {\n      if (this.camera && this.renderer) {\n        this.ready = true\n      }\n    },\n    ready () {\n      if (this.ready) {\n        this.setup()\n      }\n    }\n  },\n  created () {\n    \n  },\n  activated () {\n    var self = this\n    function loop (rAFT) {\n      self.rAFID = window.requestAnimationFrame(loop)\n      self.renderWebGL(rAFT)\n    }\n    self.rAFID = window.requestAnimationFrame(loop)\n  },\n  deactivated () {\n    window.cancelAnimationFrame(this.rAFID)\n  }\n}\n</script>\n\n<style scoped>\n.full{\n  width: 100%;\n  height: 100%;\n}\n</style>\n"},{"path":"@/webgl/pages/Happy.vue","src":"<template>\n  <div class=\"\">\n\n    <PerspectiveCamera\n      :fov=\"75\"\n      :aspect=\"size.aspect\"\n      :near=\"1\"\n      :far=\"1000\"\n      :position=\"{ x: 0, y: 0, z: 15 }\"\n      @camera=\"(v) => { camera = v; }\"\n    />\n    \n    <Scene @scene=\"(v) => { scene = v }\">\n      <Object3D pz=\"10\">\n        <PointLight />\n      </Object3D>\n      \n      <Object3D pz=\"0\">\n        <Points @element=\"(v) => { v.$skipRayCast = true }\">\n          <SphereBufferGeometry />\n          <ShaderMaterial :vs=\"simpleVS2\" :fs=\"simpleFS\" :uniforms=\"animatable\" />\n        </Points>\n      </Object3D>\n      \n      <Object3D pz=\"1\">\n        <Mesh>\n          <SphereBufferGeometry />\n          <ShaderMaterial :vs=\"simpleVS\" :fs=\"simpleFS\" :uniforms=\"animatable\" />\n        </Mesh>\n      </Object3D>\n    </Scene>\n    \n    <Raycaster v-if=\"renderer && camera && toucher && scene\" :scene=\"scene\" :toucher=\"toucher\" :camera=\"camera\" @found=\"(v) => { found = v; }\" @click=\"onClick\">\n    </Raycaster>\n\n  </div>\n</template>\n\n<script>\nimport Bundle from '@/webgl/Bundle.js';\n\nimport simpleVS2 from '@/shader/Fling/vs.vert'\nimport simpleVS from '@/shader/Simple/vs.vert'\nimport simpleFS from '@/shader/Simple/fs.frag'\n\nexport default {\n  name: 'Happy',\n  props: {\n    toucher: {},\n    size: {},\n    renderer: {},\n    doc: {}\n  },\n  components: {\n    ...Bundle\n  },\n  computed: {\n  },\n  data () {\n    return {\n      cam: {\n        pos: { x: 3, y: 5, z: 10 }\n      },\n      ready: false,\n      cubeCamera: false,\n      visible: true,\n      resizer: () => {},\n      scene: false,\n      camera: false,\n      \n      found: [],\n      \n      animatable: {\n        time: { value: 0 }\n      },\n      simpleVS,\n      simpleFS,\n      simpleVS2\n      \n    }\n  },\n  methods: {\n    onClick ({ event, intersects }) {\n      console.log(event, intersects)\n      this.$router.push('/')\n    },\n    setup () {\n    },\n    renderWebGL () {\n      TWEEN.update()\n      \n      this.animatable.time.value += 0.01;\n      \n      if (this.scene && this.camera && this.renderer) {\n        this.renderer.render(this.scene, this.camera)\n      }\n    }\n  },\n  watch: {\n    camera () {\n      if (this.camera && this.renderer) {\n        this.ready = true\n      }\n    },\n    renderer () {\n      if (this.camera && this.renderer) {\n        this.ready = true\n      }\n    },\n    ready () {\n      if (this.ready) {\n        this.setup()\n      }\n    }\n  },\n  created () {\n    \n  },\n  activated () {\n    var self = this\n    function loop (rAFT) {\n      self.rAFID = window.requestAnimationFrame(loop)\n      self.renderWebGL(rAFT)\n    }\n    self.rAFID = window.requestAnimationFrame(loop)\n  },\n  deactivated () {\n    window.cancelAnimationFrame(this.rAFID);\n    console.log('cancel animation frame')\n  }\n}\n</script>\n\n<style scoped>\n.full{\n  width: 100%;\n  height: 100%;\n}\n</style>\n"},{"path":"@/webgl/sample.vue","src":"<template>\n  <div class=\"full\">\n\n    <Renderer\n      ref=\"renderer\"\n      :size=\"size\"\n      @renderer=\"(v) => { renderer = v }\"\n    >\n    </Renderer>\n\n    <PerspectiveCamera\n      :fov=\"75\"\n      :aspect=\"size.aspect\"\n      :near=\"1\"\n      :far=\"1000\"\n      :position=\"{ x: 0, y: 0, z: 10 }\"\n      @camera=\"(v) => { camera = v; }\"\n    />\n\n    <Scene @scene=\"(v) => { scene = v }\">\n      <Object3D pz=\"10\">\n        <PointLight />\n      </Object3D>\n      \n      <Object3D pz=\"0\">\n        <Points>\n          <SphereBufferGeometry />\n          <ShaderMaterial :vs=\"simpleVS\" :fs=\"simpleFS\" :uniforms=\"animatable\" />\n        </Points>\n      </Object3D>\n      \n    </Scene>\n\n  </div>\n</template>\n\n<script>\nimport Bundle from '@/webgl/Bundle.js';\nimport simpleVS from '@/shader/Simple/vs.vert'\nimport simpleFS from '@/shader/Simple/fs.frag'\n\nexport default {\n  components: {\n    ...Bundle\n  },\n  computed: {\n  },\n  methods: {\n    renderWebGL () {\n      this.animatable.time.value = window.performance.now() * 0.001;\n      \n      if (this.scene && this.camera && this.renderer) {\n        this.renderer.render(this.scene, this.camera)\n      }\n    }\n  },\n  data () {\n    return {\n      animatable: {\n        time: { value: 0 }\n      },\n      simpleVS,\n      simpleFS,\n      size: {\n        width: window.innerWidth,\n        height: window.innerHeight,\n        aspect: window.innerWidth / window.innerHeight\n      },\n      renderer: false,\n      scene: false,\n      camera: false\n    }\n  },\n  created () {\n    \n  },\n  mounted () {\n    var self = this\n    function loop () {\n      self.rAFID = window.requestAnimationFrame(loop)\n      self.renderWebGL()\n    }\n    self.rAFID = window.requestAnimationFrame(loop)\n  }\n}\n</script>\n\n<style scoped>\n.full{\n  width: 100%;\n  height: 100%;\n}\n</style>\n"},{"path":"@/webgl/Bundle.js","src":"import Renderer from '@/webgl/System/Renderer.vue';\nimport Scene from '@/webgl/System/Scene.vue';\nimport PerspectiveCamera from '@/webgl/System/PerspectiveCamera.vue';\nimport Raycaster from '@/webgl/System/Raycaster.vue';\n\nimport MeshPhongMaterial from '@/webgl/Material/MeshPhongMaterial.vue';\nimport ShaderMaterial from '@/webgl/Material/ShaderMaterial.vue';\n\nimport Object3D from '@/webgl/Element/Object3D.vue';\nimport Mesh from '@/webgl/Element/Mesh.vue';\nimport Points from '@/webgl/Element/Points.vue';\nimport PointLight from '@/webgl/Element/PointLight.vue';\n\nimport SphereBufferGeometry from '@/webgl/Geo/SphereBufferGeometry.vue';\n\n\nexport default {\n  //materials\n  MeshPhongMaterial,\n  ShaderMaterial,\n  \n  //system\n  Renderer,\n  Scene,\n  PerspectiveCamera,\n  Raycaster,\n  \n  //Elemnts\n  PointLight,\n  Points,\n  Object3D,\n  Mesh,\n  \n  //Geo\n  SphereBufferGeometry\n}\n"},{"path":"@/webgl/System/Renderer.vue","src":"<template>\n  <div class=\"full pos-rel\">\n    <div class=\"full layer\" ref=\"mounter\"></div>\n    <div class=\"full layer\" ref=\"toucher\"><slot></slot></div>\n  </div>\n</template>\n\n<script>\nvar THREE = window.THREE\n\nexport default {\n  data () {\n    return {\n      // THREE,\n      renderer: false\n    }\n  },\n  props: {\n    size: { default () { return { width: 500, height: 500 } } },\n    alpha: { default: true },\n    antialias: { default: true }\n  },\n  mounted () {\n    this.renderer = new THREE.WebGLRenderer({\n      alpha: this.alpha,\n      antialias: this.antialias\n    })\n    this.resize()\n    this.renderer.domElement.style.marginBottom = '-6px'\n    this.$refs.mounter.appendChild(this.renderer.domElement)\n    \n    this.$emit('toucher', this.$refs['toucher'])\n    this.$emit('renderer', this.renderer)\n  },\n  beforeDestroy () {\n    this.$refs.mounter.removeChild(this.renderer.domElement)\n  },\n  watch: {\n    size () {\n      this.resize()\n    }\n  },\n  methods: {\n    resize () {\n      let ratio = window.devicePixelRatio || 1\n      this.renderer.setPixelRatio(ratio)\n      this.renderer.setSize(this.size.width, this.size.height)\n    }\n  }\n}\n</script>\n\n<style scoped>\n.full{\n  width: 100%;\n  height: 100%;\n}\n.pos-rel{\n  position: relative;\n}\n.layer{\n  position: absolute;\n  top: 0px;\n  left: 0px;\n}\n</style>\n"},{"path":"@/webgl/System/Scene.vue","src":"<template>\n  <div ref=\"mounter\" class=\"mounter\"><slot></slot></div>\n</template>\n\n<script>\nvar THREE = window.THREE\nexport default {\n  data () {\n    return {\n      scene: false\n    }\n  },\n  props: {\n    size: { default () { return { width: 500, height: 500 } } },\n    alpha: { default: true },\n    antialias: { default: true }\n  },\n  created () {\n    this.scene = new THREE.Scene()\n    this.$on('add', (v) => {\n      this.scene.add(v)\n    })\n    this.$on('remove', (v) => {\n      this.scene.remove(v)\n    })\n  },\n  mounted () {\n    this.$emit('scene', this.scene)\n  }\n}\n</script>\n\n<style scoped>\n.mounter {\n  display: none;\n}\n</style>\n"},{"path":"@/webgl/System/PerspectiveCamera.vue","src":"<script>\nvar THREE = window.THREE;\nexport default {\n  abstract: true,\n  render () {\n    return null\n  },\n  props: ['fov', 'aspect', 'near', 'far', 'position'],\n  data () {\n    return {\n      camera: null\n    }\n  },\n  created () {\n    this.camera = new THREE.PerspectiveCamera(this.fov, this.aspect, this.near, this.far)\n\n    if (this.position) {\n      this.camera.position.x = this.position.x\n      this.camera.position.y = this.position.y\n      this.camera.position.z = this.position.z\n    }\n    this.$emit('camera', this.camera)\n  },\n  watch: {\n    position () {\n      if (this.position) {\n        this.camera.position.x = this.position.x\n        this.camera.position.y = this.position.y\n        this.camera.position.z = this.position.z\n      }\n    },\n    aspect () {\n      if (this.camera) {\n        this.camera.aspect = this.aspect\n        this.camera.updateProjectionMatrix()\n      }\n    }\n  }\n}\n</script>\n\n<style scoped>\n.perspective-camera{\n  display: none;\n}\n</style>\n"},{"path":"@/webgl/System/Raycaster.vue","src":"<template>\n<div></div>\n</template>\n\n<script>\n\nexport default {\n  data () {\n    return {\n      rAFID: 0,\n      mouse: null,\n      raycast () {},\n      clean () {},\n      intersects: []\n    }\n  },\n  props: {\n    scene: {},\n    camera: {},\n    toucher: {}\n  },\n  created () {\n  },\n  activated () {\n    var raycaster = new THREE.Raycaster();\n    this.mouse = new THREE.Vector2();\n    \n    this.toucher.addEventListener('mousemove', this.handleMV, false);\n    this.toucher.addEventListener('click', this.handleClick, false);\n    this.clean = () => {\n      this.toucher.removeEventListener('click', this.handleClick, false);\n      this.toucher.removeEventListener('mousemove', this.handleMV);\n    }\n    \n    var raycast = () => {\n      var mouse = this.mouse;\n      var scene = this.scene;\n      var camera = this.camera;\n      \n      var restore = [];\n      this.scene.traverse((ele) => {\n        if (ele.$skipRayCast) {\n          restore.push({\n            parent: ele.parent,\n            ele: ele\n          })\n          ele.parent.remove(ele);\n        }\n      })\n      \n      \n    \t// update the picking ray with the camera and mouse position\n    \traycaster.setFromCamera( mouse, camera );\n    \t// calculate objects intersecting the picking ray\n    \tvar intersects = raycaster.intersectObjects( scene.children, true );\n    \t\n    \trestore.forEach((item) => {\n        item.parent.add(item.ele);\n      })\n    \t\n    \treturn intersects\n  \t};\n    this.raycast = raycast; \n    \n    var rAF = () => {\n      this.rAFID = window.requestAnimationFrame(rAF);\n      // this.raycast();\n    }\n    this.rAFID = window.requestAnimationFrame(rAF);\n  },\n  deactivated () {\n    window.cancelAnimationFrame(this.rAFID);\n    this.clean();\n  },\n  methods: {\n    handleClick (event) {\n      this.$emit('click', {\n        event,\n        intersects: this.raycast()\n      })\n    },\n    handleMV (event) {\n      this.mouse.x = (event.clientX / window.innerWidth) * 2 - 1;\n\t    this.mouse.y = - (event.clientY / window.innerHeight) * 2 + 1;\n    }\n    \n  }\n}\n</script>\n\n<style>\n\n</style>\n"},{"path":"@/webgl/Material/MeshPhongMaterial.vue","src":"<template>\n<div class=\"mesh-phong-material\"></div>\n</template>\n\n<script>\nvar THREE = window.THREE;\n\nexport default {\n  props: {\n    color: {\n      default () {\n        return Math.random() * 0xffffff\n      }\n    }\n  },\n  data () {\n    return {\n      material: false\n    }\n  },\n  created () {\n    this.material = new THREE.MeshPhongMaterial({\n      color: new THREE.Color(this.color),\n      specular: new THREE.Color(0x111111),\n      shininess: 50\n    })\n    this.$parent.$emit('material', this.material)\n  }\n}\n</script>\n\n<style>\n\n</style>\n"},{"path":"@/webgl/Material/ShaderMaterial.vue","src":"<template>\n<div class=\"mesh-basic-material\"></div>\n</template>\n\n<script>\nvar THREE = window.THREE;\n\nexport default {\n  data () {\n    return {\n      material: false\n    }\n  },\n  props: {\n    vs: {\n      default:\n`void main ( void ) {\n  vec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\n  vec4 outputPos = projectionMatrix * mvPosition;\n  gl_Position = outputPos;\n}`\n    },\n    fs: {\n      default:\n`void main () {\n  gl_FragColor = vec4(vec3(0.5), 1.0);\n}`\n    },\n    uniforms: {\n      default () {\n        return {}\n      }\n    }\n  },\n  watch: {\n    vs () { this.initShader() },\n    fs () { this.initShader() },\n    uniforms () { this.initShader() }\n  },\n  mounted () {\n    this.initShader()\n  },\n  methods: {\n    initShader () {\n      try {\n        this.material = new THREE.ShaderMaterial({\n          uniforms: {\n            ...this.uniforms// ,\n            // ...THREE.UniformsUtils.merge([\n            //   THREE.UniformsLib.common,\n            //   THREE.UniformsLib.aomap,\n            //   THREE.UniformsLib.lightmap,\n            //   THREE.UniformsLib.emissivemap,\n            //   THREE.UniformsLib.bumpmap,\n            //   THREE.UniformsLib.normalmap,\n            //   THREE.UniformsLib.displacementmap,\n            //   THREE.UniformsLib.fog,\n            //   THREE.UniformsLib.lights,\n            //   THREE.UniformsLib.shadowmap,\n            //   {\n            //     flipEnvMap: {\n            //       value: 1\n            //     },\n            //     emissive: {\n            //       value: new THREE.Color(0x000000)\n            //     },\n            //     specular: {\n            //       value: new THREE.Color(0x111111)\n            //     },\n            //     shininess: {\n            //       value: 30\n            //     },\n            //     envMap: {\n            //       // value: cubeCamera.renderTarget\n            //     }\n            //   }\n            // ])\n          },\n          vertexShader: this.vs || this.$options.props.vs.default,\n          fragmentShader: this.fs || this.$options.props.fs.default\n        })\n        this.$parent.$emit('material', this.material)\n      } catch (e) {\n        console.log(e)\n      }\n    }\n  }\n}\n</script>\n\n<style>\n\n</style>\n"},{"path":"@/webgl/Element/PointLight.vue","src":"<template>\n  <div class=\"light-point\"></div>\n</template>\n\n<script>\nvar THREE = window.THREE;\n\nexport default {\n  props: {\n    color: {\n      default () {\n        return 0xffffff\n      }\n    }\n  },\n  data () {\n    return {\n      light: false\n    }\n  },\n  mounted () {\n    this.light = new THREE.PointLight({ color: new THREE.Color(this.color) })\n    this.$emit('element', this.light)\n    this.$parent.$emit('add', this.light)\n  },\n  beforeDestroy () {\n    this.$parent.$emit('remove', this.light)\n  }\n}\n</script>\n\n<style>\n\n</style>\n"},{"path":"@/webgl/Element/Object3D.vue","src":"<template>\n<div class=\"object-3d\"><slot></slot></div>\n</template>\n\n<script>\nvar THREE = window.THREE;\nexport default {\n  data () {\n    return {\n      object3d: false\n    }\n  },\n  props: {\n    visible: { default: true },\n    px: { default: 0 },\n    py: { default: 0 },\n    pz: { default: 0 },\n\n    sx: { default: 1 },\n    sy: { default: 1 },\n    sz: { default: 1 },\n\n    rx: { default: 0 },\n    ry: { default: 0 },\n    rz: { default: 0 }\n  },\n  watch: {\n    visible () { this.object3d.setVisible(this.visible) },\n    px () { this.updatePosition('x', this.px) },\n    py () { this.updatePosition('y', this.py) },\n    pz () { this.updatePosition('z', this.pz) },\n\n    sx () { this.updateScale('x', this.sx) },\n    sy () { this.updateScale('y', this.sy) },\n    sz () { this.updateScale('z', this.sz) },\n\n    rx () { this.updateRotation('x', this.rx) },\n    ry () { this.updateRotation('y', this.ry) },\n    rz () { this.updateRotation('z', this.rz) }\n  },\n  created () {\n    this.object3d = new THREE.Object3D()\n    this.$emit('element', this.object3d)\n    this.object3d.visible = true\n    this.updatePosition()\n    this.updateScale()\n    this.updateRotation()\n    this.$on('add', (v) => {\n      this.object3d.add(v)\n    })\n    this.$on('remove', (v) => {\n      this.object3d.remove(v)\n    })\n  },\n  mounted () {\n    this.$parent.$emit('add', this.object3d)\n  },\n  beforeDestroy () {\n    this.$parent.$emit('remove', this.object3d)\n  },\n  methods: {\n    updatePosition (key, val) {\n      if (key) {\n        this.object3d.position[key] = val\n      } else {\n        this.object3d.position.set(this.px, this.py, this.pz)\n      }\n    },\n    updateScale (key, val) {\n      if (key) {\n        this.object3d.scale[key] = val\n      } else {\n        this.object3d.scale.set(this.sx, this.sy, this.sz)\n      }\n    },\n    updateRotation (key, val) {\n      if (key) {\n        this.object3d.rotation[key] = val\n      } else {\n        this.object3d.rotation.set(this.rx, this.ry, this.rz)\n      }\n    }\n  }\n}\n</script>\n\n<style>\n\n</style>\n"},{"path":"@/webgl/Element/Points.vue","src":"<template>\n  <div class=\"points\">\n    <slot>\n    </slot>\n  </div>\n</template>\n\n<script>\nimport THREE from '@/three.js'\n\nexport default {\n  props: {\n    position: {}\n  },\n  data () {\n    return {\n      element: false,\n      points: false,\n      material: false,\n      geometry: false\n    }\n  },\n  created () {\n    this.element = this.points = new THREE.Points()\n    this.$parent.$emit('add', this.points)\n    this.$emit('element', this.points)\n    this.$on('material', (v) => {\n      this.material = v\n      this.tryUpdateMaterial()\n    })\n    this.$on('geometry', (v) => {\n      this.geometry = v\n      this.tryUpdateGeometry()\n    })\n  },\n  beforeDestroy () {\n    this.uninstall()\n  },\n  methods: {\n    tryUpdateGeometry (v) {\n      if (this.points) {\n        this.points.geometry = this.geometry\n      }\n    },\n    tryUpdateMaterial (v) {\n      if (this.points) {\n        this.points.material = this.material\n      }\n    },\n    uninstall () {\n      this.$parent.$emit('remove', this.points)\n    }\n  }\n}\n</script>\n\n<style>\n\n</style>\n"},{"path":"@/webgl/Element/Mesh.vue","src":"<template>\n  <div class=\"mesh\">\n    <slot>\n    </slot>\n  </div>\n</template>\n\n<script>\nvar THREE = window.THREE;\nexport default {\n  props: {\n  },\n  data () {\n    return {\n      element: false,\n      mesh: false,\n      material: false,\n      geometry: false\n    }\n  },\n  created () {\n    this.element = this.mesh = new THREE.Mesh()\n    this.$parent.$emit('add', this.mesh)\n    this.$emit('element', this.mesh)\n\n    this.$on('material', (v) => {\n      this.material = v\n      this.tryUpdateMaterial()\n    })\n    this.$on('geometry', (v) => {\n      this.geometry = v\n      this.tryUpdateGeometry()\n    })\n  },\n  beforeDestroy () {\n    this.uninstall()\n  },\n  methods: {\n    tryUpdateGeometry (v) {\n      if (this.mesh) {\n        this.mesh.geometry = this.geometry\n      }\n    },\n    tryUpdateMaterial (v) {\n      if (this.mesh) {\n        this.mesh.material = this.material\n      }\n    },\n    uninstall () {\n      this.$parent.$emit('remove', this.mesh)\n    }\n  }\n}\n</script>\n\n<style>\n\n</style>\n"},{"path":"@/webgl/Geo/SphereBufferGeometry.vue","src":"<template>\n  <div class=\"geo-sphere\"></div>\n</template>\n\n<script>\nvar THREE = window.THREE\nexport default {\n  data () {\n    return {\n      geometry: false\n    }\n  },\n  mounted () {\n    let geometry = new THREE.SphereBufferGeometry(2, 256, 256)\n    this.$parent.$emit('geometry', geometry)\n  }\n}\n</script>\n\n<style>\n\n</style>\n"},{"path":"@/shader/Simple/vs.vert","src":"varying vec3 vPos;\nuniform float time;\n\nvoid main (void) {\n  vPos = position;\n  vPos.x = vPos.x + sin(vPos.x + time);\n  vPos.y = vPos.y + cos(vPos.y + time);\n  vPos.z = vPos.z + tan(vPos.z + time);\n  \n  vec4 mvPosition = modelViewMatrix * vec4(position, 1.0);\n  vec4 outputPos = projectionMatrix * mvPosition;\n  gl_Position = outputPos;\n}"},{"path":"@/shader/Simple/fs.frag","src":"varying vec3 vPos;\n\nvoid main () {\n  gl_FragColor = vec4(vec3(vPos), 1.0);\n}"},{"path":"@/shader/Fling/vs.vert","src":"varying vec3 vPos;\nuniform float time;\n\nvoid main (void) {\n  vPos = position;\n  vPos.x = vPos.x + sin(vPos.x + time);\n  vPos.y = vPos.y + cos(vPos.y + time);\n  vPos.z = vPos.z + tan(vPos.z + time);\n  \n  vec4 mvPosition = modelViewMatrix * vec4(vPos, 1.0);\n  vec4 outputPos = projectionMatrix * mvPosition;\n  gl_Position = outputPos;\n}"},{"path":"@/three.js","src":"var THREE = window.THREE\nexport default THREE\n"}],"date":"Thu Feb 15 2018 16:38:52 GMT+0800 (HKT)"},{"currentFilePath":"@/index.html","openedFiles":[{"path":"@/index.html"}],"files":[{"path":"@/index.html","src":"<!DOCTYPE html>\n<html>\n  <head>\n    <meta charset=\"UTF-8\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge,chrome=1\">\n    <meta name=\"viewport\" content=\"width=device-width,initial-scale=1\">\n\n    <title>WebGL</title>\n\n    <meta name=\"author\" content=\"loklok\">\n    <meta name=\"description\" content=\"WebGL Art\">\n    <meta name=\"keywords\" content=\"WebGL, Art\">\n\n    <style type=\"text/css\">\n    </style>\n\n  </head>\n  <body>\n    <div id=\"app-attach-point\"></div>\n    \n    \n    \n    <script required src=\"https://cdnjs.cloudflare.com/ajax/libs/vue/2.5.2/vue.min.js\"></script>\n    <script required src=\"https://cdnjs.cloudflare.com/ajax/libs/vue-router/3.0.1/vue-router.min.js\"></script>\n    <script required src=\"https://cdnjs.cloudflare.com/ajax/libs/tween.js/16.3.5/Tween.min.js\"></script>\n    <script required src=\"https://cdnjs.cloudflare.com/ajax/libs/three.js/88/three.min.js\" integrity=\"sha256-6fhm481uY9c152qGWIVgE7KbzaCj5WjCi3BGIpZef2E=\" crossorigin=\"anonymous\"></script>\n    <script required src=\"https://threejs.org/examples/js/GPUComputationRenderer.js\"></script>\n  </body>\n</html>\n"},{"path":"@/style.css","src":"html, body {\n  width: 100%;\n  height: 100%;\n  margin: 0px;\n  padding: 0px;\n}\nhtml, body, #app {\n  box-sizing: border-box;\n  width: 100%;\n  height: 100%;\n  overflow: hidden;\n}\n.full{\n  width: 100%;\n  height: 100%;\n}"},{"path":"@/main.js","src":"import '@/style.css'\nimport App from '@/app.vue'\nimport router from '@/router.js'\n\nvar oldDOM = document.querySelector('#app-attach-point');\nvar newDOM = document.createElement('div');\nnewDOM.id = '#app-attach-point';\ndocument.body.appendChild(newDOM);\nvar target = oldDOM || newDOM;\n\nvar app = new Vue({\n  router,\n  el: target,\n  components: {\n    App\n  },\n  template: '<div id=\"app\"><App /></div>'\n})\n\nwindow.addEventListener('message', (evt) => {\n  var { type, data } = evt.data;\n  window.dispatchEvent(new CustomEvent(type, { detail: data }))\n}, false);\n\nwindow.addEventListener('slider', ({ detail }) => {\n  console.log(detail);\n  (window.opener || window.top).dispatchEvent(new CustomEvent('loklok', { detail: { rand: Math.random() } }))\n});\n\nexport default app;\n"},{"path":"@/router.js","src":"import Player from '@/webgl/layout/Player.vue'\nimport Home from '@/webgl/pages/Home.vue'\nimport Happy from '@/webgl/pages/Happy.vue'\n\nconst router = new VueRouter({\n  mode: 'hash',\n  routes: [\n    {\n      path: '/',\n      component: Player,\n      children: [\n        {\n          path: '',\n          component: Home\n        },\n        {\n          path: 'happy',\n          component: Happy\n        }\n      ]\n    }\n  ]\n})\n\nexport default router\n"},{"path":"@/app.vue","src":"<template>\n  <div>\n    <router-view></router-view>\n  </div>\n</template>\n\n<script>\nimport THREE from '@/three.js'\n\nexport default {\n  data () {\n    return {\n      \n    }\n  },\n  created () {\n    \n  },\n  beforeDestroy () {\n    \n  },\n  methods: {\n    \n  }\n}\n</script>\n\n<style>\n\n</style>\n"},{"path":"@/webgl/layout/Player.vue","src":"<template>\n  <div class=\"full\" ref=\"full\">\n\n    <Renderer\n      ref=\"renderer\"\n      :size=\"size\"\n      @renderer=\"(v) => { renderer = v }\"\n      @toucher=\"(v) => { toucher = v }\"\n    >\n    </Renderer>\n    \n    <keep-alive>\n      <component\n        class=\"hidden\"\n        :is=\"'router-view'\"\n        v-if=\"renderer\"\n        :size=\"size\"\n        :toucher=\"toucher\"\n        :renderer=\"renderer\"\n      >\n      </component>\n    </keep-alive>\n\n  </div>\n</template>\n\n<script>\nimport Bundle from '@/webgl/Bundle.js';\n\nexport default {\n  components: {\n    ...Bundle\n  },\n  computed: {\n  },\n  methods: {\n    \n  },\n  data () {\n    return {\n      toucher: false,\n      resizer: () => {},\n      renderer: false,\n      size: {\n        width: 100,\n        height: 100,\n        aspect: 1\n      }\n    }\n  },\n  created () {\n    \n  },\n  mounted () {\n    var resizer = this.resizer = () => {\n      this.$nextTick(() => {\n        var rect = this.$refs.full.getBoundingClientRect()\n        this.size = {\n          width: rect.width,\n          height: rect.height,\n          aspect: rect.width / rect.height\n        }\n      })\n    }\n    window.addEventListener('resize', resizer.bind(this))\n    resizer()\n  }\n}\n</script>\n\n<style scoped>\n.hidden{\n  display: none;\n}\n.full{\n  width: 100%;\n  height: 100%;\n}\n</style>\n"},{"path":"@/webgl/pages/Home.vue","src":"<template>\n  <div class=\"\">\n    <PerspectiveCamera\n      :fov=\"75\"\n      :aspect=\"size.aspect\"\n      :near=\"1\"\n      :far=\"1000\"\n      :position=\"{ x: 0, y: 0, z: 15 }\"\n      @camera=\"(v) => { camera = v; }\"\n    />\n    \n    <Scene @scene=\"(v) => { scene = v }\">\n      <Object3D pz=\"10\">\n        <PointLight />\n      </Object3D>\n      \n      <Object3D pz=\"0\">\n        <Mesh>\n          <SphereBufferGeometry />\n          <ShaderMaterial :vs=\"simpleVS\" :fs=\"simpleFS\" :uniforms=\"animatable\" />\n        </Mesh>\n      </Object3D>\n    </Scene>\n    \n    <Raycaster v-if=\"camera && toucher && scene\" :scene=\"scene\" :toucher=\"toucher\" :camera=\"camera\" @found=\"(v) => { found = v; }\" @click=\"onClick\">\n    </Raycaster>\n    \n  </div>\n</template>\n\n<script>\nimport Bundle from '@/webgl/Bundle.js';\n\nimport simpleVS from '@/shader/Simple/vs.vert'\nimport simpleFS from '@/shader/Simple/fs.frag'\n\nexport default {\n  name: 'Home',\n  props: {\n    toucher: {},\n    size: {},\n    renderer: {},\n    doc: {}\n  },\n  components: {\n    ...Bundle\n  },\n  computed: {\n  },\n  data () {\n    return {\n      cam: {\n        pos: { x: 3, y: 5, z: 10 }\n      },\n      ready: false,\n      cubeCamera: false,\n      visible: true,\n      resizer: () => {},\n      scene: false,\n      camera: false,\n      \n      found: [],\n      \n      animatable: {\n        time: { value: 0 }\n      },\n      simpleVS,\n      simpleFS\n      \n    }\n  },\n  methods: {\n    onClick ({ event, intersects }) {\n      this.$router.push({\n        path: '/happy'\n      })\n      this.$forceUpdate()\n      console.log('Click to happy');\n    },\n    setup () {\n    },\n    renderWebGL () {\n      TWEEN.update()\n      \n      this.animatable.time.value += 0.01;\n      \n      if (this.scene && this.camera && this.renderer) {\n        this.renderer.render(this.scene, this.camera)\n      }\n    }\n  },\n  watch: {\n    camera () {\n      if (this.camera && this.renderer) {\n        this.ready = true\n      }\n    },\n    renderer () {\n      if (this.camera && this.renderer) {\n        this.ready = true\n      }\n    },\n    ready () {\n      if (this.ready) {\n        this.setup()\n      }\n    }\n  },\n  created () {\n    \n  },\n  activated () {\n    var self = this\n    function loop (rAFT) {\n      self.rAFID = window.requestAnimationFrame(loop)\n      self.renderWebGL(rAFT)\n    }\n    self.rAFID = window.requestAnimationFrame(loop)\n  },\n  deactivated () {\n    window.cancelAnimationFrame(this.rAFID)\n  }\n}\n</script>\n\n<style scoped>\n.full{\n  width: 100%;\n  height: 100%;\n}\n</style>\n"},{"path":"@/webgl/pages/Happy.vue","src":"<template>\n  <div class=\"\">\n\n    <PerspectiveCamera\n      :fov=\"75\"\n      :aspect=\"size.aspect\"\n      :near=\"1\"\n      :far=\"1000\"\n      :position=\"{ x: 0, y: 0, z: 15 }\"\n      @camera=\"(v) => { camera = v; }\"\n    />\n    \n    <Scene @scene=\"(v) => { scene = v }\">\n      <Object3D pz=\"10\">\n        <PointLight />\n      </Object3D>\n      \n      <Object3D pz=\"0\">\n        <Points @element=\"(v) => { v.$skipRayCast = true }\">\n          <SphereBufferGeometry />\n          <ShaderMaterial :vs=\"simpleVS2\" :fs=\"simpleFS\" :uniforms=\"animatable\" />\n        </Points>\n      </Object3D>\n      \n      <Object3D pz=\"1\">\n        <Mesh>\n          <SphereBufferGeometry />\n          <ShaderMaterial :vs=\"simpleVS\" :fs=\"simpleFS\" :uniforms=\"animatable\" />\n        </Mesh>\n      </Object3D>\n    </Scene>\n    \n    <Raycaster v-if=\"renderer && camera && toucher && scene\" :scene=\"scene\" :toucher=\"toucher\" :camera=\"camera\" @found=\"(v) => { found = v; }\" @click=\"onClick\">\n    </Raycaster>\n\n  </div>\n</template>\n\n<script>\nimport Bundle from '@/webgl/Bundle.js';\n\nimport simpleVS2 from '@/shader/Fling/vs.vert'\nimport simpleVS from '@/shader/Simple/vs.vert'\nimport simpleFS from '@/shader/Simple/fs.frag'\n\nexport default {\n  name: 'Happy',\n  props: {\n    toucher: {},\n    size: {},\n    renderer: {},\n    doc: {}\n  },\n  components: {\n    ...Bundle\n  },\n  computed: {\n  },\n  data () {\n    return {\n      cam: {\n        pos: { x: 3, y: 5, z: 10 }\n      },\n      ready: false,\n      cubeCamera: false,\n      visible: true,\n      resizer: () => {},\n      scene: false,\n      camera: false,\n      \n      found: [],\n      \n      animatable: {\n        time: { value: 0 }\n      },\n      simpleVS,\n      simpleFS,\n      simpleVS2\n      \n    }\n  },\n  methods: {\n    onClick ({ event, intersects }) {\n      console.log(event, intersects)\n      this.$router.push('/')\n    },\n    setup () {\n    },\n    renderWebGL () {\n      TWEEN.update()\n      \n      this.animatable.time.value += 0.01;\n      \n      if (this.scene && this.camera && this.renderer) {\n        this.renderer.render(this.scene, this.camera)\n      }\n    }\n  },\n  watch: {\n    camera () {\n      if (this.camera && this.renderer) {\n        this.ready = true\n      }\n    },\n    renderer () {\n      if (this.camera && this.renderer) {\n        this.ready = true\n      }\n    },\n    ready () {\n      if (this.ready) {\n        this.setup()\n      }\n    }\n  },\n  created () {\n    \n  },\n  activated () {\n    var self = this\n    function loop (rAFT) {\n      self.rAFID = window.requestAnimationFrame(loop)\n      self.renderWebGL(rAFT)\n    }\n    self.rAFID = window.requestAnimationFrame(loop)\n  },\n  deactivated () {\n    window.cancelAnimationFrame(this.rAFID);\n    console.log('cancel animation frame')\n  }\n}\n</script>\n\n<style scoped>\n.full{\n  width: 100%;\n  height: 100%;\n}\n</style>\n"},{"path":"@/webgl/sample.vue","src":"<template>\n  <div class=\"full\">\n\n    <Renderer\n      ref=\"renderer\"\n      :size=\"size\"\n      @renderer=\"(v) => { renderer = v }\"\n    >\n    </Renderer>\n\n    <PerspectiveCamera\n      :fov=\"75\"\n      :aspect=\"size.aspect\"\n      :near=\"1\"\n      :far=\"1000\"\n      :position=\"{ x: 0, y: 0, z: 10 }\"\n      @camera=\"(v) => { camera = v; }\"\n    />\n\n    <Scene @scene=\"(v) => { scene = v }\">\n      <Object3D pz=\"10\">\n        <PointLight />\n      </Object3D>\n      \n      <Object3D pz=\"0\">\n        <Points>\n          <SphereBufferGeometry />\n          <ShaderMaterial :vs=\"simpleVS\" :fs=\"simpleFS\" :uniforms=\"animatable\" />\n        </Points>\n      </Object3D>\n      \n    </Scene>\n\n  </div>\n</template>\n\n<script>\nimport Bundle from '@/webgl/Bundle.js';\nimport simpleVS from '@/shader/Simple/vs.vert'\nimport simpleFS from '@/shader/Simple/fs.frag'\n\nexport default {\n  components: {\n    ...Bundle\n  },\n  computed: {\n  },\n  methods: {\n    renderWebGL () {\n      this.animatable.time.value = window.performance.now() * 0.001;\n      \n      if (this.scene && this.camera && this.renderer) {\n        this.renderer.render(this.scene, this.camera)\n      }\n    }\n  },\n  data () {\n    return {\n      animatable: {\n        time: { value: 0 }\n      },\n      simpleVS,\n      simpleFS,\n      size: {\n        width: window.innerWidth,\n        height: window.innerHeight,\n        aspect: window.innerWidth / window.innerHeight\n      },\n      renderer: false,\n      scene: false,\n      camera: false\n    }\n  },\n  created () {\n    \n  },\n  mounted () {\n    var self = this\n    function loop () {\n      self.rAFID = window.requestAnimationFrame(loop)\n      self.renderWebGL()\n    }\n    self.rAFID = window.requestAnimationFrame(loop)\n  }\n}\n</script>\n\n<style scoped>\n.full{\n  width: 100%;\n  height: 100%;\n}\n</style>\n"},{"path":"@/webgl/Bundle.js","src":"import Renderer from '@/webgl/System/Renderer.vue';\nimport Scene from '@/webgl/System/Scene.vue';\nimport PerspectiveCamera from '@/webgl/System/PerspectiveCamera.vue';\nimport Raycaster from '@/webgl/System/Raycaster.vue';\n\nimport MeshPhongMaterial from '@/webgl/Material/MeshPhongMaterial.vue';\nimport ShaderMaterial from '@/webgl/Material/ShaderMaterial.vue';\n\nimport Object3D from '@/webgl/Element/Object3D.vue';\nimport Mesh from '@/webgl/Element/Mesh.vue';\nimport Points from '@/webgl/Element/Points.vue';\nimport PointLight from '@/webgl/Element/PointLight.vue';\n\nimport SphereBufferGeometry from '@/webgl/Geo/SphereBufferGeometry.vue';\n\n\nexport default {\n  //materials\n  MeshPhongMaterial,\n  ShaderMaterial,\n  \n  //system\n  Renderer,\n  Scene,\n  PerspectiveCamera,\n  Raycaster,\n  \n  //Elemnts\n  PointLight,\n  Points,\n  Object3D,\n  Mesh,\n  \n  //Geo\n  SphereBufferGeometry\n}\n"},{"path":"@/webgl/System/Renderer.vue","src":"<template>\n  <div class=\"full pos-rel\">\n    <div class=\"full layer\" ref=\"mounter\"></div>\n    <div class=\"full layer\" ref=\"toucher\"><slot></slot></div>\n  </div>\n</template>\n\n<script>\nvar THREE = window.THREE\n\nexport default {\n  data () {\n    return {\n      // THREE,\n      renderer: false\n    }\n  },\n  props: {\n    size: { default () { return { width: 500, height: 500 } } },\n    alpha: { default: true },\n    antialias: { default: true }\n  },\n  mounted () {\n    this.renderer = new THREE.WebGLRenderer({\n      alpha: this.alpha,\n      antialias: this.antialias\n    })\n    this.resize()\n    this.renderer.domElement.style.marginBottom = '-6px'\n    this.$refs.mounter.appendChild(this.renderer.domElement)\n    \n    this.$emit('toucher', this.$refs['toucher'])\n    this.$emit('renderer', this.renderer)\n  },\n  beforeDestroy () {\n    this.$refs.mounter.removeChild(this.renderer.domElement)\n  },\n  watch: {\n    size () {\n      this.resize()\n    }\n  },\n  methods: {\n    resize () {\n      let ratio = window.devicePixelRatio || 1\n      this.renderer.setPixelRatio(ratio)\n      this.renderer.setSize(this.size.width, this.size.height)\n    }\n  }\n}\n</script>\n\n<style scoped>\n.full{\n  width: 100%;\n  height: 100%;\n}\n.pos-rel{\n  position: relative;\n}\n.layer{\n  position: absolute;\n  top: 0px;\n  left: 0px;\n}\n</style>\n"},{"path":"@/webgl/System/Scene.vue","src":"<template>\n  <div ref=\"mounter\" class=\"mounter\"><slot></slot></div>\n</template>\n\n<script>\nvar THREE = window.THREE\nexport default {\n  data () {\n    return {\n      scene: false\n    }\n  },\n  props: {\n    size: { default () { return { width: 500, height: 500 } } },\n    alpha: { default: true },\n    antialias: { default: true }\n  },\n  created () {\n    this.scene = new THREE.Scene()\n    this.$on('add', (v) => {\n      this.scene.add(v)\n    })\n    this.$on('remove', (v) => {\n      this.scene.remove(v)\n    })\n  },\n  mounted () {\n    this.$emit('scene', this.scene)\n  }\n}\n</script>\n\n<style scoped>\n.mounter {\n  display: none;\n}\n</style>\n"},{"path":"@/webgl/System/PerspectiveCamera.vue","src":"<script>\nvar THREE = window.THREE;\nexport default {\n  abstract: true,\n  render () {\n    return null\n  },\n  props: ['fov', 'aspect', 'near', 'far', 'position'],\n  data () {\n    return {\n      camera: null\n    }\n  },\n  created () {\n    this.camera = new THREE.PerspectiveCamera(this.fov, this.aspect, this.near, this.far)\n\n    if (this.position) {\n      this.camera.position.x = this.position.x\n      this.camera.position.y = this.position.y\n      this.camera.position.z = this.position.z\n    }\n    this.$emit('camera', this.camera)\n  },\n  watch: {\n    position () {\n      if (this.position) {\n        this.camera.position.x = this.position.x\n        this.camera.position.y = this.position.y\n        this.camera.position.z = this.position.z\n      }\n    },\n    aspect () {\n      if (this.camera) {\n        this.camera.aspect = this.aspect\n        this.camera.updateProjectionMatrix()\n      }\n    }\n  }\n}\n</script>\n\n<style scoped>\n.perspective-camera{\n  display: none;\n}\n</style>\n"},{"path":"@/webgl/System/Raycaster.vue","src":"<template>\n<div></div>\n</template>\n\n<script>\n\nexport default {\n  data () {\n    return {\n      rAFID: 0,\n      mouse: null,\n      raycast () {},\n      clean () {},\n      intersects: []\n    }\n  },\n  props: {\n    scene: {},\n    camera: {},\n    toucher: {}\n  },\n  created () {\n  },\n  activated () {\n    var raycaster = new THREE.Raycaster();\n    this.mouse = new THREE.Vector2();\n    \n    this.toucher.addEventListener('mousemove', this.handleMV, false);\n    this.toucher.addEventListener('click', this.handleClick, false);\n    this.clean = () => {\n      this.toucher.removeEventListener('click', this.handleClick, false);\n      this.toucher.removeEventListener('mousemove', this.handleMV);\n    }\n    \n    var raycast = () => {\n      var mouse = this.mouse;\n      var scene = this.scene;\n      var camera = this.camera;\n      \n      var restore = [];\n      this.scene.traverse((ele) => {\n        if (ele.$skipRayCast) {\n          restore.push({\n            parent: ele.parent,\n            ele: ele\n          })\n          ele.parent.remove(ele);\n        }\n      })\n      \n      \n    \t// update the picking ray with the camera and mouse position\n    \traycaster.setFromCamera( mouse, camera );\n    \t// calculate objects intersecting the picking ray\n    \tvar intersects = raycaster.intersectObjects( scene.children, true );\n    \t\n    \trestore.forEach((item) => {\n        item.parent.add(item.ele);\n      })\n    \t\n    \treturn intersects\n  \t};\n    this.raycast = raycast; \n    \n    var rAF = () => {\n      this.rAFID = window.requestAnimationFrame(rAF);\n      // this.raycast();\n    }\n    this.rAFID = window.requestAnimationFrame(rAF);\n  },\n  deactivated () {\n    window.cancelAnimationFrame(this.rAFID);\n    this.clean();\n  },\n  methods: {\n    handleClick (event) {\n      this.$emit('click', {\n        event,\n        intersects: this.raycast()\n      })\n    },\n    handleMV (event) {\n      this.mouse.x = (event.clientX / window.innerWidth) * 2 - 1;\n\t    this.mouse.y = - (event.clientY / window.innerHeight) * 2 + 1;\n    }\n    \n  }\n}\n</script>\n\n<style>\n\n</style>\n"},{"path":"@/webgl/Material/MeshPhongMaterial.vue","src":"<template>\n<div class=\"mesh-phong-material\"></div>\n</template>\n\n<script>\nvar THREE = window.THREE;\n\nexport default {\n  props: {\n    color: {\n      default () {\n        return Math.random() * 0xffffff\n      }\n    }\n  },\n  data () {\n    return {\n      material: false\n    }\n  },\n  created () {\n    this.material = new THREE.MeshPhongMaterial({\n      color: new THREE.Color(this.color),\n      specular: new THREE.Color(0x111111),\n      shininess: 50\n    })\n    this.$parent.$emit('material', this.material)\n  }\n}\n</script>\n\n<style>\n\n</style>\n"},{"path":"@/webgl/Material/ShaderMaterial.vue","src":"<template>\n<div class=\"mesh-basic-material\"></div>\n</template>\n\n<script>\nvar THREE = window.THREE;\n\nexport default {\n  data () {\n    return {\n      material: false\n    }\n  },\n  props: {\n    vs: {\n      default:\n`void main ( void ) {\n  vec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\n  vec4 outputPos = projectionMatrix * mvPosition;\n  gl_Position = outputPos;\n}`\n    },\n    fs: {\n      default:\n`void main () {\n  gl_FragColor = vec4(vec3(0.5), 1.0);\n}`\n    },\n    uniforms: {\n      default () {\n        return {}\n      }\n    }\n  },\n  watch: {\n    vs () { this.initShader() },\n    fs () { this.initShader() },\n    uniforms () { this.initShader() }\n  },\n  mounted () {\n    this.initShader()\n  },\n  methods: {\n    initShader () {\n      try {\n        this.material = new THREE.ShaderMaterial({\n          uniforms: {\n            ...this.uniforms// ,\n            // ...THREE.UniformsUtils.merge([\n            //   THREE.UniformsLib.common,\n            //   THREE.UniformsLib.aomap,\n            //   THREE.UniformsLib.lightmap,\n            //   THREE.UniformsLib.emissivemap,\n            //   THREE.UniformsLib.bumpmap,\n            //   THREE.UniformsLib.normalmap,\n            //   THREE.UniformsLib.displacementmap,\n            //   THREE.UniformsLib.fog,\n            //   THREE.UniformsLib.lights,\n            //   THREE.UniformsLib.shadowmap,\n            //   {\n            //     flipEnvMap: {\n            //       value: 1\n            //     },\n            //     emissive: {\n            //       value: new THREE.Color(0x000000)\n            //     },\n            //     specular: {\n            //       value: new THREE.Color(0x111111)\n            //     },\n            //     shininess: {\n            //       value: 30\n            //     },\n            //     envMap: {\n            //       // value: cubeCamera.renderTarget\n            //     }\n            //   }\n            // ])\n          },\n          vertexShader: this.vs || this.$options.props.vs.default,\n          fragmentShader: this.fs || this.$options.props.fs.default\n        })\n        this.$parent.$emit('material', this.material)\n      } catch (e) {\n        console.log(e)\n      }\n    }\n  }\n}\n</script>\n\n<style>\n\n</style>\n"},{"path":"@/webgl/Element/PointLight.vue","src":"<template>\n  <div class=\"light-point\"></div>\n</template>\n\n<script>\nvar THREE = window.THREE;\n\nexport default {\n  props: {\n    color: {\n      default () {\n        return 0xffffff\n      }\n    }\n  },\n  data () {\n    return {\n      light: false\n    }\n  },\n  mounted () {\n    this.light = new THREE.PointLight({ color: new THREE.Color(this.color) })\n    this.$emit('element', this.light)\n    this.$parent.$emit('add', this.light)\n  },\n  beforeDestroy () {\n    this.$parent.$emit('remove', this.light)\n  }\n}\n</script>\n\n<style>\n\n</style>\n"},{"path":"@/webgl/Element/Object3D.vue","src":"<template>\n<div class=\"object-3d\"><slot></slot></div>\n</template>\n\n<script>\nvar THREE = window.THREE;\nexport default {\n  data () {\n    return {\n      object3d: false\n    }\n  },\n  props: {\n    visible: { default: true },\n    px: { default: 0 },\n    py: { default: 0 },\n    pz: { default: 0 },\n\n    sx: { default: 1 },\n    sy: { default: 1 },\n    sz: { default: 1 },\n\n    rx: { default: 0 },\n    ry: { default: 0 },\n    rz: { default: 0 }\n  },\n  watch: {\n    visible () { this.object3d.setVisible(this.visible) },\n    px () { this.updatePosition('x', this.px) },\n    py () { this.updatePosition('y', this.py) },\n    pz () { this.updatePosition('z', this.pz) },\n\n    sx () { this.updateScale('x', this.sx) },\n    sy () { this.updateScale('y', this.sy) },\n    sz () { this.updateScale('z', this.sz) },\n\n    rx () { this.updateRotation('x', this.rx) },\n    ry () { this.updateRotation('y', this.ry) },\n    rz () { this.updateRotation('z', this.rz) }\n  },\n  created () {\n    this.object3d = new THREE.Object3D()\n    this.$emit('element', this.object3d)\n    this.object3d.visible = true\n    this.updatePosition()\n    this.updateScale()\n    this.updateRotation()\n    this.$on('add', (v) => {\n      this.object3d.add(v)\n    })\n    this.$on('remove', (v) => {\n      this.object3d.remove(v)\n    })\n  },\n  mounted () {\n    this.$parent.$emit('add', this.object3d)\n  },\n  beforeDestroy () {\n    this.$parent.$emit('remove', this.object3d)\n  },\n  methods: {\n    updatePosition (key, val) {\n      if (key) {\n        this.object3d.position[key] = val\n      } else {\n        this.object3d.position.set(this.px, this.py, this.pz)\n      }\n    },\n    updateScale (key, val) {\n      if (key) {\n        this.object3d.scale[key] = val\n      } else {\n        this.object3d.scale.set(this.sx, this.sy, this.sz)\n      }\n    },\n    updateRotation (key, val) {\n      if (key) {\n        this.object3d.rotation[key] = val\n      } else {\n        this.object3d.rotation.set(this.rx, this.ry, this.rz)\n      }\n    }\n  }\n}\n</script>\n\n<style>\n\n</style>\n"},{"path":"@/webgl/Element/Points.vue","src":"<template>\n  <div class=\"points\">\n    <slot>\n    </slot>\n  </div>\n</template>\n\n<script>\nimport THREE from '@/three.js'\n\nexport default {\n  props: {\n    position: {}\n  },\n  data () {\n    return {\n      element: false,\n      points: false,\n      material: false,\n      geometry: false\n    }\n  },\n  created () {\n    this.element = this.points = new THREE.Points()\n    this.$parent.$emit('add', this.points)\n    this.$emit('element', this.points)\n    this.$on('material', (v) => {\n      this.material = v\n      this.tryUpdateMaterial()\n    })\n    this.$on('geometry', (v) => {\n      this.geometry = v\n      this.tryUpdateGeometry()\n    })\n  },\n  beforeDestroy () {\n    this.uninstall()\n  },\n  methods: {\n    tryUpdateGeometry (v) {\n      if (this.points) {\n        this.points.geometry = this.geometry\n      }\n    },\n    tryUpdateMaterial (v) {\n      if (this.points) {\n        this.points.material = this.material\n      }\n    },\n    uninstall () {\n      this.$parent.$emit('remove', this.points)\n    }\n  }\n}\n</script>\n\n<style>\n\n</style>\n"},{"path":"@/webgl/Element/Mesh.vue","src":"<template>\n  <div class=\"mesh\">\n    <slot>\n    </slot>\n  </div>\n</template>\n\n<script>\nvar THREE = window.THREE;\nexport default {\n  props: {\n  },\n  data () {\n    return {\n      element: false,\n      mesh: false,\n      material: false,\n      geometry: false\n    }\n  },\n  created () {\n    this.element = this.mesh = new THREE.Mesh()\n    this.$parent.$emit('add', this.mesh)\n    this.$emit('element', this.mesh)\n\n    this.$on('material', (v) => {\n      this.material = v\n      this.tryUpdateMaterial()\n    })\n    this.$on('geometry', (v) => {\n      this.geometry = v\n      this.tryUpdateGeometry()\n    })\n  },\n  beforeDestroy () {\n    this.uninstall()\n  },\n  methods: {\n    tryUpdateGeometry (v) {\n      if (this.mesh) {\n        this.mesh.geometry = this.geometry\n      }\n    },\n    tryUpdateMaterial (v) {\n      if (this.mesh) {\n        this.mesh.material = this.material\n      }\n    },\n    uninstall () {\n      this.$parent.$emit('remove', this.mesh)\n    }\n  }\n}\n</script>\n\n<style>\n\n</style>\n"},{"path":"@/webgl/Geo/SphereBufferGeometry.vue","src":"<template>\n  <div class=\"geo-sphere\"></div>\n</template>\n\n<script>\nvar THREE = window.THREE\nexport default {\n  data () {\n    return {\n      geometry: false\n    }\n  },\n  mounted () {\n    let geometry = new THREE.SphereBufferGeometry(2, 256, 256)\n    this.$parent.$emit('geometry', geometry)\n  }\n}\n</script>\n\n<style>\n\n</style>\n"},{"path":"@/shader/Simple/vs.vert","src":"varying vec3 vPos;\nuniform float time;\n\nvoid main (void) {\n  vPos = position;\n  vPos.x = vPos.x + sin(vPos.x + time);\n  vPos.y = vPos.y + cos(vPos.y + time);\n  vPos.z = vPos.z + tan(vPos.z + time);\n  \n  vec4 mvPosition = modelViewMatrix * vec4(position, 1.0);\n  vec4 outputPos = projectionMatrix * mvPosition;\n  gl_Position = outputPos;\n}"},{"path":"@/shader/Simple/fs.frag","src":"varying vec3 vPos;\n\nvoid main () {\n  gl_FragColor = vec4(vec3(vPos), 1.0);\n}"},{"path":"@/shader/Fling/vs.vert","src":"varying vec3 vPos;\nuniform float time;\n\nvoid main (void) {\n  vPos = position;\n  vPos.x = vPos.x + sin(vPos.x + time);\n  vPos.y = vPos.y + cos(vPos.y + time);\n  vPos.z = vPos.z + tan(vPos.z + time);\n  \n  vec4 mvPosition = modelViewMatrix * vec4(vPos, 1.0);\n  vec4 outputPos = projectionMatrix * mvPosition;\n  gl_Position = outputPos;\n}"},{"path":"@/three.js","src":"var THREE = window.THREE\nexport default THREE\n"}],"date":"Thu Feb 15 2018 16:39:02 GMT+0800 (HKT)"},{"currentFilePath":"@/index.html","openedFiles":[{"path":"@/index.html"}],"files":[{"path":"@/index.html","src":"<!DOCTYPE html>\n<html>\n  <head>\n    <meta charset=\"UTF-8\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge,chrome=1\">\n    <meta name=\"viewport\" content=\"width=device-width,initial-scale=1\">\n\n    <title>WebGL</title>\n\n    <meta name=\"author\" content=\"loklok\">\n    <meta name=\"description\" content=\"WebGL Art\">\n    <meta name=\"keywords\" content=\"WebGL, Art\">\n\n    <style type=\"text/css\">\n    </style>\n\n  </head>\n  <body>\n    <div id=\"app-attach-point\"></div>\n    \n    \n    \n    <script required src=\"https://cdnjs.cloudflare.com/ajax/libs/vue/2.5.2/vue.min.js\"></script>\n    <script required src=\"https://cdnjs.cloudflare.com/ajax/libs/vue-router/3.0.1/vue-router.min.js\"></script>\n    <script required src=\"https://cdnjs.cloudflare.com/ajax/libs/tween.js/16.3.5/Tween.min.js\"></script>\n    <script required src=\"https://cdnjs.cloudflare.com/ajax/libs/three.js/88/three.min.js\" integrity=\"sha256-6fhm481uY9c152qGWIVgE7KbzaCj5WjCi3BGIpZef2E=\" crossorigin=\"anonymous\"></script>\n    <script required src=\"https://threejs.org/examples/js/GPUComputationRenderer.js\"></script>\n  </body>\n</html>\n"},{"path":"@/style.css","src":"html, body {\n  width: 100%;\n  height: 100%;\n  margin: 0px;\n  padding: 0px;\n}\nhtml, body, #app {\n  box-sizing: border-box;\n  width: 100%;\n  height: 100%;\n  overflow: hidden;\n}\n.full{\n  width: 100%;\n  height: 100%;\n}"},{"path":"@/main.js","src":"import '@/style.css'\nimport App from '@/app.vue'\nimport router from '@/router.js'\n\nvar oldDOM = document.querySelector('#app-attach-point');\nvar newDOM = document.createElement('div');\nnewDOM.id = '#app-attach-point';\ndocument.body.appendChild(newDOM);\nvar target = oldDOM || newDOM;\n\nvar app = new Vue({\n  router,\n  el: target,\n  components: {\n    App\n  },\n  template: '<div id=\"app\"><App /></div>'\n})\n\nwindow.addEventListener('message', (evt) => {\n  var { type, data } = evt.data;\n  window.dispatchEvent(new CustomEvent(type, { detail: data }))\n}, false);\n\nwindow.addEventListener('slider', ({ detail }) => {\n  console.log(detail);\n  (window.opener || window.top).dispatchEvent(new CustomEvent('loklok', { detail: { rand: Math.random() } }))\n});\n\nexport default app;\n"},{"path":"@/router.js","src":"import Player from '@/webgl/layout/Player.vue'\nimport Home from '@/webgl/pages/Home.vue'\nimport Happy from '@/webgl/pages/Happy.vue'\n\nconst router = new VueRouter({\n  mode: 'hash',\n  routes: [\n    {\n      path: '/',\n      component: Player,\n      children: [\n        {\n          path: '',\n          component: Home\n        },\n        {\n          path: 'happy',\n          component: Happy\n        }\n      ]\n    }\n  ]\n})\n\nexport default router\n"},{"path":"@/app.vue","src":"<template>\n  <div>\n    <router-view></router-view>\n  </div>\n</template>\n\n<script>\nimport THREE from '@/three.js'\n\nexport default {\n  data () {\n    return {\n      \n    }\n  },\n  created () {\n    \n  },\n  beforeDestroy () {\n    \n  },\n  methods: {\n    \n  }\n}\n</script>\n\n<style>\n\n</style>\n"},{"path":"@/webgl/layout/Player.vue","src":"<template>\n  <div class=\"full\" ref=\"full\">\n\n    <Renderer\n      ref=\"renderer\"\n      :size=\"size\"\n      @renderer=\"(v) => { renderer = v }\"\n      @toucher=\"(v) => { toucher = v }\"\n    >\n    </Renderer>\n    \n    <keep-alive>\n      <component\n        class=\"hidden\"\n        :is=\"'router-view'\"\n        v-if=\"renderer\"\n        :size=\"size\"\n        :toucher=\"toucher\"\n        :renderer=\"renderer\"\n      >\n      </component>\n    </keep-alive>\n\n  </div>\n</template>\n\n<script>\nimport Bundle from '@/webgl/Bundle.js';\n\nexport default {\n  components: {\n    ...Bundle\n  },\n  computed: {\n  },\n  methods: {\n    \n  },\n  data () {\n    return {\n      toucher: false,\n      resizer: () => {},\n      renderer: false,\n      size: {\n        width: 100,\n        height: 100,\n        aspect: 1\n      }\n    }\n  },\n  created () {\n    \n  },\n  mounted () {\n    var resizer = this.resizer = () => {\n      this.$nextTick(() => {\n        var rect = this.$refs.full.getBoundingClientRect()\n        this.size = {\n          width: rect.width,\n          height: rect.height,\n          aspect: rect.width / rect.height\n        }\n      })\n    }\n    window.addEventListener('resize', resizer.bind(this))\n    resizer()\n  }\n}\n</script>\n\n<style scoped>\n.hidden{\n  display: none;\n}\n.full{\n  width: 100%;\n  height: 100%;\n}\n</style>\n"},{"path":"@/webgl/pages/Home.vue","src":"<template>\n  <div class=\"\">\n    <PerspectiveCamera\n      :fov=\"75\"\n      :aspect=\"size.aspect\"\n      :near=\"1\"\n      :far=\"1000\"\n      :position=\"{ x: 0, y: 0, z: 15 }\"\n      @camera=\"(v) => { camera = v; }\"\n    />\n    \n    <Scene @scene=\"(v) => { scene = v }\">\n      <Object3D pz=\"10\">\n        <PointLight />\n      </Object3D>\n      \n      <Object3D pz=\"0\">\n        <Mesh>\n          <SphereBufferGeometry />\n          <ShaderMaterial :vs=\"simpleVS\" :fs=\"simpleFS\" :uniforms=\"animatable\" />\n        </Mesh>\n      </Object3D>\n    </Scene>\n    \n    <Raycaster v-if=\"camera && toucher && scene\" :scene=\"scene\" :toucher=\"toucher\" :camera=\"camera\" @found=\"(v) => { found = v; }\" @click=\"onClick\">\n    </Raycaster>\n    \n  </div>\n</template>\n\n<script>\nimport Bundle from '@/webgl/Bundle.js';\n\nimport simpleVS from '@/shader/Simple/vs.vert'\nimport simpleFS from '@/shader/Simple/fs.frag'\n\nexport default {\n  name: 'Home',\n  props: {\n    toucher: {},\n    size: {},\n    renderer: {},\n    doc: {}\n  },\n  components: {\n    ...Bundle\n  },\n  computed: {\n  },\n  data () {\n    return {\n      cam: {\n        pos: { x: 3, y: 5, z: 10 }\n      },\n      ready: false,\n      cubeCamera: false,\n      visible: true,\n      resizer: () => {},\n      scene: false,\n      camera: false,\n      \n      found: [],\n      \n      animatable: {\n        time: { value: 0 }\n      },\n      simpleVS,\n      simpleFS\n      \n    }\n  },\n  methods: {\n    onClick ({ event, intersects }) {\n      this.$router.push({\n        path: '/happy'\n      })\n      this.$forceUpdate()\n      console.log('Click to happy');\n    },\n    setup () {\n    },\n    renderWebGL () {\n      TWEEN.update()\n      \n      this.animatable.time.value += 0.01;\n      \n      if (this.scene && this.camera && this.renderer) {\n        this.renderer.render(this.scene, this.camera)\n      }\n    }\n  },\n  watch: {\n    camera () {\n      if (this.camera && this.renderer) {\n        this.ready = true\n      }\n    },\n    renderer () {\n      if (this.camera && this.renderer) {\n        this.ready = true\n      }\n    },\n    ready () {\n      if (this.ready) {\n        this.setup()\n      }\n    }\n  },\n  created () {\n    \n  },\n  activated () {\n    var self = this\n    function loop (rAFT) {\n      self.rAFID = window.requestAnimationFrame(loop)\n      self.renderWebGL(rAFT)\n    }\n    self.rAFID = window.requestAnimationFrame(loop)\n  },\n  deactivated () {\n    window.cancelAnimationFrame(this.rAFID)\n  }\n}\n</script>\n\n<style scoped>\n.full{\n  width: 100%;\n  height: 100%;\n}\n</style>\n"},{"path":"@/webgl/pages/Happy.vue","src":"<template>\n  <div class=\"\">\n\n    <PerspectiveCamera\n      :fov=\"75\"\n      :aspect=\"size.aspect\"\n      :near=\"1\"\n      :far=\"1000\"\n      :position=\"{ x: 0, y: 0, z: 15 }\"\n      @camera=\"(v) => { camera = v; }\"\n    />\n    \n    <Scene @scene=\"(v) => { scene = v }\">\n      <Object3D pz=\"10\">\n        <PointLight />\n      </Object3D>\n      \n      <Object3D pz=\"0\">\n        <Points @element=\"(v) => { v.$skipRayCast = true }\">\n          <SphereBufferGeometry />\n          <ShaderMaterial :vs=\"simpleVS2\" :fs=\"simpleFS\" :uniforms=\"animatable\" />\n        </Points>\n      </Object3D>\n      \n      <Object3D pz=\"1\">\n        <Mesh>\n          <SphereBufferGeometry />\n          <ShaderMaterial :vs=\"simpleVS\" :fs=\"simpleFS\" :uniforms=\"animatable\" />\n        </Mesh>\n      </Object3D>\n    </Scene>\n    \n    <Raycaster v-if=\"renderer && camera && toucher && scene\" :scene=\"scene\" :toucher=\"toucher\" :camera=\"camera\" @found=\"(v) => { found = v; }\" @click=\"onClick\">\n    </Raycaster>\n\n  </div>\n</template>\n\n<script>\nimport Bundle from '@/webgl/Bundle.js';\n\nimport simpleVS2 from '@/shader/Fling/vs.vert'\nimport simpleVS from '@/shader/Simple/vs.vert'\nimport simpleFS from '@/shader/Simple/fs.frag'\n\nexport default {\n  name: 'Happy',\n  props: {\n    toucher: {},\n    size: {},\n    renderer: {},\n    doc: {}\n  },\n  components: {\n    ...Bundle\n  },\n  computed: {\n  },\n  data () {\n    return {\n      cam: {\n        pos: { x: 3, y: 5, z: 10 }\n      },\n      ready: false,\n      cubeCamera: false,\n      visible: true,\n      resizer: () => {},\n      scene: false,\n      camera: false,\n      \n      found: [],\n      \n      animatable: {\n        time: { value: 0 }\n      },\n      simpleVS,\n      simpleFS,\n      simpleVS2\n      \n    }\n  },\n  methods: {\n    onClick ({ event, intersects }) {\n      console.log(event, intersects)\n      this.$router.push('/')\n    },\n    setup () {\n    },\n    renderWebGL () {\n      TWEEN.update()\n      \n      this.animatable.time.value += 0.01;\n      \n      if (this.scene && this.camera && this.renderer) {\n        this.renderer.render(this.scene, this.camera)\n      }\n    }\n  },\n  watch: {\n    camera () {\n      if (this.camera && this.renderer) {\n        this.ready = true\n      }\n    },\n    renderer () {\n      if (this.camera && this.renderer) {\n        this.ready = true\n      }\n    },\n    ready () {\n      if (this.ready) {\n        this.setup()\n      }\n    }\n  },\n  created () {\n    \n  },\n  activated () {\n    var self = this\n    function loop (rAFT) {\n      self.rAFID = window.requestAnimationFrame(loop)\n      self.renderWebGL(rAFT)\n    }\n    self.rAFID = window.requestAnimationFrame(loop)\n  },\n  deactivated () {\n    window.cancelAnimationFrame(this.rAFID);\n    console.log('cancel animation frame')\n  }\n}\n</script>\n\n<style scoped>\n.full{\n  width: 100%;\n  height: 100%;\n}\n</style>\n"},{"path":"@/webgl/sample.vue","src":"<template>\n  <div class=\"full\">\n\n    <Renderer\n      ref=\"renderer\"\n      :size=\"size\"\n      @renderer=\"(v) => { renderer = v }\"\n    >\n    </Renderer>\n\n    <PerspectiveCamera\n      :fov=\"75\"\n      :aspect=\"size.aspect\"\n      :near=\"1\"\n      :far=\"1000\"\n      :position=\"{ x: 0, y: 0, z: 10 }\"\n      @camera=\"(v) => { camera = v; }\"\n    />\n\n    <Scene @scene=\"(v) => { scene = v }\">\n      <Object3D pz=\"10\">\n        <PointLight />\n      </Object3D>\n      \n      <Object3D pz=\"0\">\n        <Points>\n          <SphereBufferGeometry />\n          <ShaderMaterial :vs=\"simpleVS\" :fs=\"simpleFS\" :uniforms=\"animatable\" />\n        </Points>\n      </Object3D>\n      \n    </Scene>\n\n  </div>\n</template>\n\n<script>\nimport Bundle from '@/webgl/Bundle.js';\nimport simpleVS from '@/shader/Simple/vs.vert'\nimport simpleFS from '@/shader/Simple/fs.frag'\n\nexport default {\n  components: {\n    ...Bundle\n  },\n  computed: {\n  },\n  methods: {\n    renderWebGL () {\n      this.animatable.time.value = window.performance.now() * 0.001;\n      \n      if (this.scene && this.camera && this.renderer) {\n        this.renderer.render(this.scene, this.camera)\n      }\n    }\n  },\n  data () {\n    return {\n      animatable: {\n        time: { value: 0 }\n      },\n      simpleVS,\n      simpleFS,\n      size: {\n        width: window.innerWidth,\n        height: window.innerHeight,\n        aspect: window.innerWidth / window.innerHeight\n      },\n      renderer: false,\n      scene: false,\n      camera: false\n    }\n  },\n  created () {\n    \n  },\n  mounted () {\n    var self = this\n    function loop () {\n      self.rAFID = window.requestAnimationFrame(loop)\n      self.renderWebGL()\n    }\n    self.rAFID = window.requestAnimationFrame(loop)\n  }\n}\n</script>\n\n<style scoped>\n.full{\n  width: 100%;\n  height: 100%;\n}\n</style>\n"},{"path":"@/webgl/Bundle.js","src":"import Renderer from '@/webgl/System/Renderer.vue';\nimport Scene from '@/webgl/System/Scene.vue';\nimport PerspectiveCamera from '@/webgl/System/PerspectiveCamera.vue';\nimport Raycaster from '@/webgl/System/Raycaster.vue';\n\nimport MeshPhongMaterial from '@/webgl/Material/MeshPhongMaterial.vue';\nimport ShaderMaterial from '@/webgl/Material/ShaderMaterial.vue';\n\nimport Object3D from '@/webgl/Element/Object3D.vue';\nimport Mesh from '@/webgl/Element/Mesh.vue';\nimport Points from '@/webgl/Element/Points.vue';\nimport PointLight from '@/webgl/Element/PointLight.vue';\n\nimport SphereBufferGeometry from '@/webgl/Geo/SphereBufferGeometry.vue';\n\n\nexport default {\n  //materials\n  MeshPhongMaterial,\n  ShaderMaterial,\n  \n  //system\n  Renderer,\n  Scene,\n  PerspectiveCamera,\n  Raycaster,\n  \n  //Elemnts\n  PointLight,\n  Points,\n  Object3D,\n  Mesh,\n  \n  //Geo\n  SphereBufferGeometry\n}\n"},{"path":"@/webgl/System/Renderer.vue","src":"<template>\n  <div class=\"full pos-rel\">\n    <div class=\"full layer\" ref=\"mounter\"></div>\n    <div class=\"full layer\" ref=\"toucher\"><slot></slot></div>\n  </div>\n</template>\n\n<script>\nvar THREE = window.THREE\n\nexport default {\n  data () {\n    return {\n      // THREE,\n      renderer: false\n    }\n  },\n  props: {\n    size: { default () { return { width: 500, height: 500 } } },\n    alpha: { default: true },\n    antialias: { default: true }\n  },\n  mounted () {\n    this.renderer = new THREE.WebGLRenderer({\n      alpha: this.alpha,\n      antialias: this.antialias\n    })\n    this.resize()\n    this.renderer.domElement.style.marginBottom = '-6px'\n    this.$refs.mounter.appendChild(this.renderer.domElement)\n    \n    this.$emit('toucher', this.$refs['toucher'])\n    this.$emit('renderer', this.renderer)\n  },\n  beforeDestroy () {\n    this.$refs.mounter.removeChild(this.renderer.domElement)\n  },\n  watch: {\n    size () {\n      this.resize()\n    }\n  },\n  methods: {\n    resize () {\n      let ratio = window.devicePixelRatio || 1\n      this.renderer.setPixelRatio(ratio)\n      this.renderer.setSize(this.size.width, this.size.height)\n    }\n  }\n}\n</script>\n\n<style scoped>\n.full{\n  width: 100%;\n  height: 100%;\n}\n.pos-rel{\n  position: relative;\n}\n.layer{\n  position: absolute;\n  top: 0px;\n  left: 0px;\n}\n</style>\n"},{"path":"@/webgl/System/Scene.vue","src":"<template>\n  <div ref=\"mounter\" class=\"mounter\"><slot></slot></div>\n</template>\n\n<script>\nvar THREE = window.THREE\nexport default {\n  data () {\n    return {\n      scene: false\n    }\n  },\n  props: {\n    size: { default () { return { width: 500, height: 500 } } },\n    alpha: { default: true },\n    antialias: { default: true }\n  },\n  created () {\n    this.scene = new THREE.Scene()\n    this.$on('add', (v) => {\n      this.scene.add(v)\n    })\n    this.$on('remove', (v) => {\n      this.scene.remove(v)\n    })\n  },\n  mounted () {\n    this.$emit('scene', this.scene)\n  }\n}\n</script>\n\n<style scoped>\n.mounter {\n  display: none;\n}\n</style>\n"},{"path":"@/webgl/System/PerspectiveCamera.vue","src":"<script>\nvar THREE = window.THREE;\nexport default {\n  abstract: true,\n  render () {\n    return null\n  },\n  props: ['fov', 'aspect', 'near', 'far', 'position'],\n  data () {\n    return {\n      camera: null\n    }\n  },\n  created () {\n    this.camera = new THREE.PerspectiveCamera(this.fov, this.aspect, this.near, this.far)\n\n    if (this.position) {\n      this.camera.position.x = this.position.x\n      this.camera.position.y = this.position.y\n      this.camera.position.z = this.position.z\n    }\n    this.$emit('camera', this.camera)\n  },\n  watch: {\n    position () {\n      if (this.position) {\n        this.camera.position.x = this.position.x\n        this.camera.position.y = this.position.y\n        this.camera.position.z = this.position.z\n      }\n    },\n    aspect () {\n      if (this.camera) {\n        this.camera.aspect = this.aspect\n        this.camera.updateProjectionMatrix()\n      }\n    }\n  }\n}\n</script>\n\n<style scoped>\n.perspective-camera{\n  display: none;\n}\n</style>\n"},{"path":"@/webgl/System/Raycaster.vue","src":"<template>\n<div></div>\n</template>\n\n<script>\n\nexport default {\n  data () {\n    return {\n      rAFID: 0,\n      mouse: null,\n      raycast () {},\n      clean () {},\n      intersects: []\n    }\n  },\n  props: {\n    scene: {},\n    camera: {},\n    toucher: {}\n  },\n  created () {\n  },\n  activated () {\n    var raycaster = new THREE.Raycaster();\n    this.mouse = new THREE.Vector2();\n    \n    this.toucher.addEventListener('mousemove', this.handleMV, false);\n    this.toucher.addEventListener('click', this.handleClick, false);\n    this.clean = () => {\n      this.toucher.removeEventListener('click', this.handleClick, false);\n      this.toucher.removeEventListener('mousemove', this.handleMV);\n    }\n    \n    var raycast = () => {\n      var mouse = this.mouse;\n      var scene = this.scene;\n      var camera = this.camera;\n      \n      var restore = [];\n      this.scene.traverse((ele) => {\n        if (ele.$skipRayCast) {\n          restore.push({\n            parent: ele.parent,\n            ele: ele\n          })\n          ele.parent.remove(ele);\n        }\n      })\n      \n      \n    \t// update the picking ray with the camera and mouse position\n    \traycaster.setFromCamera( mouse, camera );\n    \t// calculate objects intersecting the picking ray\n    \tvar intersects = raycaster.intersectObjects( scene.children, true );\n    \t\n    \trestore.forEach((item) => {\n        item.parent.add(item.ele);\n      })\n    \t\n    \treturn intersects\n  \t};\n    this.raycast = raycast; \n    \n    var rAF = () => {\n      this.rAFID = window.requestAnimationFrame(rAF);\n      // this.raycast();\n    }\n    this.rAFID = window.requestAnimationFrame(rAF);\n  },\n  deactivated () {\n    window.cancelAnimationFrame(this.rAFID);\n    this.clean();\n  },\n  methods: {\n    handleClick (event) {\n      this.$emit('click', {\n        event,\n        intersects: this.raycast()\n      })\n    },\n    handleMV (event) {\n      this.mouse.x = (event.clientX / window.innerWidth) * 2 - 1;\n\t    this.mouse.y = - (event.clientY / window.innerHeight) * 2 + 1;\n    }\n    \n  }\n}\n</script>\n\n<style>\n\n</style>\n"},{"path":"@/webgl/Material/MeshPhongMaterial.vue","src":"<template>\n<div class=\"mesh-phong-material\"></div>\n</template>\n\n<script>\nvar THREE = window.THREE;\n\nexport default {\n  props: {\n    color: {\n      default () {\n        return Math.random() * 0xffffff\n      }\n    }\n  },\n  data () {\n    return {\n      material: false\n    }\n  },\n  created () {\n    this.material = new THREE.MeshPhongMaterial({\n      color: new THREE.Color(this.color),\n      specular: new THREE.Color(0x111111),\n      shininess: 50\n    })\n    this.$parent.$emit('material', this.material)\n  }\n}\n</script>\n\n<style>\n\n</style>\n"},{"path":"@/webgl/Material/ShaderMaterial.vue","src":"<template>\n<div class=\"mesh-basic-material\"></div>\n</template>\n\n<script>\nvar THREE = window.THREE;\n\nexport default {\n  data () {\n    return {\n      material: false\n    }\n  },\n  props: {\n    vs: {\n      default:\n`void main ( void ) {\n  vec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\n  vec4 outputPos = projectionMatrix * mvPosition;\n  gl_Position = outputPos;\n}`\n    },\n    fs: {\n      default:\n`void main () {\n  gl_FragColor = vec4(vec3(0.5), 1.0);\n}`\n    },\n    uniforms: {\n      default () {\n        return {}\n      }\n    }\n  },\n  watch: {\n    vs () { this.initShader() },\n    fs () { this.initShader() },\n    uniforms () { this.initShader() }\n  },\n  mounted () {\n    this.initShader()\n  },\n  methods: {\n    initShader () {\n      try {\n        this.material = new THREE.ShaderMaterial({\n          uniforms: {\n            ...this.uniforms// ,\n            // ...THREE.UniformsUtils.merge([\n            //   THREE.UniformsLib.common,\n            //   THREE.UniformsLib.aomap,\n            //   THREE.UniformsLib.lightmap,\n            //   THREE.UniformsLib.emissivemap,\n            //   THREE.UniformsLib.bumpmap,\n            //   THREE.UniformsLib.normalmap,\n            //   THREE.UniformsLib.displacementmap,\n            //   THREE.UniformsLib.fog,\n            //   THREE.UniformsLib.lights,\n            //   THREE.UniformsLib.shadowmap,\n            //   {\n            //     flipEnvMap: {\n            //       value: 1\n            //     },\n            //     emissive: {\n            //       value: new THREE.Color(0x000000)\n            //     },\n            //     specular: {\n            //       value: new THREE.Color(0x111111)\n            //     },\n            //     shininess: {\n            //       value: 30\n            //     },\n            //     envMap: {\n            //       // value: cubeCamera.renderTarget\n            //     }\n            //   }\n            // ])\n          },\n          vertexShader: this.vs || this.$options.props.vs.default,\n          fragmentShader: this.fs || this.$options.props.fs.default\n        })\n        this.$parent.$emit('material', this.material)\n      } catch (e) {\n        console.log(e)\n      }\n    }\n  }\n}\n</script>\n\n<style>\n\n</style>\n"},{"path":"@/webgl/Element/PointLight.vue","src":"<template>\n  <div class=\"light-point\"></div>\n</template>\n\n<script>\nvar THREE = window.THREE;\n\nexport default {\n  props: {\n    color: {\n      default () {\n        return 0xffffff\n      }\n    }\n  },\n  data () {\n    return {\n      light: false\n    }\n  },\n  mounted () {\n    this.light = new THREE.PointLight({ color: new THREE.Color(this.color) })\n    this.$emit('element', this.light)\n    this.$parent.$emit('add', this.light)\n  },\n  beforeDestroy () {\n    this.$parent.$emit('remove', this.light)\n  }\n}\n</script>\n\n<style>\n\n</style>\n"},{"path":"@/webgl/Element/Object3D.vue","src":"<template>\n<div class=\"object-3d\"><slot></slot></div>\n</template>\n\n<script>\nvar THREE = window.THREE;\nexport default {\n  data () {\n    return {\n      object3d: false\n    }\n  },\n  props: {\n    visible: { default: true },\n    px: { default: 0 },\n    py: { default: 0 },\n    pz: { default: 0 },\n\n    sx: { default: 1 },\n    sy: { default: 1 },\n    sz: { default: 1 },\n\n    rx: { default: 0 },\n    ry: { default: 0 },\n    rz: { default: 0 }\n  },\n  watch: {\n    visible () { this.object3d.setVisible(this.visible) },\n    px () { this.updatePosition('x', this.px) },\n    py () { this.updatePosition('y', this.py) },\n    pz () { this.updatePosition('z', this.pz) },\n\n    sx () { this.updateScale('x', this.sx) },\n    sy () { this.updateScale('y', this.sy) },\n    sz () { this.updateScale('z', this.sz) },\n\n    rx () { this.updateRotation('x', this.rx) },\n    ry () { this.updateRotation('y', this.ry) },\n    rz () { this.updateRotation('z', this.rz) }\n  },\n  created () {\n    this.object3d = new THREE.Object3D()\n    this.$emit('element', this.object3d)\n    this.object3d.visible = true\n    this.updatePosition()\n    this.updateScale()\n    this.updateRotation()\n    this.$on('add', (v) => {\n      this.object3d.add(v)\n    })\n    this.$on('remove', (v) => {\n      this.object3d.remove(v)\n    })\n  },\n  mounted () {\n    this.$parent.$emit('add', this.object3d)\n  },\n  beforeDestroy () {\n    this.$parent.$emit('remove', this.object3d)\n  },\n  methods: {\n    updatePosition (key, val) {\n      if (key) {\n        this.object3d.position[key] = val\n      } else {\n        this.object3d.position.set(this.px, this.py, this.pz)\n      }\n    },\n    updateScale (key, val) {\n      if (key) {\n        this.object3d.scale[key] = val\n      } else {\n        this.object3d.scale.set(this.sx, this.sy, this.sz)\n      }\n    },\n    updateRotation (key, val) {\n      if (key) {\n        this.object3d.rotation[key] = val\n      } else {\n        this.object3d.rotation.set(this.rx, this.ry, this.rz)\n      }\n    }\n  }\n}\n</script>\n\n<style>\n\n</style>\n"},{"path":"@/webgl/Element/Points.vue","src":"<template>\n  <div class=\"points\">\n    <slot>\n    </slot>\n  </div>\n</template>\n\n<script>\nimport THREE from '@/three.js'\n\nexport default {\n  props: {\n    position: {}\n  },\n  data () {\n    return {\n      element: false,\n      points: false,\n      material: false,\n      geometry: false\n    }\n  },\n  created () {\n    this.element = this.points = new THREE.Points()\n    this.$parent.$emit('add', this.points)\n    this.$emit('element', this.points)\n    this.$on('material', (v) => {\n      this.material = v\n      this.tryUpdateMaterial()\n    })\n    this.$on('geometry', (v) => {\n      this.geometry = v\n      this.tryUpdateGeometry()\n    })\n  },\n  beforeDestroy () {\n    this.uninstall()\n  },\n  methods: {\n    tryUpdateGeometry (v) {\n      if (this.points) {\n        this.points.geometry = this.geometry\n      }\n    },\n    tryUpdateMaterial (v) {\n      if (this.points) {\n        this.points.material = this.material\n      }\n    },\n    uninstall () {\n      this.$parent.$emit('remove', this.points)\n    }\n  }\n}\n</script>\n\n<style>\n\n</style>\n"},{"path":"@/webgl/Element/Mesh.vue","src":"<template>\n  <div class=\"mesh\">\n    <slot>\n    </slot>\n  </div>\n</template>\n\n<script>\nvar THREE = window.THREE;\nexport default {\n  props: {\n  },\n  data () {\n    return {\n      element: false,\n      mesh: false,\n      material: false,\n      geometry: false\n    }\n  },\n  created () {\n    this.element = this.mesh = new THREE.Mesh()\n    this.$parent.$emit('add', this.mesh)\n    this.$emit('element', this.mesh)\n\n    this.$on('material', (v) => {\n      this.material = v\n      this.tryUpdateMaterial()\n    })\n    this.$on('geometry', (v) => {\n      this.geometry = v\n      this.tryUpdateGeometry()\n    })\n  },\n  beforeDestroy () {\n    this.uninstall()\n  },\n  methods: {\n    tryUpdateGeometry (v) {\n      if (this.mesh) {\n        this.mesh.geometry = this.geometry\n      }\n    },\n    tryUpdateMaterial (v) {\n      if (this.mesh) {\n        this.mesh.material = this.material\n      }\n    },\n    uninstall () {\n      this.$parent.$emit('remove', this.mesh)\n    }\n  }\n}\n</script>\n\n<style>\n\n</style>\n"},{"path":"@/webgl/Geo/SphereBufferGeometry.vue","src":"<template>\n  <div class=\"geo-sphere\"></div>\n</template>\n\n<script>\nvar THREE = window.THREE\nexport default {\n  data () {\n    return {\n      geometry: false\n    }\n  },\n  mounted () {\n    let geometry = new THREE.SphereBufferGeometry(2, 256, 256)\n    this.$parent.$emit('geometry', geometry)\n  }\n}\n</script>\n\n<style>\n\n</style>\n"},{"path":"@/shader/Simple/vs.vert","src":"varying vec3 vPos;\nuniform float time;\n\nvoid main (void) {\n  vPos = position;\n  vPos.x = vPos.x + sin(vPos.x + time);\n  vPos.y = vPos.y + cos(vPos.y + time);\n  vPos.z = vPos.z + tan(vPos.z + time);\n  \n  vec4 mvPosition = modelViewMatrix * vec4(position, 1.0);\n  vec4 outputPos = projectionMatrix * mvPosition;\n  gl_Position = outputPos;\n}"},{"path":"@/shader/Simple/fs.frag","src":"varying vec3 vPos;\n\nvoid main () {\n  gl_FragColor = vec4(vec3(vPos), 1.0);\n}"},{"path":"@/shader/Fling/vs.vert","src":"varying vec3 vPos;\nuniform float time;\n\nvoid main (void) {\n  vPos = position;\n  vPos.x = vPos.x + sin(vPos.x + time);\n  vPos.y = vPos.y + cos(vPos.y + time);\n  vPos.z = vPos.z + tan(vPos.z + time);\n  \n  vec4 mvPosition = modelViewMatrix * vec4(vPos, 1.0);\n  vec4 outputPos = projectionMatrix * mvPosition;\n  gl_Position = outputPos;\n}"},{"path":"@/three.js","src":"var THREE = window.THREE\nexport default THREE\n"}],"date":"Thu Feb 15 2018 21:55:07 GMT+0800 (HKT)"},{"currentFilePath":"@/index.html","openedFiles":[{"path":"@/index.html"}],"files":[{"path":"@/index.html","src":"<!DOCTYPE html>\n<html>\n  <head>\n    <meta charset=\"UTF-8\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge,chrome=1\">\n    <meta name=\"viewport\" content=\"width=device-width,initial-scale=1\">\n\n    <title>WebGL</title>\n\n    <meta name=\"author\" content=\"loklok\">\n    <meta name=\"description\" content=\"WebGL Art\">\n    <meta name=\"keywords\" content=\"WebGL, Art\">\n\n    <style type=\"text/css\">\n    </style>\n\n  </head>\n  <body>\n    <div id=\"app-attach-point\"></div>\n    \n    \n    \n    <script required src=\"https://cdnjs.cloudflare.com/ajax/libs/vue/2.5.2/vue.min.js\"></script>\n    <script required src=\"https://cdnjs.cloudflare.com/ajax/libs/vue-router/3.0.1/vue-router.min.js\"></script>\n    <script required src=\"https://cdnjs.cloudflare.com/ajax/libs/tween.js/16.3.5/Tween.min.js\"></script>\n    <script required src=\"https://cdnjs.cloudflare.com/ajax/libs/three.js/88/three.min.js\" integrity=\"sha256-6fhm481uY9c152qGWIVgE7KbzaCj5WjCi3BGIpZef2E=\" crossorigin=\"anonymous\"></script>\n    <script required src=\"https://threejs.org/examples/js/GPUComputationRenderer.js\"></script>\n  </body>\n</html>\n"},{"path":"@/style.css","src":"html, body {\n  width: 100%;\n  height: 100%;\n  margin: 0px;\n  padding: 0px;\n}\nhtml, body, #app {\n  box-sizing: border-box;\n  width: 100%;\n  height: 100%;\n  overflow: hidden;\n}\n.full{\n  width: 100%;\n  height: 100%;\n}"},{"path":"@/main.js","src":"import '@/style.css'\nimport App from '@/app.vue'\nimport router from '@/router.js'\n\nvar oldDOM = document.querySelector('#app-attach-point');\nvar newDOM = document.createElement('div');\nnewDOM.id = '#app-attach-point';\ndocument.body.appendChild(newDOM);\nvar target = oldDOM || newDOM;\n\nvar app = new Vue({\n  router,\n  el: target,\n  components: {\n    App\n  },\n  template: '<div id=\"app\"><App /></div>'\n})\n\nwindow.addEventListener('message', (evt) => {\n  var { type, data } = evt.data;\n  window.dispatchEvent(new CustomEvent(type, { detail: data }))\n}, false);\n\nwindow.addEventListener('slider', ({ detail }) => {\n  console.log(detail);\n  (window.opener || window.top).dispatchEvent(new CustomEvent('loklok', { detail: { rand: Math.random() } }))\n});\n\nexport default app;\n"},{"path":"@/router.js","src":"import Player from '@/webgl/layout/Player.vue'\nimport Home from '@/webgl/pages/Home.vue'\nimport Happy from '@/webgl/pages/Happy.vue'\n\nconst router = new VueRouter({\n  mode: 'hash',\n  routes: [\n    {\n      path: '/',\n      component: Player,\n      children: [\n        {\n          path: '',\n          component: Home\n        },\n        {\n          path: 'happy',\n          component: Happy\n        }\n      ]\n    }\n  ]\n})\n\nexport default router\n"},{"path":"@/app.vue","src":"<template>\n  <div>\n    <router-view></router-view>\n  </div>\n</template>\n\n<script>\nimport THREE from '@/three.js'\n\nexport default {\n  data () {\n    return {\n      \n    }\n  },\n  created () {\n    \n  },\n  beforeDestroy () {\n    \n  },\n  methods: {\n    \n  }\n}\n</script>\n\n<style>\n\n</style>\n"},{"path":"@/webgl/layout/Player.vue","src":"<template>\n  <div class=\"full\" ref=\"full\">\n\n    <Renderer\n      ref=\"renderer\"\n      :size=\"size\"\n      @renderer=\"(v) => { renderer = v }\"\n      @toucher=\"(v) => { toucher = v }\"\n    >\n    </Renderer>\n    \n    <keep-alive>\n      <component\n        class=\"hidden\"\n        :is=\"'router-view'\"\n        v-if=\"renderer\"\n        :size=\"size\"\n        :toucher=\"toucher\"\n        :renderer=\"renderer\"\n      >\n      </component>\n    </keep-alive>\n\n  </div>\n</template>\n\n<script>\nimport Bundle from '@/webgl/Bundle.js';\n\nexport default {\n  components: {\n    ...Bundle\n  },\n  computed: {\n  },\n  methods: {\n    \n  },\n  data () {\n    return {\n      toucher: false,\n      resizer: () => {},\n      renderer: false,\n      size: {\n        width: 100,\n        height: 100,\n        aspect: 1\n      }\n    }\n  },\n  created () {\n    \n  },\n  mounted () {\n    var resizer = this.resizer = () => {\n      this.$nextTick(() => {\n        var rect = this.$refs.full.getBoundingClientRect()\n        this.size = {\n          width: rect.width,\n          height: rect.height,\n          aspect: rect.width / rect.height\n        }\n      })\n    }\n    window.addEventListener('resize', resizer.bind(this))\n    resizer()\n  }\n}\n</script>\n\n<style scoped>\n.hidden{\n  display: none;\n}\n.full{\n  width: 100%;\n  height: 100%;\n}\n</style>\n"},{"path":"@/webgl/pages/Home.vue","src":"<template>\n  <div class=\"\">\n    <PerspectiveCamera\n      :fov=\"75\"\n      :aspect=\"size.aspect\"\n      :near=\"1\"\n      :far=\"1000\"\n      :position=\"{ x: 0, y: 0, z: 15 }\"\n      @camera=\"(v) => { camera = v; }\"\n    />\n    \n    <Scene @scene=\"(v) => { scene = v }\">\n      <Object3D pz=\"10\">\n        <PointLight />\n      </Object3D>\n      \n      <Object3D pz=\"0\">\n        <Mesh>\n          <SphereBufferGeometry />\n          <ShaderMaterial :vs=\"simpleVS\" :fs=\"simpleFS\" :uniforms=\"animatable\" />\n        </Mesh>\n      </Object3D>\n    </Scene>\n    \n    <Raycaster v-if=\"camera && toucher && scene\" :scene=\"scene\" :toucher=\"toucher\" :camera=\"camera\" @found=\"(v) => { found = v; }\" @click=\"onClick\">\n    </Raycaster>\n    \n  </div>\n</template>\n\n<script>\nimport Bundle from '@/webgl/Bundle.js';\n\nimport simpleVS from '@/shader/Simple/vs.vert'\nimport simpleFS from '@/shader/Simple/fs.frag'\n\nexport default {\n  name: 'Home',\n  props: {\n    toucher: {},\n    size: {},\n    renderer: {},\n    doc: {}\n  },\n  components: {\n    ...Bundle\n  },\n  computed: {\n  },\n  data () {\n    return {\n      cam: {\n        pos: { x: 3, y: 5, z: 10 }\n      },\n      ready: false,\n      cubeCamera: false,\n      visible: true,\n      resizer: () => {},\n      scene: false,\n      camera: false,\n      \n      found: [],\n      \n      animatable: {\n        time: { value: 0 }\n      },\n      simpleVS,\n      simpleFS\n      \n    }\n  },\n  methods: {\n    onClick ({ event, intersects }) {\n      this.$router.push({\n        path: '/happy'\n      })\n      this.$forceUpdate()\n      console.log('Click to happy');\n    },\n    setup () {\n    },\n    renderWebGL () {\n      TWEEN.update()\n      \n      this.animatable.time.value += 0.01;\n      \n      if (this.scene && this.camera && this.renderer) {\n        this.renderer.render(this.scene, this.camera)\n      }\n    }\n  },\n  watch: {\n    camera () {\n      if (this.camera && this.renderer) {\n        this.ready = true\n      }\n    },\n    renderer () {\n      if (this.camera && this.renderer) {\n        this.ready = true\n      }\n    },\n    ready () {\n      if (this.ready) {\n        this.setup()\n      }\n    }\n  },\n  created () {\n    \n  },\n  activated () {\n    var self = this\n    function loop (rAFT) {\n      self.rAFID = window.requestAnimationFrame(loop)\n      self.renderWebGL(rAFT)\n    }\n    self.rAFID = window.requestAnimationFrame(loop)\n  },\n  deactivated () {\n    window.cancelAnimationFrame(this.rAFID)\n  }\n}\n</script>\n\n<style scoped>\n.full{\n  width: 100%;\n  height: 100%;\n}\n</style>\n"},{"path":"@/webgl/pages/Happy.vue","src":"<template>\n  <div class=\"\">\n\n    <PerspectiveCamera\n      :fov=\"75\"\n      :aspect=\"size.aspect\"\n      :near=\"1\"\n      :far=\"1000\"\n      :position=\"{ x: 0, y: 0, z: 15 }\"\n      @camera=\"(v) => { camera = v; }\"\n    />\n    \n    <Scene @scene=\"(v) => { scene = v }\">\n      <Object3D pz=\"10\">\n        <PointLight />\n      </Object3D>\n      \n      <Object3D pz=\"0\">\n        <Points @element=\"(v) => { v.$skipRayCast = true }\">\n          <SphereBufferGeometry />\n          <ShaderMaterial :vs=\"simpleVS2\" :fs=\"simpleFS\" :uniforms=\"animatable\" />\n        </Points>\n      </Object3D>\n      \n      <Object3D pz=\"1\">\n        <Mesh>\n          <SphereBufferGeometry />\n          <ShaderMaterial :vs=\"simpleVS\" :fs=\"simpleFS\" :uniforms=\"animatable\" />\n        </Mesh>\n      </Object3D>\n    </Scene>\n    \n    <Raycaster v-if=\"renderer && camera && toucher && scene\" :scene=\"scene\" :toucher=\"toucher\" :camera=\"camera\" @found=\"(v) => { found = v; }\" @click=\"onClick\">\n    </Raycaster>\n\n  </div>\n</template>\n\n<script>\nimport Bundle from '@/webgl/Bundle.js';\n\nimport simpleVS2 from '@/shader/Fling/vs.vert'\nimport simpleVS from '@/shader/Simple/vs.vert'\nimport simpleFS from '@/shader/Simple/fs.frag'\n\nexport default {\n  name: 'Happy',\n  props: {\n    toucher: {},\n    size: {},\n    renderer: {},\n    doc: {}\n  },\n  components: {\n    ...Bundle\n  },\n  computed: {\n  },\n  data () {\n    return {\n      cam: {\n        pos: { x: 3, y: 5, z: 10 }\n      },\n      ready: false,\n      cubeCamera: false,\n      visible: true,\n      resizer: () => {},\n      scene: false,\n      camera: false,\n      \n      found: [],\n      \n      animatable: {\n        time: { value: 0 }\n      },\n      simpleVS,\n      simpleFS,\n      simpleVS2\n      \n    }\n  },\n  methods: {\n    onClick ({ event, intersects }) {\n      console.log(event, intersects)\n      this.$router.push('/')\n    },\n    setup () {\n    },\n    renderWebGL () {\n      TWEEN.update()\n      \n      this.animatable.time.value += 0.01;\n      \n      if (this.scene && this.camera && this.renderer) {\n        this.renderer.render(this.scene, this.camera)\n      }\n    }\n  },\n  watch: {\n    camera () {\n      if (this.camera && this.renderer) {\n        this.ready = true\n      }\n    },\n    renderer () {\n      if (this.camera && this.renderer) {\n        this.ready = true\n      }\n    },\n    ready () {\n      if (this.ready) {\n        this.setup()\n      }\n    }\n  },\n  created () {\n    \n  },\n  activated () {\n    var self = this\n    function loop (rAFT) {\n      self.rAFID = window.requestAnimationFrame(loop)\n      self.renderWebGL(rAFT)\n    }\n    self.rAFID = window.requestAnimationFrame(loop)\n  },\n  deactivated () {\n    window.cancelAnimationFrame(this.rAFID);\n    console.log('cancel animation frame')\n  }\n}\n</script>\n\n<style scoped>\n.full{\n  width: 100%;\n  height: 100%;\n}\n</style>\n"},{"path":"@/webgl/sample.vue","src":"<template>\n  <div class=\"full\">\n\n    <Renderer\n      ref=\"renderer\"\n      :size=\"size\"\n      @renderer=\"(v) => { renderer = v }\"\n    >\n    </Renderer>\n\n    <PerspectiveCamera\n      :fov=\"75\"\n      :aspect=\"size.aspect\"\n      :near=\"1\"\n      :far=\"1000\"\n      :position=\"{ x: 0, y: 0, z: 10 }\"\n      @camera=\"(v) => { camera = v; }\"\n    />\n\n    <Scene @scene=\"(v) => { scene = v }\">\n      <Object3D pz=\"10\">\n        <PointLight />\n      </Object3D>\n      \n      <Object3D pz=\"0\">\n        <Points>\n          <SphereBufferGeometry />\n          <ShaderMaterial :vs=\"simpleVS\" :fs=\"simpleFS\" :uniforms=\"animatable\" />\n        </Points>\n      </Object3D>\n      \n    </Scene>\n\n  </div>\n</template>\n\n<script>\nimport Bundle from '@/webgl/Bundle.js';\nimport simpleVS from '@/shader/Simple/vs.vert'\nimport simpleFS from '@/shader/Simple/fs.frag'\n\nexport default {\n  components: {\n    ...Bundle\n  },\n  computed: {\n  },\n  methods: {\n    renderWebGL () {\n      this.animatable.time.value = window.performance.now() * 0.001;\n      \n      if (this.scene && this.camera && this.renderer) {\n        this.renderer.render(this.scene, this.camera)\n      }\n    }\n  },\n  data () {\n    return {\n      animatable: {\n        time: { value: 0 }\n      },\n      simpleVS,\n      simpleFS,\n      size: {\n        width: window.innerWidth,\n        height: window.innerHeight,\n        aspect: window.innerWidth / window.innerHeight\n      },\n      renderer: false,\n      scene: false,\n      camera: false\n    }\n  },\n  created () {\n    \n  },\n  mounted () {\n    var self = this\n    function loop () {\n      self.rAFID = window.requestAnimationFrame(loop)\n      self.renderWebGL()\n    }\n    self.rAFID = window.requestAnimationFrame(loop)\n  }\n}\n</script>\n\n<style scoped>\n.full{\n  width: 100%;\n  height: 100%;\n}\n</style>\n"},{"path":"@/webgl/Bundle.js","src":"import Renderer from '@/webgl/System/Renderer.vue';\nimport Scene from '@/webgl/System/Scene.vue';\nimport PerspectiveCamera from '@/webgl/System/PerspectiveCamera.vue';\nimport Raycaster from '@/webgl/System/Raycaster.vue';\n\nimport MeshPhongMaterial from '@/webgl/Material/MeshPhongMaterial.vue';\nimport ShaderMaterial from '@/webgl/Material/ShaderMaterial.vue';\n\nimport Object3D from '@/webgl/Element/Object3D.vue';\nimport Mesh from '@/webgl/Element/Mesh.vue';\nimport Points from '@/webgl/Element/Points.vue';\nimport PointLight from '@/webgl/Element/PointLight.vue';\n\nimport SphereBufferGeometry from '@/webgl/Geo/SphereBufferGeometry.vue';\n\n\nexport default {\n  //materials\n  MeshPhongMaterial,\n  ShaderMaterial,\n  \n  //system\n  Renderer,\n  Scene,\n  PerspectiveCamera,\n  Raycaster,\n  \n  //Elemnts\n  PointLight,\n  Points,\n  Object3D,\n  Mesh,\n  \n  //Geo\n  SphereBufferGeometry\n}\n"},{"path":"@/webgl/System/Renderer.vue","src":"<template>\n  <div class=\"full pos-rel\">\n    <div class=\"full layer\" ref=\"mounter\"></div>\n    <div class=\"full layer\" ref=\"toucher\"><slot></slot></div>\n  </div>\n</template>\n\n<script>\nvar THREE = window.THREE\n\nexport default {\n  data () {\n    return {\n      // THREE,\n      renderer: false\n    }\n  },\n  props: {\n    size: { default () { return { width: 500, height: 500 } } },\n    alpha: { default: true },\n    antialias: { default: true }\n  },\n  mounted () {\n    this.renderer = new THREE.WebGLRenderer({\n      alpha: this.alpha,\n      antialias: this.antialias\n    })\n    this.resize()\n    this.renderer.domElement.style.marginBottom = '-6px'\n    this.$refs.mounter.appendChild(this.renderer.domElement)\n    \n    this.$emit('toucher', this.$refs['toucher'])\n    this.$emit('renderer', this.renderer)\n  },\n  beforeDestroy () {\n    this.$refs.mounter.removeChild(this.renderer.domElement)\n  },\n  watch: {\n    size () {\n      this.resize()\n    }\n  },\n  methods: {\n    resize () {\n      let ratio = window.devicePixelRatio || 1\n      this.renderer.setPixelRatio(ratio)\n      this.renderer.setSize(this.size.width, this.size.height)\n    }\n  }\n}\n</script>\n\n<style scoped>\n.full{\n  width: 100%;\n  height: 100%;\n}\n.pos-rel{\n  position: relative;\n}\n.layer{\n  position: absolute;\n  top: 0px;\n  left: 0px;\n}\n</style>\n"},{"path":"@/webgl/System/Scene.vue","src":"<template>\n  <div ref=\"mounter\" class=\"mounter\"><slot></slot></div>\n</template>\n\n<script>\nvar THREE = window.THREE\nexport default {\n  data () {\n    return {\n      scene: false\n    }\n  },\n  props: {\n    size: { default () { return { width: 500, height: 500 } } },\n    alpha: { default: true },\n    antialias: { default: true }\n  },\n  created () {\n    this.scene = new THREE.Scene()\n    this.$on('add', (v) => {\n      this.scene.add(v)\n    })\n    this.$on('remove', (v) => {\n      this.scene.remove(v)\n    })\n  },\n  mounted () {\n    this.$emit('scene', this.scene)\n  }\n}\n</script>\n\n<style scoped>\n.mounter {\n  display: none;\n}\n</style>\n"},{"path":"@/webgl/System/PerspectiveCamera.vue","src":"<script>\nvar THREE = window.THREE;\nexport default {\n  abstract: true,\n  render () {\n    return null\n  },\n  props: ['fov', 'aspect', 'near', 'far', 'position'],\n  data () {\n    return {\n      camera: null\n    }\n  },\n  created () {\n    this.camera = new THREE.PerspectiveCamera(this.fov, this.aspect, this.near, this.far)\n\n    if (this.position) {\n      this.camera.position.x = this.position.x\n      this.camera.position.y = this.position.y\n      this.camera.position.z = this.position.z\n    }\n    this.$emit('camera', this.camera)\n  },\n  watch: {\n    position () {\n      if (this.position) {\n        this.camera.position.x = this.position.x\n        this.camera.position.y = this.position.y\n        this.camera.position.z = this.position.z\n      }\n    },\n    aspect () {\n      if (this.camera) {\n        this.camera.aspect = this.aspect\n        this.camera.updateProjectionMatrix()\n      }\n    }\n  }\n}\n</script>\n\n<style scoped>\n.perspective-camera{\n  display: none;\n}\n</style>\n"},{"path":"@/webgl/System/Raycaster.vue","src":"<template>\n<div></div>\n</template>\n\n<script>\n\nexport default {\n  data () {\n    return {\n      rAFID: 0,\n      mouse: null,\n      raycast () {},\n      clean () {},\n      intersects: []\n    }\n  },\n  props: {\n    scene: {},\n    camera: {},\n    toucher: {}\n  },\n  created () {\n  },\n  activated () {\n    var raycaster = new THREE.Raycaster();\n    this.mouse = new THREE.Vector2();\n    \n    this.toucher.addEventListener('mousemove', this.handleMV, false);\n    this.toucher.addEventListener('click', this.handleClick, false);\n    this.clean = () => {\n      this.toucher.removeEventListener('click', this.handleClick, false);\n      this.toucher.removeEventListener('mousemove', this.handleMV);\n    }\n    \n    var raycast = () => {\n      var mouse = this.mouse;\n      var scene = this.scene;\n      var camera = this.camera;\n      \n      var restore = [];\n      this.scene.traverse((ele) => {\n        if (ele.$skipRayCast) {\n          restore.push({\n            parent: ele.parent,\n            ele: ele\n          })\n          ele.parent.remove(ele);\n        }\n      })\n      \n      \n    \t// update the picking ray with the camera and mouse position\n    \traycaster.setFromCamera( mouse, camera );\n    \t// calculate objects intersecting the picking ray\n    \tvar intersects = raycaster.intersectObjects( scene.children, true );\n    \t\n    \trestore.forEach((item) => {\n        item.parent.add(item.ele);\n      })\n    \t\n    \treturn intersects\n  \t};\n    this.raycast = raycast; \n    \n    var rAF = () => {\n      this.rAFID = window.requestAnimationFrame(rAF);\n      // this.raycast();\n    }\n    this.rAFID = window.requestAnimationFrame(rAF);\n  },\n  deactivated () {\n    window.cancelAnimationFrame(this.rAFID);\n    this.clean();\n  },\n  methods: {\n    handleClick (event) {\n      this.$emit('click', {\n        event,\n        intersects: this.raycast()\n      })\n    },\n    handleMV (event) {\n      this.mouse.x = (event.clientX / window.innerWidth) * 2 - 1;\n\t    this.mouse.y = - (event.clientY / window.innerHeight) * 2 + 1;\n    }\n    \n  }\n}\n</script>\n\n<style>\n\n</style>\n"},{"path":"@/webgl/Material/MeshPhongMaterial.vue","src":"<template>\n<div class=\"mesh-phong-material\"></div>\n</template>\n\n<script>\nvar THREE = window.THREE;\n\nexport default {\n  props: {\n    color: {\n      default () {\n        return Math.random() * 0xffffff\n      }\n    }\n  },\n  data () {\n    return {\n      material: false\n    }\n  },\n  created () {\n    this.material = new THREE.MeshPhongMaterial({\n      color: new THREE.Color(this.color),\n      specular: new THREE.Color(0x111111),\n      shininess: 50\n    })\n    this.$parent.$emit('material', this.material)\n  }\n}\n</script>\n\n<style>\n\n</style>\n"},{"path":"@/webgl/Material/ShaderMaterial.vue","src":"<template>\n<div class=\"mesh-basic-material\"></div>\n</template>\n\n<script>\nvar THREE = window.THREE;\n\nexport default {\n  data () {\n    return {\n      material: false\n    }\n  },\n  props: {\n    vs: {\n      default:\n`void main ( void ) {\n  vec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\n  vec4 outputPos = projectionMatrix * mvPosition;\n  gl_Position = outputPos;\n}`\n    },\n    fs: {\n      default:\n`void main () {\n  gl_FragColor = vec4(vec3(0.5), 1.0);\n}`\n    },\n    uniforms: {\n      default () {\n        return {}\n      }\n    }\n  },\n  watch: {\n    vs () { this.initShader() },\n    fs () { this.initShader() },\n    uniforms () { this.initShader() }\n  },\n  mounted () {\n    this.initShader()\n  },\n  methods: {\n    initShader () {\n      try {\n        this.material = new THREE.ShaderMaterial({\n          uniforms: {\n            ...this.uniforms// ,\n            // ...THREE.UniformsUtils.merge([\n            //   THREE.UniformsLib.common,\n            //   THREE.UniformsLib.aomap,\n            //   THREE.UniformsLib.lightmap,\n            //   THREE.UniformsLib.emissivemap,\n            //   THREE.UniformsLib.bumpmap,\n            //   THREE.UniformsLib.normalmap,\n            //   THREE.UniformsLib.displacementmap,\n            //   THREE.UniformsLib.fog,\n            //   THREE.UniformsLib.lights,\n            //   THREE.UniformsLib.shadowmap,\n            //   {\n            //     flipEnvMap: {\n            //       value: 1\n            //     },\n            //     emissive: {\n            //       value: new THREE.Color(0x000000)\n            //     },\n            //     specular: {\n            //       value: new THREE.Color(0x111111)\n            //     },\n            //     shininess: {\n            //       value: 30\n            //     },\n            //     envMap: {\n            //       // value: cubeCamera.renderTarget\n            //     }\n            //   }\n            // ])\n          },\n          vertexShader: this.vs || this.$options.props.vs.default,\n          fragmentShader: this.fs || this.$options.props.fs.default\n        })\n        this.$parent.$emit('material', this.material)\n      } catch (e) {\n        console.log(e)\n      }\n    }\n  }\n}\n</script>\n\n<style>\n\n</style>\n"},{"path":"@/webgl/Element/PointLight.vue","src":"<template>\n  <div class=\"light-point\"></div>\n</template>\n\n<script>\nvar THREE = window.THREE;\n\nexport default {\n  props: {\n    color: {\n      default () {\n        return 0xffffff\n      }\n    }\n  },\n  data () {\n    return {\n      light: false\n    }\n  },\n  mounted () {\n    this.light = new THREE.PointLight({ color: new THREE.Color(this.color) })\n    this.$emit('element', this.light)\n    this.$parent.$emit('add', this.light)\n  },\n  beforeDestroy () {\n    this.$parent.$emit('remove', this.light)\n  }\n}\n</script>\n\n<style>\n\n</style>\n"},{"path":"@/webgl/Element/Object3D.vue","src":"<template>\n<div class=\"object-3d\"><slot></slot></div>\n</template>\n\n<script>\nvar THREE = window.THREE;\nexport default {\n  data () {\n    return {\n      object3d: false\n    }\n  },\n  props: {\n    visible: { default: true },\n    px: { default: 0 },\n    py: { default: 0 },\n    pz: { default: 0 },\n\n    sx: { default: 1 },\n    sy: { default: 1 },\n    sz: { default: 1 },\n\n    rx: { default: 0 },\n    ry: { default: 0 },\n    rz: { default: 0 }\n  },\n  watch: {\n    visible () { this.object3d.setVisible(this.visible) },\n    px () { this.updatePosition('x', this.px) },\n    py () { this.updatePosition('y', this.py) },\n    pz () { this.updatePosition('z', this.pz) },\n\n    sx () { this.updateScale('x', this.sx) },\n    sy () { this.updateScale('y', this.sy) },\n    sz () { this.updateScale('z', this.sz) },\n\n    rx () { this.updateRotation('x', this.rx) },\n    ry () { this.updateRotation('y', this.ry) },\n    rz () { this.updateRotation('z', this.rz) }\n  },\n  created () {\n    this.object3d = new THREE.Object3D()\n    this.$emit('element', this.object3d)\n    this.object3d.visible = true\n    this.updatePosition()\n    this.updateScale()\n    this.updateRotation()\n    this.$on('add', (v) => {\n      this.object3d.add(v)\n    })\n    this.$on('remove', (v) => {\n      this.object3d.remove(v)\n    })\n  },\n  mounted () {\n    this.$parent.$emit('add', this.object3d)\n  },\n  beforeDestroy () {\n    this.$parent.$emit('remove', this.object3d)\n  },\n  methods: {\n    updatePosition (key, val) {\n      if (key) {\n        this.object3d.position[key] = val\n      } else {\n        this.object3d.position.set(this.px, this.py, this.pz)\n      }\n    },\n    updateScale (key, val) {\n      if (key) {\n        this.object3d.scale[key] = val\n      } else {\n        this.object3d.scale.set(this.sx, this.sy, this.sz)\n      }\n    },\n    updateRotation (key, val) {\n      if (key) {\n        this.object3d.rotation[key] = val\n      } else {\n        this.object3d.rotation.set(this.rx, this.ry, this.rz)\n      }\n    }\n  }\n}\n</script>\n\n<style>\n\n</style>\n"},{"path":"@/webgl/Element/Points.vue","src":"<template>\n  <div class=\"points\">\n    <slot>\n    </slot>\n  </div>\n</template>\n\n<script>\nimport THREE from '@/three.js'\n\nexport default {\n  props: {\n    position: {}\n  },\n  data () {\n    return {\n      element: false,\n      points: false,\n      material: false,\n      geometry: false\n    }\n  },\n  created () {\n    this.element = this.points = new THREE.Points()\n    this.$parent.$emit('add', this.points)\n    this.$emit('element', this.points)\n    this.$on('material', (v) => {\n      this.material = v\n      this.tryUpdateMaterial()\n    })\n    this.$on('geometry', (v) => {\n      this.geometry = v\n      this.tryUpdateGeometry()\n    })\n  },\n  beforeDestroy () {\n    this.uninstall()\n  },\n  methods: {\n    tryUpdateGeometry (v) {\n      if (this.points) {\n        this.points.geometry = this.geometry\n      }\n    },\n    tryUpdateMaterial (v) {\n      if (this.points) {\n        this.points.material = this.material\n      }\n    },\n    uninstall () {\n      this.$parent.$emit('remove', this.points)\n    }\n  }\n}\n</script>\n\n<style>\n\n</style>\n"},{"path":"@/webgl/Element/Mesh.vue","src":"<template>\n  <div class=\"mesh\">\n    <slot>\n    </slot>\n  </div>\n</template>\n\n<script>\nvar THREE = window.THREE;\nexport default {\n  props: {\n  },\n  data () {\n    return {\n      element: false,\n      mesh: false,\n      material: false,\n      geometry: false\n    }\n  },\n  created () {\n    this.element = this.mesh = new THREE.Mesh()\n    this.$parent.$emit('add', this.mesh)\n    this.$emit('element', this.mesh)\n\n    this.$on('material', (v) => {\n      this.material = v\n      this.tryUpdateMaterial()\n    })\n    this.$on('geometry', (v) => {\n      this.geometry = v\n      this.tryUpdateGeometry()\n    })\n  },\n  beforeDestroy () {\n    this.uninstall()\n  },\n  methods: {\n    tryUpdateGeometry (v) {\n      if (this.mesh) {\n        this.mesh.geometry = this.geometry\n      }\n    },\n    tryUpdateMaterial (v) {\n      if (this.mesh) {\n        this.mesh.material = this.material\n      }\n    },\n    uninstall () {\n      this.$parent.$emit('remove', this.mesh)\n    }\n  }\n}\n</script>\n\n<style>\n\n</style>\n"},{"path":"@/webgl/Geo/SphereBufferGeometry.vue","src":"<template>\n  <div class=\"geo-sphere\"></div>\n</template>\n\n<script>\nvar THREE = window.THREE\nexport default {\n  data () {\n    return {\n      geometry: false\n    }\n  },\n  mounted () {\n    let geometry = new THREE.SphereBufferGeometry(2, 256, 256)\n    this.$parent.$emit('geometry', geometry)\n  }\n}\n</script>\n\n<style>\n\n</style>\n"},{"path":"@/shader/Simple/vs.vert","src":"varying vec3 vPos;\nuniform float time;\n\nvoid main (void) {\n  vPos = position;\n  vPos.x = vPos.x + sin(vPos.x + time);\n  vPos.y = vPos.y + cos(vPos.y + time);\n  vPos.z = vPos.z + tan(vPos.z + time);\n  \n  vec4 mvPosition = modelViewMatrix * vec4(position, 1.0);\n  vec4 outputPos = projectionMatrix * mvPosition;\n  gl_Position = outputPos;\n}"},{"path":"@/shader/Simple/fs.frag","src":"varying vec3 vPos;\n\nvoid main () {\n  gl_FragColor = vec4(vec3(vPos), 1.0);\n}"},{"path":"@/shader/Fling/vs.vert","src":"varying vec3 vPos;\nuniform float time;\n\nvoid main (void) {\n  vPos = position;\n  vPos.x = vPos.x + sin(vPos.x + time);\n  vPos.y = vPos.y + cos(vPos.y + time);\n  vPos.z = vPos.z + tan(vPos.z + time);\n  \n  vec4 mvPosition = modelViewMatrix * vec4(vPos, 1.0);\n  vec4 outputPos = projectionMatrix * mvPosition;\n  gl_Position = outputPos;\n}"},{"path":"@/three.js","src":"var THREE = window.THREE\nexport default THREE\n"}],"date":"Thu Feb 15 2018 22:02:40 GMT+0800 (HKT)"},{"currentFilePath":"@/index.html","openedFiles":[{"path":"@/index.html"}],"files":[{"path":"@/index.html","src":"<!DOCTYPE html>\n<html>\n  <head>\n    <meta charset=\"UTF-8\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge,chrome=1\">\n    <meta name=\"viewport\" content=\"width=device-width,initial-scale=1\">\n\n    <title>WebGL</title>\n\n    <meta name=\"author\" content=\"loklok\">\n    <meta name=\"description\" content=\"WebGL Art\">\n    <meta name=\"keywords\" content=\"WebGL, Art\">\n\n    <style type=\"text/css\">\n    </style>\n\n  </head>\n  <body>\n    <div id=\"app-attach-point\"></div>\n    \n    \n    \n    <script required src=\"https://cdnjs.cloudflare.com/ajax/libs/vue/2.5.2/vue.min.js\"></script>\n    <script required src=\"https://cdnjs.cloudflare.com/ajax/libs/vue-router/3.0.1/vue-router.min.js\"></script>\n    <script required src=\"https://cdnjs.cloudflare.com/ajax/libs/tween.js/16.3.5/Tween.min.js\"></script>\n    <script required src=\"https://cdnjs.cloudflare.com/ajax/libs/three.js/88/three.min.js\" integrity=\"sha256-6fhm481uY9c152qGWIVgE7KbzaCj5WjCi3BGIpZef2E=\" crossorigin=\"anonymous\"></script>\n    <script required src=\"https://threejs.org/examples/js/GPUComputationRenderer.js\"></script>\n  </body>\n</html>\n"},{"path":"@/style.css","src":"html, body {\n  width: 100%;\n  height: 100%;\n  margin: 0px;\n  padding: 0px;\n}\nhtml, body, #app {\n  box-sizing: border-box;\n  width: 100%;\n  height: 100%;\n  overflow: hidden;\n}\n.full{\n  width: 100%;\n  height: 100%;\n}"},{"path":"@/main.js","src":"import '@/style.css'\nimport App from '@/app.vue'\nimport router from '@/router.js'\n\nvar oldDOM = document.querySelector('#app-attach-point');\nvar newDOM = document.createElement('div');\nnewDOM.id = '#app-attach-point';\ndocument.body.appendChild(newDOM);\nvar target = oldDOM || newDOM;\n\nvar app = new Vue({\n  router,\n  el: target,\n  components: {\n    App\n  },\n  template: '<div id=\"app\"><App /></div>'\n})\n\nwindow.addEventListener('message', (evt) => {\n  var { type, data } = evt.data;\n  window.dispatchEvent(new CustomEvent(type, { detail: data }))\n}, false);\n\nwindow.addEventListener('slider', ({ detail }) => {\n  console.log(detail);\n  (window.opener || window.top).dispatchEvent(new CustomEvent('loklok', { detail: { rand: Math.random() } }))\n});\n\nexport default app;\n"},{"path":"@/router.js","src":"import Player from '@/webgl/layout/Player.vue'\nimport Home from '@/webgl/pages/Home.vue'\nimport Happy from '@/webgl/pages/Happy.vue'\n\nconst router = new VueRouter({\n  mode: 'hash',\n  routes: [\n    {\n      path: '/',\n      component: Player,\n      children: [\n        {\n          path: '',\n          component: Home\n        },\n        {\n          path: 'happy',\n          component: Happy\n        }\n      ]\n    }\n  ]\n})\n\nexport default router\n"},{"path":"@/app.vue","src":"<template>\n  <div>\n    <router-view></router-view>\n  </div>\n</template>\n\n<script>\nimport THREE from '@/three.js'\n\nexport default {\n  data () {\n    return {\n      \n    }\n  },\n  created () {\n    \n  },\n  beforeDestroy () {\n    \n  },\n  methods: {\n    \n  }\n}\n</script>\n\n<style>\n\n</style>\n"},{"path":"@/webgl/layout/Player.vue","src":"<template>\n  <div class=\"full\" ref=\"full\">\n\n    <Renderer\n      ref=\"renderer\"\n      :size=\"size\"\n      @renderer=\"(v) => { renderer = v }\"\n      @toucher=\"(v) => { toucher = v }\"\n    >\n    </Renderer>\n    \n    <keep-alive>\n      <component\n        class=\"hidden\"\n        :is=\"'router-view'\"\n        v-if=\"renderer\"\n        :size=\"size\"\n        :toucher=\"toucher\"\n        :renderer=\"renderer\"\n      >\n      </component>\n    </keep-alive>\n\n  </div>\n</template>\n\n<script>\nimport Bundle from '@/webgl/Bundle.js';\n\nexport default {\n  components: {\n    ...Bundle\n  },\n  computed: {\n  },\n  methods: {\n    \n  },\n  data () {\n    return {\n      toucher: false,\n      resizer: () => {},\n      renderer: false,\n      size: {\n        width: 100,\n        height: 100,\n        aspect: 1\n      }\n    }\n  },\n  created () {\n    \n  },\n  mounted () {\n    var resizer = this.resizer = () => {\n      this.$nextTick(() => {\n        var rect = this.$refs.full.getBoundingClientRect()\n        this.size = {\n          width: rect.width,\n          height: rect.height,\n          aspect: rect.width / rect.height\n        }\n      })\n    }\n    window.addEventListener('resize', resizer.bind(this))\n    resizer()\n  }\n}\n</script>\n\n<style scoped>\n.hidden{\n  display: none;\n}\n.full{\n  width: 100%;\n  height: 100%;\n}\n</style>\n"},{"path":"@/webgl/pages/Home.vue","src":"<template>\n  <div class=\"\">\n    <PerspectiveCamera\n      :fov=\"75\"\n      :aspect=\"size.aspect\"\n      :near=\"1\"\n      :far=\"1000\"\n      :position=\"{ x: 0, y: 0, z: 15 }\"\n      @camera=\"(v) => { camera = v; }\"\n    />\n    \n    <Scene @scene=\"(v) => { scene = v }\">\n      <Object3D pz=\"10\">\n        <PointLight />\n      </Object3D>\n      \n      <Object3D pz=\"0\">\n        <Mesh>\n          <SphereBufferGeometry />\n          <ShaderMaterial :vs=\"simpleVS\" :fs=\"simpleFS\" :uniforms=\"animatable\" />\n        </Mesh>\n      </Object3D>\n    </Scene>\n    \n    <Raycaster v-if=\"camera && toucher && scene\" :scene=\"scene\" :toucher=\"toucher\" :camera=\"camera\" @found=\"(v) => { found = v; }\" @click=\"onClick\">\n    </Raycaster>\n    \n  </div>\n</template>\n\n<script>\nimport Bundle from '@/webgl/Bundle.js';\n\nimport simpleVS from '@/shader/Simple/vs.vert'\nimport simpleFS from '@/shader/Simple/fs.frag'\n\nexport default {\n  name: 'Home',\n  props: {\n    toucher: {},\n    size: {},\n    renderer: {},\n    doc: {}\n  },\n  components: {\n    ...Bundle\n  },\n  computed: {\n  },\n  data () {\n    return {\n      cam: {\n        pos: { x: 3, y: 5, z: 10 }\n      },\n      ready: false,\n      cubeCamera: false,\n      visible: true,\n      resizer: () => {},\n      scene: false,\n      camera: false,\n      \n      found: [],\n      \n      animatable: {\n        time: { value: 0 }\n      },\n      simpleVS,\n      simpleFS\n      \n    }\n  },\n  methods: {\n    onClick ({ event, intersects }) {\n      this.$router.push({\n        path: '/happy'\n      })\n      this.$forceUpdate()\n      console.log('Click to happy');\n    },\n    setup () {\n    },\n    renderWebGL () {\n      TWEEN.update()\n      \n      this.animatable.time.value += 0.01;\n      \n      if (this.scene && this.camera && this.renderer) {\n        this.renderer.render(this.scene, this.camera)\n      }\n    }\n  },\n  watch: {\n    camera () {\n      if (this.camera && this.renderer) {\n        this.ready = true\n      }\n    },\n    renderer () {\n      if (this.camera && this.renderer) {\n        this.ready = true\n      }\n    },\n    ready () {\n      if (this.ready) {\n        this.setup()\n      }\n    }\n  },\n  created () {\n    \n  },\n  activated () {\n    var self = this\n    function loop (rAFT) {\n      self.rAFID = window.requestAnimationFrame(loop)\n      self.renderWebGL(rAFT)\n    }\n    self.rAFID = window.requestAnimationFrame(loop)\n  },\n  deactivated () {\n    window.cancelAnimationFrame(this.rAFID)\n  }\n}\n</script>\n\n<style scoped>\n.full{\n  width: 100%;\n  height: 100%;\n}\n</style>\n"},{"path":"@/webgl/pages/Happy.vue","src":"<template>\n  <div class=\"\">\n\n    <PerspectiveCamera\n      :fov=\"75\"\n      :aspect=\"size.aspect\"\n      :near=\"1\"\n      :far=\"1000\"\n      :position=\"{ x: 0, y: 0, z: 15 }\"\n      @camera=\"(v) => { camera = v; }\"\n    />\n    \n    <Scene @scene=\"(v) => { scene = v }\">\n      <Object3D pz=\"10\">\n        <PointLight />\n      </Object3D>\n      \n      <Object3D pz=\"0\">\n        <Points @element=\"(v) => { v.$skipRayCast = true }\">\n          <SphereBufferGeometry />\n          <ShaderMaterial :vs=\"simpleVS2\" :fs=\"simpleFS\" :uniforms=\"animatable\" />\n        </Points>\n      </Object3D>\n      \n      <Object3D pz=\"1\">\n        <Mesh>\n          <SphereBufferGeometry />\n          <ShaderMaterial :vs=\"simpleVS\" :fs=\"simpleFS\" :uniforms=\"animatable\" />\n        </Mesh>\n      </Object3D>\n    </Scene>\n    \n    <Raycaster v-if=\"renderer && camera && toucher && scene\" :scene=\"scene\" :toucher=\"toucher\" :camera=\"camera\" @found=\"(v) => { found = v; }\" @click=\"onClick\">\n    </Raycaster>\n\n  </div>\n</template>\n\n<script>\nimport Bundle from '@/webgl/Bundle.js';\n\nimport simpleVS2 from '@/shader/Fling/vs.vert'\nimport simpleVS from '@/shader/Simple/vs.vert'\nimport simpleFS from '@/shader/Simple/fs.frag'\n\nexport default {\n  name: 'Happy',\n  props: {\n    toucher: {},\n    size: {},\n    renderer: {},\n    doc: {}\n  },\n  components: {\n    ...Bundle\n  },\n  computed: {\n  },\n  data () {\n    return {\n      cam: {\n        pos: { x: 3, y: 5, z: 10 }\n      },\n      ready: false,\n      cubeCamera: false,\n      visible: true,\n      resizer: () => {},\n      scene: false,\n      camera: false,\n      \n      found: [],\n      \n      animatable: {\n        time: { value: 0 }\n      },\n      simpleVS,\n      simpleFS,\n      simpleVS2\n      \n    }\n  },\n  methods: {\n    onClick ({ event, intersects }) {\n      console.log(event, intersects)\n      this.$router.push('/')\n    },\n    setup () {\n    },\n    renderWebGL () {\n      TWEEN.update()\n      \n      this.animatable.time.value += 0.01;\n      \n      if (this.scene && this.camera && this.renderer) {\n        this.renderer.render(this.scene, this.camera)\n      }\n    }\n  },\n  watch: {\n    camera () {\n      if (this.camera && this.renderer) {\n        this.ready = true\n      }\n    },\n    renderer () {\n      if (this.camera && this.renderer) {\n        this.ready = true\n      }\n    },\n    ready () {\n      if (this.ready) {\n        this.setup()\n      }\n    }\n  },\n  created () {\n    \n  },\n  activated () {\n    var self = this\n    function loop (rAFT) {\n      self.rAFID = window.requestAnimationFrame(loop)\n      self.renderWebGL(rAFT)\n    }\n    self.rAFID = window.requestAnimationFrame(loop)\n  },\n  deactivated () {\n    window.cancelAnimationFrame(this.rAFID);\n    console.log('cancel animation frame')\n  }\n}\n</script>\n\n<style scoped>\n.full{\n  width: 100%;\n  height: 100%;\n}\n</style>\n"},{"path":"@/webgl/sample.vue","src":"<template>\n  <div class=\"full\">\n\n    <Renderer\n      ref=\"renderer\"\n      :size=\"size\"\n      @renderer=\"(v) => { renderer = v }\"\n    >\n    </Renderer>\n\n    <PerspectiveCamera\n      :fov=\"75\"\n      :aspect=\"size.aspect\"\n      :near=\"1\"\n      :far=\"1000\"\n      :position=\"{ x: 0, y: 0, z: 10 }\"\n      @camera=\"(v) => { camera = v; }\"\n    />\n\n    <Scene @scene=\"(v) => { scene = v }\">\n      <Object3D pz=\"10\">\n        <PointLight />\n      </Object3D>\n      \n      <Object3D pz=\"0\">\n        <Points>\n          <SphereBufferGeometry />\n          <ShaderMaterial :vs=\"simpleVS\" :fs=\"simpleFS\" :uniforms=\"animatable\" />\n        </Points>\n      </Object3D>\n      \n    </Scene>\n\n  </div>\n</template>\n\n<script>\nimport Bundle from '@/webgl/Bundle.js';\nimport simpleVS from '@/shader/Simple/vs.vert'\nimport simpleFS from '@/shader/Simple/fs.frag'\n\nexport default {\n  components: {\n    ...Bundle\n  },\n  computed: {\n  },\n  methods: {\n    renderWebGL () {\n      this.animatable.time.value = window.performance.now() * 0.001;\n      \n      if (this.scene && this.camera && this.renderer) {\n        this.renderer.render(this.scene, this.camera)\n      }\n    }\n  },\n  data () {\n    return {\n      animatable: {\n        time: { value: 0 }\n      },\n      simpleVS,\n      simpleFS,\n      size: {\n        width: window.innerWidth,\n        height: window.innerHeight,\n        aspect: window.innerWidth / window.innerHeight\n      },\n      renderer: false,\n      scene: false,\n      camera: false\n    }\n  },\n  created () {\n    \n  },\n  mounted () {\n    var self = this\n    function loop () {\n      self.rAFID = window.requestAnimationFrame(loop)\n      self.renderWebGL()\n    }\n    self.rAFID = window.requestAnimationFrame(loop)\n  }\n}\n</script>\n\n<style scoped>\n.full{\n  width: 100%;\n  height: 100%;\n}\n</style>\n"},{"path":"@/webgl/Bundle.js","src":"import Renderer from '@/webgl/System/Renderer.vue';\nimport Scene from '@/webgl/System/Scene.vue';\nimport PerspectiveCamera from '@/webgl/System/PerspectiveCamera.vue';\nimport Raycaster from '@/webgl/System/Raycaster.vue';\n\nimport MeshPhongMaterial from '@/webgl/Material/MeshPhongMaterial.vue';\nimport ShaderMaterial from '@/webgl/Material/ShaderMaterial.vue';\n\nimport Object3D from '@/webgl/Element/Object3D.vue';\nimport Mesh from '@/webgl/Element/Mesh.vue';\nimport Points from '@/webgl/Element/Points.vue';\nimport PointLight from '@/webgl/Element/PointLight.vue';\n\nimport SphereBufferGeometry from '@/webgl/Geo/SphereBufferGeometry.vue';\n\n\nexport default {\n  //materials\n  MeshPhongMaterial,\n  ShaderMaterial,\n  \n  //system\n  Renderer,\n  Scene,\n  PerspectiveCamera,\n  Raycaster,\n  \n  //Elemnts\n  PointLight,\n  Points,\n  Object3D,\n  Mesh,\n  \n  //Geo\n  SphereBufferGeometry\n}\n"},{"path":"@/webgl/System/Renderer.vue","src":"<template>\n  <div class=\"full pos-rel\">\n    <div class=\"full layer\" ref=\"mounter\"></div>\n    <div class=\"full layer\" ref=\"toucher\"><slot></slot></div>\n  </div>\n</template>\n\n<script>\nvar THREE = window.THREE\n\nexport default {\n  data () {\n    return {\n      // THREE,\n      renderer: false\n    }\n  },\n  props: {\n    size: { default () { return { width: 500, height: 500 } } },\n    alpha: { default: true },\n    antialias: { default: true }\n  },\n  mounted () {\n    this.renderer = new THREE.WebGLRenderer({\n      alpha: this.alpha,\n      antialias: this.antialias\n    })\n    this.resize()\n    this.renderer.domElement.style.marginBottom = '-6px'\n    this.$refs.mounter.appendChild(this.renderer.domElement)\n    \n    this.$emit('toucher', this.$refs['toucher'])\n    this.$emit('renderer', this.renderer)\n  },\n  beforeDestroy () {\n    this.$refs.mounter.removeChild(this.renderer.domElement)\n  },\n  watch: {\n    size () {\n      this.resize()\n    }\n  },\n  methods: {\n    resize () {\n      let ratio = window.devicePixelRatio || 1\n      this.renderer.setPixelRatio(ratio)\n      this.renderer.setSize(this.size.width, this.size.height)\n    }\n  }\n}\n</script>\n\n<style scoped>\n.full{\n  width: 100%;\n  height: 100%;\n}\n.pos-rel{\n  position: relative;\n}\n.layer{\n  position: absolute;\n  top: 0px;\n  left: 0px;\n}\n</style>\n"},{"path":"@/webgl/System/Scene.vue","src":"<template>\n  <div ref=\"mounter\" class=\"mounter\"><slot></slot></div>\n</template>\n\n<script>\nvar THREE = window.THREE\nexport default {\n  data () {\n    return {\n      scene: false\n    }\n  },\n  props: {\n    size: { default () { return { width: 500, height: 500 } } },\n    alpha: { default: true },\n    antialias: { default: true }\n  },\n  created () {\n    this.scene = new THREE.Scene()\n    this.$on('add', (v) => {\n      this.scene.add(v)\n    })\n    this.$on('remove', (v) => {\n      this.scene.remove(v)\n    })\n  },\n  mounted () {\n    this.$emit('scene', this.scene)\n  }\n}\n</script>\n\n<style scoped>\n.mounter {\n  display: none;\n}\n</style>\n"},{"path":"@/webgl/System/PerspectiveCamera.vue","src":"<script>\nvar THREE = window.THREE;\nexport default {\n  abstract: true,\n  render () {\n    return null\n  },\n  props: ['fov', 'aspect', 'near', 'far', 'position'],\n  data () {\n    return {\n      camera: null\n    }\n  },\n  created () {\n    this.camera = new THREE.PerspectiveCamera(this.fov, this.aspect, this.near, this.far)\n\n    if (this.position) {\n      this.camera.position.x = this.position.x\n      this.camera.position.y = this.position.y\n      this.camera.position.z = this.position.z\n    }\n    this.$emit('camera', this.camera)\n  },\n  watch: {\n    position () {\n      if (this.position) {\n        this.camera.position.x = this.position.x\n        this.camera.position.y = this.position.y\n        this.camera.position.z = this.position.z\n      }\n    },\n    aspect () {\n      if (this.camera) {\n        this.camera.aspect = this.aspect\n        this.camera.updateProjectionMatrix()\n      }\n    }\n  }\n}\n</script>\n\n<style scoped>\n.perspective-camera{\n  display: none;\n}\n</style>\n"},{"path":"@/webgl/System/Raycaster.vue","src":"<template>\n<div></div>\n</template>\n\n<script>\n\nexport default {\n  data () {\n    return {\n      rAFID: 0,\n      mouse: null,\n      raycast () {},\n      clean () {},\n      intersects: []\n    }\n  },\n  props: {\n    scene: {},\n    camera: {},\n    toucher: {}\n  },\n  created () {\n  },\n  activated () {\n    var raycaster = new THREE.Raycaster();\n    this.mouse = new THREE.Vector2();\n    \n    this.toucher.addEventListener('mousemove', this.handleMV, false);\n    this.toucher.addEventListener('click', this.handleClick, false);\n    this.clean = () => {\n      this.toucher.removeEventListener('click', this.handleClick, false);\n      this.toucher.removeEventListener('mousemove', this.handleMV);\n    }\n    \n    var raycast = () => {\n      var mouse = this.mouse;\n      var scene = this.scene;\n      var camera = this.camera;\n      \n      var restore = [];\n      this.scene.traverse((ele) => {\n        if (ele.$skipRayCast) {\n          restore.push({\n            parent: ele.parent,\n            ele: ele\n          })\n          ele.parent.remove(ele);\n        }\n      })\n      \n      \n    \t// update the picking ray with the camera and mouse position\n    \traycaster.setFromCamera( mouse, camera );\n    \t// calculate objects intersecting the picking ray\n    \tvar intersects = raycaster.intersectObjects( scene.children, true );\n    \t\n    \trestore.forEach((item) => {\n        item.parent.add(item.ele);\n      })\n    \t\n    \treturn intersects\n  \t};\n    this.raycast = raycast; \n    \n    var rAF = () => {\n      this.rAFID = window.requestAnimationFrame(rAF);\n      // this.raycast();\n    }\n    this.rAFID = window.requestAnimationFrame(rAF);\n  },\n  deactivated () {\n    window.cancelAnimationFrame(this.rAFID);\n    this.clean();\n  },\n  methods: {\n    handleClick (event) {\n      this.$emit('click', {\n        event,\n        intersects: this.raycast()\n      })\n    },\n    handleMV (event) {\n      this.mouse.x = (event.clientX / window.innerWidth) * 2 - 1;\n\t    this.mouse.y = - (event.clientY / window.innerHeight) * 2 + 1;\n    }\n    \n  }\n}\n</script>\n\n<style>\n\n</style>\n"},{"path":"@/webgl/Material/MeshPhongMaterial.vue","src":"<template>\n<div class=\"mesh-phong-material\"></div>\n</template>\n\n<script>\nvar THREE = window.THREE;\n\nexport default {\n  props: {\n    color: {\n      default () {\n        return Math.random() * 0xffffff\n      }\n    }\n  },\n  data () {\n    return {\n      material: false\n    }\n  },\n  created () {\n    this.material = new THREE.MeshPhongMaterial({\n      color: new THREE.Color(this.color),\n      specular: new THREE.Color(0x111111),\n      shininess: 50\n    })\n    this.$parent.$emit('material', this.material)\n  }\n}\n</script>\n\n<style>\n\n</style>\n"},{"path":"@/webgl/Material/ShaderMaterial.vue","src":"<template>\n<div class=\"mesh-basic-material\"></div>\n</template>\n\n<script>\nvar THREE = window.THREE;\n\nexport default {\n  data () {\n    return {\n      material: false\n    }\n  },\n  props: {\n    vs: {\n      default:\n`void main ( void ) {\n  vec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\n  vec4 outputPos = projectionMatrix * mvPosition;\n  gl_Position = outputPos;\n}`\n    },\n    fs: {\n      default:\n`void main () {\n  gl_FragColor = vec4(vec3(0.5), 1.0);\n}`\n    },\n    uniforms: {\n      default () {\n        return {}\n      }\n    }\n  },\n  watch: {\n    vs () { this.initShader() },\n    fs () { this.initShader() },\n    uniforms () { this.initShader() }\n  },\n  mounted () {\n    this.initShader()\n  },\n  methods: {\n    initShader () {\n      try {\n        this.material = new THREE.ShaderMaterial({\n          uniforms: {\n            ...this.uniforms// ,\n            // ...THREE.UniformsUtils.merge([\n            //   THREE.UniformsLib.common,\n            //   THREE.UniformsLib.aomap,\n            //   THREE.UniformsLib.lightmap,\n            //   THREE.UniformsLib.emissivemap,\n            //   THREE.UniformsLib.bumpmap,\n            //   THREE.UniformsLib.normalmap,\n            //   THREE.UniformsLib.displacementmap,\n            //   THREE.UniformsLib.fog,\n            //   THREE.UniformsLib.lights,\n            //   THREE.UniformsLib.shadowmap,\n            //   {\n            //     flipEnvMap: {\n            //       value: 1\n            //     },\n            //     emissive: {\n            //       value: new THREE.Color(0x000000)\n            //     },\n            //     specular: {\n            //       value: new THREE.Color(0x111111)\n            //     },\n            //     shininess: {\n            //       value: 30\n            //     },\n            //     envMap: {\n            //       // value: cubeCamera.renderTarget\n            //     }\n            //   }\n            // ])\n          },\n          vertexShader: this.vs || this.$options.props.vs.default,\n          fragmentShader: this.fs || this.$options.props.fs.default\n        })\n        this.$parent.$emit('material', this.material)\n      } catch (e) {\n        console.log(e)\n      }\n    }\n  }\n}\n</script>\n\n<style>\n\n</style>\n"},{"path":"@/webgl/Element/PointLight.vue","src":"<template>\n  <div class=\"light-point\"></div>\n</template>\n\n<script>\nvar THREE = window.THREE;\n\nexport default {\n  props: {\n    color: {\n      default () {\n        return 0xffffff\n      }\n    }\n  },\n  data () {\n    return {\n      light: false\n    }\n  },\n  mounted () {\n    this.light = new THREE.PointLight({ color: new THREE.Color(this.color) })\n    this.$emit('element', this.light)\n    this.$parent.$emit('add', this.light)\n  },\n  beforeDestroy () {\n    this.$parent.$emit('remove', this.light)\n  }\n}\n</script>\n\n<style>\n\n</style>\n"},{"path":"@/webgl/Element/Object3D.vue","src":"<template>\n<div class=\"object-3d\"><slot></slot></div>\n</template>\n\n<script>\nvar THREE = window.THREE;\nexport default {\n  data () {\n    return {\n      object3d: false\n    }\n  },\n  props: {\n    visible: { default: true },\n    px: { default: 0 },\n    py: { default: 0 },\n    pz: { default: 0 },\n\n    sx: { default: 1 },\n    sy: { default: 1 },\n    sz: { default: 1 },\n\n    rx: { default: 0 },\n    ry: { default: 0 },\n    rz: { default: 0 }\n  },\n  watch: {\n    visible () { this.object3d.setVisible(this.visible) },\n    px () { this.updatePosition('x', this.px) },\n    py () { this.updatePosition('y', this.py) },\n    pz () { this.updatePosition('z', this.pz) },\n\n    sx () { this.updateScale('x', this.sx) },\n    sy () { this.updateScale('y', this.sy) },\n    sz () { this.updateScale('z', this.sz) },\n\n    rx () { this.updateRotation('x', this.rx) },\n    ry () { this.updateRotation('y', this.ry) },\n    rz () { this.updateRotation('z', this.rz) }\n  },\n  created () {\n    this.object3d = new THREE.Object3D()\n    this.$emit('element', this.object3d)\n    this.object3d.visible = true\n    this.updatePosition()\n    this.updateScale()\n    this.updateRotation()\n    this.$on('add', (v) => {\n      this.object3d.add(v)\n    })\n    this.$on('remove', (v) => {\n      this.object3d.remove(v)\n    })\n  },\n  mounted () {\n    this.$parent.$emit('add', this.object3d)\n  },\n  beforeDestroy () {\n    this.$parent.$emit('remove', this.object3d)\n  },\n  methods: {\n    updatePosition (key, val) {\n      if (key) {\n        this.object3d.position[key] = val\n      } else {\n        this.object3d.position.set(this.px, this.py, this.pz)\n      }\n    },\n    updateScale (key, val) {\n      if (key) {\n        this.object3d.scale[key] = val\n      } else {\n        this.object3d.scale.set(this.sx, this.sy, this.sz)\n      }\n    },\n    updateRotation (key, val) {\n      if (key) {\n        this.object3d.rotation[key] = val\n      } else {\n        this.object3d.rotation.set(this.rx, this.ry, this.rz)\n      }\n    }\n  }\n}\n</script>\n\n<style>\n\n</style>\n"},{"path":"@/webgl/Element/Points.vue","src":"<template>\n  <div class=\"points\">\n    <slot>\n    </slot>\n  </div>\n</template>\n\n<script>\nimport THREE from '@/three.js'\n\nexport default {\n  props: {\n    position: {}\n  },\n  data () {\n    return {\n      element: false,\n      points: false,\n      material: false,\n      geometry: false\n    }\n  },\n  created () {\n    this.element = this.points = new THREE.Points()\n    this.$parent.$emit('add', this.points)\n    this.$emit('element', this.points)\n    this.$on('material', (v) => {\n      this.material = v\n      this.tryUpdateMaterial()\n    })\n    this.$on('geometry', (v) => {\n      this.geometry = v\n      this.tryUpdateGeometry()\n    })\n  },\n  beforeDestroy () {\n    this.uninstall()\n  },\n  methods: {\n    tryUpdateGeometry (v) {\n      if (this.points) {\n        this.points.geometry = this.geometry\n      }\n    },\n    tryUpdateMaterial (v) {\n      if (this.points) {\n        this.points.material = this.material\n      }\n    },\n    uninstall () {\n      this.$parent.$emit('remove', this.points)\n    }\n  }\n}\n</script>\n\n<style>\n\n</style>\n"},{"path":"@/webgl/Element/Mesh.vue","src":"<template>\n  <div class=\"mesh\">\n    <slot>\n    </slot>\n  </div>\n</template>\n\n<script>\nvar THREE = window.THREE;\nexport default {\n  props: {\n  },\n  data () {\n    return {\n      element: false,\n      mesh: false,\n      material: false,\n      geometry: false\n    }\n  },\n  created () {\n    this.element = this.mesh = new THREE.Mesh()\n    this.$parent.$emit('add', this.mesh)\n    this.$emit('element', this.mesh)\n\n    this.$on('material', (v) => {\n      this.material = v\n      this.tryUpdateMaterial()\n    })\n    this.$on('geometry', (v) => {\n      this.geometry = v\n      this.tryUpdateGeometry()\n    })\n  },\n  beforeDestroy () {\n    this.uninstall()\n  },\n  methods: {\n    tryUpdateGeometry (v) {\n      if (this.mesh) {\n        this.mesh.geometry = this.geometry\n      }\n    },\n    tryUpdateMaterial (v) {\n      if (this.mesh) {\n        this.mesh.material = this.material\n      }\n    },\n    uninstall () {\n      this.$parent.$emit('remove', this.mesh)\n    }\n  }\n}\n</script>\n\n<style>\n\n</style>\n"},{"path":"@/webgl/Geo/SphereBufferGeometry.vue","src":"<template>\n  <div class=\"geo-sphere\"></div>\n</template>\n\n<script>\nvar THREE = window.THREE\nexport default {\n  data () {\n    return {\n      geometry: false\n    }\n  },\n  mounted () {\n    let geometry = new THREE.SphereBufferGeometry(2, 256, 256)\n    this.$parent.$emit('geometry', geometry)\n  }\n}\n</script>\n\n<style>\n\n</style>\n"},{"path":"@/shader/Simple/vs.vert","src":"varying vec3 vPos;\nuniform float time;\n\nvoid main (void) {\n  vPos = position;\n  vPos.x = vPos.x + sin(vPos.x + time);\n  vPos.y = vPos.y + cos(vPos.y + time);\n  vPos.z = vPos.z + tan(vPos.z + time);\n  \n  vec4 mvPosition = modelViewMatrix * vec4(position, 1.0);\n  vec4 outputPos = projectionMatrix * mvPosition;\n  gl_Position = outputPos;\n}"},{"path":"@/shader/Simple/fs.frag","src":"varying vec3 vPos;\n\nvoid main () {\n  gl_FragColor = vec4(vec3(vPos), 1.0);\n}"},{"path":"@/shader/Fling/vs.vert","src":"varying vec3 vPos;\nuniform float time;\n\nvoid main (void) {\n  vPos = position;\n  vPos.x = vPos.x + sin(vPos.x + time);\n  vPos.y = vPos.y + cos(vPos.y + time);\n  vPos.z = vPos.z + tan(vPos.z + time);\n  \n  vec4 mvPosition = modelViewMatrix * vec4(vPos, 1.0);\n  vec4 outputPos = projectionMatrix * mvPosition;\n  gl_Position = outputPos;\n}"},{"path":"@/three.js","src":"var THREE = window.THREE\nexport default THREE\n"}],"date":"Thu Feb 15 2018 22:02:45 GMT+0800 (HKT)"},{"currentFilePath":"@/index.html","openedFiles":[{"path":"@/index.html"}],"files":[{"path":"@/index.html","src":"<!DOCTYPE html>\n<html>\n  <head>\n    <meta charset=\"UTF-8\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge,chrome=1\">\n    <meta name=\"viewport\" content=\"width=device-width,initial-scale=1\">\n\n    <title>WebGL</title>\n\n    <meta name=\"author\" content=\"loklok\">\n    <meta name=\"description\" content=\"WebGL Art\">\n    <meta name=\"keywords\" content=\"WebGL, Art\">\n\n    <style type=\"text/css\">\n    </style>\n\n  </head>\n  <body>\n    <div id=\"app-attach-point\"></div>\n    \n    \n    \n    \n    <script required src=\"https://cdnjs.cloudflare.com/ajax/libs/vue/2.5.2/vue.min.js\"></script>\n    <script required src=\"https://cdnjs.cloudflare.com/ajax/libs/vue-router/3.0.1/vue-router.min.js\"></script>\n    <script required src=\"https://cdnjs.cloudflare.com/ajax/libs/tween.js/16.3.5/Tween.min.js\"></script>\n    <script required src=\"https://cdnjs.cloudflare.com/ajax/libs/three.js/88/three.min.js\" integrity=\"sha256-6fhm481uY9c152qGWIVgE7KbzaCj5WjCi3BGIpZef2E=\" crossorigin=\"anonymous\"></script>\n    <script required src=\"https://threejs.org/examples/js/GPUComputationRenderer.js\"></script>\n  </body>\n</html>\n"},{"path":"@/style.css","src":"html, body {\n  width: 100%;\n  height: 100%;\n  margin: 0px;\n  padding: 0px;\n}\nhtml, body, #app {\n  box-sizing: border-box;\n  width: 100%;\n  height: 100%;\n  overflow: hidden;\n}\n.full{\n  width: 100%;\n  height: 100%;\n}"},{"path":"@/main.js","src":"import '@/style.css'\nimport App from '@/app.vue'\nimport router from '@/router.js'\n\nvar oldDOM = document.querySelector('#app-attach-point');\nvar newDOM = document.createElement('div');\nnewDOM.id = '#app-attach-point';\ndocument.body.appendChild(newDOM);\nvar target = oldDOM || newDOM;\n\nvar app = new Vue({\n  router,\n  el: target,\n  components: {\n    App\n  },\n  template: '<div id=\"app\"><App /></div>'\n})\n\nwindow.addEventListener('message', (evt) => {\n  var { type, data } = evt.data;\n  window.dispatchEvent(new CustomEvent(type, { detail: data }))\n}, false);\n\nwindow.addEventListener('slider', ({ detail }) => {\n  console.log(detail);\n  (window.opener || window.top).dispatchEvent(new CustomEvent('loklok', { detail: { rand: Math.random() } }))\n});\n\nexport default app;\n"},{"path":"@/router.js","src":"import Player from '@/webgl/layout/Player.vue'\nimport Home from '@/webgl/pages/Home.vue'\nimport Happy from '@/webgl/pages/Happy.vue'\n\nconst router = new VueRouter({\n  mode: 'hash',\n  routes: [\n    {\n      path: '/',\n      component: Player,\n      children: [\n        {\n          path: '',\n          component: Home\n        },\n        {\n          path: 'happy',\n          component: Happy\n        }\n      ]\n    }\n  ]\n})\n\nexport default router\n"},{"path":"@/app.vue","src":"<template>\n  <div>\n    <router-view></router-view>\n  </div>\n</template>\n\n<script>\nimport THREE from '@/three.js'\n\nexport default {\n  data () {\n    return {\n      \n    }\n  },\n  created () {\n    \n  },\n  beforeDestroy () {\n    \n  },\n  methods: {\n    \n  }\n}\n</script>\n\n<style>\n\n</style>\n"},{"path":"@/webgl/layout/Player.vue","src":"<template>\n  <div class=\"full\" ref=\"full\">\n\n    <Renderer\n      ref=\"renderer\"\n      :size=\"size\"\n      @renderer=\"(v) => { renderer = v }\"\n      @toucher=\"(v) => { toucher = v }\"\n    >\n    </Renderer>\n    \n    <keep-alive>\n      <component\n        class=\"hidden\"\n        :is=\"'router-view'\"\n        v-if=\"renderer\"\n        :size=\"size\"\n        :toucher=\"toucher\"\n        :renderer=\"renderer\"\n      >\n      </component>\n    </keep-alive>\n\n  </div>\n</template>\n\n<script>\nimport Bundle from '@/webgl/Bundle.js';\n\nexport default {\n  components: {\n    ...Bundle\n  },\n  computed: {\n  },\n  methods: {\n    \n  },\n  data () {\n    return {\n      toucher: false,\n      resizer: () => {},\n      renderer: false,\n      size: {\n        width: 100,\n        height: 100,\n        aspect: 1\n      }\n    }\n  },\n  created () {\n    \n  },\n  mounted () {\n    var resizer = this.resizer = () => {\n      this.$nextTick(() => {\n        var rect = this.$refs.full.getBoundingClientRect()\n        this.size = {\n          width: rect.width,\n          height: rect.height,\n          aspect: rect.width / rect.height\n        }\n      })\n    }\n    window.addEventListener('resize', resizer.bind(this))\n    resizer()\n  }\n}\n</script>\n\n<style scoped>\n.hidden{\n  display: none;\n}\n.full{\n  width: 100%;\n  height: 100%;\n}\n</style>\n"},{"path":"@/webgl/pages/Home.vue","src":"<template>\n  <div class=\"\">\n    <PerspectiveCamera\n      :fov=\"75\"\n      :aspect=\"size.aspect\"\n      :near=\"1\"\n      :far=\"1000\"\n      :position=\"{ x: 0, y: 0, z: 15 }\"\n      @camera=\"(v) => { camera = v; }\"\n    />\n    \n    <Scene @scene=\"(v) => { scene = v }\">\n      <Object3D pz=\"10\">\n        <PointLight />\n      </Object3D>\n      \n      <Object3D pz=\"0\">\n        <Mesh>\n          <SphereBufferGeometry />\n          <ShaderMaterial :vs=\"simpleVS\" :fs=\"simpleFS\" :uniforms=\"animatable\" />\n        </Mesh>\n      </Object3D>\n    </Scene>\n    \n    <Raycaster v-if=\"camera && toucher && scene\" :scene=\"scene\" :toucher=\"toucher\" :camera=\"camera\" @found=\"(v) => { found = v; }\" @click=\"onClick\">\n    </Raycaster>\n    \n  </div>\n</template>\n\n<script>\nimport Bundle from '@/webgl/Bundle.js';\n\nimport simpleVS from '@/shader/Simple/vs.vert'\nimport simpleFS from '@/shader/Simple/fs.frag'\n\nexport default {\n  name: 'Home',\n  props: {\n    toucher: {},\n    size: {},\n    renderer: {},\n    doc: {}\n  },\n  components: {\n    ...Bundle\n  },\n  computed: {\n  },\n  data () {\n    return {\n      cam: {\n        pos: { x: 3, y: 5, z: 10 }\n      },\n      ready: false,\n      cubeCamera: false,\n      visible: true,\n      resizer: () => {},\n      scene: false,\n      camera: false,\n      \n      found: [],\n      \n      animatable: {\n        time: { value: 0 }\n      },\n      simpleVS,\n      simpleFS\n      \n    }\n  },\n  methods: {\n    onClick ({ event, intersects }) {\n      this.$router.push({\n        path: '/happy'\n      })\n      this.$forceUpdate()\n      console.log('Click to happy');\n    },\n    setup () {\n    },\n    renderWebGL () {\n      TWEEN.update()\n      \n      this.animatable.time.value += 0.01;\n      \n      if (this.scene && this.camera && this.renderer) {\n        this.renderer.render(this.scene, this.camera)\n      }\n    }\n  },\n  watch: {\n    camera () {\n      if (this.camera && this.renderer) {\n        this.ready = true\n      }\n    },\n    renderer () {\n      if (this.camera && this.renderer) {\n        this.ready = true\n      }\n    },\n    ready () {\n      if (this.ready) {\n        this.setup()\n      }\n    }\n  },\n  created () {\n    \n  },\n  activated () {\n    var self = this\n    function loop (rAFT) {\n      self.rAFID = window.requestAnimationFrame(loop)\n      self.renderWebGL(rAFT)\n    }\n    self.rAFID = window.requestAnimationFrame(loop)\n  },\n  deactivated () {\n    window.cancelAnimationFrame(this.rAFID)\n  }\n}\n</script>\n\n<style scoped>\n.full{\n  width: 100%;\n  height: 100%;\n}\n</style>\n"},{"path":"@/webgl/pages/Happy.vue","src":"<template>\n  <div class=\"\">\n\n    <PerspectiveCamera\n      :fov=\"75\"\n      :aspect=\"size.aspect\"\n      :near=\"1\"\n      :far=\"1000\"\n      :position=\"{ x: 0, y: 0, z: 15 }\"\n      @camera=\"(v) => { camera = v; }\"\n    />\n    \n    <Scene @scene=\"(v) => { scene = v }\">\n      <Object3D pz=\"10\">\n        <PointLight />\n      </Object3D>\n      \n      <Object3D pz=\"0\">\n        <Points @element=\"(v) => { v.$skipRayCast = true }\">\n          <SphereBufferGeometry />\n          <ShaderMaterial :vs=\"simpleVS2\" :fs=\"simpleFS\" :uniforms=\"animatable\" />\n        </Points>\n      </Object3D>\n      \n      <Object3D pz=\"1\">\n        <Mesh>\n          <SphereBufferGeometry />\n          <ShaderMaterial :vs=\"simpleVS\" :fs=\"simpleFS\" :uniforms=\"animatable\" />\n        </Mesh>\n      </Object3D>\n    </Scene>\n    \n    <Raycaster v-if=\"renderer && camera && toucher && scene\" :scene=\"scene\" :toucher=\"toucher\" :camera=\"camera\" @found=\"(v) => { found = v; }\" @click=\"onClick\">\n    </Raycaster>\n\n  </div>\n</template>\n\n<script>\nimport Bundle from '@/webgl/Bundle.js';\n\nimport simpleVS2 from '@/shader/Fling/vs.vert'\nimport simpleVS from '@/shader/Simple/vs.vert'\nimport simpleFS from '@/shader/Simple/fs.frag'\n\nexport default {\n  name: 'Happy',\n  props: {\n    toucher: {},\n    size: {},\n    renderer: {},\n    doc: {}\n  },\n  components: {\n    ...Bundle\n  },\n  computed: {\n  },\n  data () {\n    return {\n      cam: {\n        pos: { x: 3, y: 5, z: 10 }\n      },\n      ready: false,\n      cubeCamera: false,\n      visible: true,\n      resizer: () => {},\n      scene: false,\n      camera: false,\n      \n      found: [],\n      \n      animatable: {\n        time: { value: 0 }\n      },\n      simpleVS,\n      simpleFS,\n      simpleVS2\n      \n    }\n  },\n  methods: {\n    onClick ({ event, intersects }) {\n      console.log(event, intersects)\n      this.$router.push('/')\n    },\n    setup () {\n    },\n    renderWebGL () {\n      TWEEN.update()\n      \n      this.animatable.time.value += 0.01;\n      \n      if (this.scene && this.camera && this.renderer) {\n        this.renderer.render(this.scene, this.camera)\n      }\n    }\n  },\n  watch: {\n    camera () {\n      if (this.camera && this.renderer) {\n        this.ready = true\n      }\n    },\n    renderer () {\n      if (this.camera && this.renderer) {\n        this.ready = true\n      }\n    },\n    ready () {\n      if (this.ready) {\n        this.setup()\n      }\n    }\n  },\n  created () {\n    \n  },\n  activated () {\n    var self = this\n    function loop (rAFT) {\n      self.rAFID = window.requestAnimationFrame(loop)\n      self.renderWebGL(rAFT)\n    }\n    self.rAFID = window.requestAnimationFrame(loop)\n  },\n  deactivated () {\n    window.cancelAnimationFrame(this.rAFID);\n    console.log('cancel animation frame')\n  }\n}\n</script>\n\n<style scoped>\n.full{\n  width: 100%;\n  height: 100%;\n}\n</style>\n"},{"path":"@/webgl/sample.vue","src":"<template>\n  <div class=\"full\">\n\n    <Renderer\n      ref=\"renderer\"\n      :size=\"size\"\n      @renderer=\"(v) => { renderer = v }\"\n    >\n    </Renderer>\n\n    <PerspectiveCamera\n      :fov=\"75\"\n      :aspect=\"size.aspect\"\n      :near=\"1\"\n      :far=\"1000\"\n      :position=\"{ x: 0, y: 0, z: 10 }\"\n      @camera=\"(v) => { camera = v; }\"\n    />\n\n    <Scene @scene=\"(v) => { scene = v }\">\n      <Object3D pz=\"10\">\n        <PointLight />\n      </Object3D>\n      \n      <Object3D pz=\"0\">\n        <Points>\n          <SphereBufferGeometry />\n          <ShaderMaterial :vs=\"simpleVS\" :fs=\"simpleFS\" :uniforms=\"animatable\" />\n        </Points>\n      </Object3D>\n      \n    </Scene>\n\n  </div>\n</template>\n\n<script>\nimport Bundle from '@/webgl/Bundle.js';\nimport simpleVS from '@/shader/Simple/vs.vert'\nimport simpleFS from '@/shader/Simple/fs.frag'\n\nexport default {\n  components: {\n    ...Bundle\n  },\n  computed: {\n  },\n  methods: {\n    renderWebGL () {\n      this.animatable.time.value = window.performance.now() * 0.001;\n      \n      if (this.scene && this.camera && this.renderer) {\n        this.renderer.render(this.scene, this.camera)\n      }\n    }\n  },\n  data () {\n    return {\n      animatable: {\n        time: { value: 0 }\n      },\n      simpleVS,\n      simpleFS,\n      size: {\n        width: window.innerWidth,\n        height: window.innerHeight,\n        aspect: window.innerWidth / window.innerHeight\n      },\n      renderer: false,\n      scene: false,\n      camera: false\n    }\n  },\n  created () {\n    \n  },\n  mounted () {\n    var self = this\n    function loop () {\n      self.rAFID = window.requestAnimationFrame(loop)\n      self.renderWebGL()\n    }\n    self.rAFID = window.requestAnimationFrame(loop)\n  }\n}\n</script>\n\n<style scoped>\n.full{\n  width: 100%;\n  height: 100%;\n}\n</style>\n"},{"path":"@/webgl/Bundle.js","src":"import Renderer from '@/webgl/System/Renderer.vue';\nimport Scene from '@/webgl/System/Scene.vue';\nimport PerspectiveCamera from '@/webgl/System/PerspectiveCamera.vue';\nimport Raycaster from '@/webgl/System/Raycaster.vue';\n\nimport MeshPhongMaterial from '@/webgl/Material/MeshPhongMaterial.vue';\nimport ShaderMaterial from '@/webgl/Material/ShaderMaterial.vue';\n\nimport Object3D from '@/webgl/Element/Object3D.vue';\nimport Mesh from '@/webgl/Element/Mesh.vue';\nimport Points from '@/webgl/Element/Points.vue';\nimport PointLight from '@/webgl/Element/PointLight.vue';\n\nimport SphereBufferGeometry from '@/webgl/Geo/SphereBufferGeometry.vue';\n\n\nexport default {\n  //materials\n  MeshPhongMaterial,\n  ShaderMaterial,\n  \n  //system\n  Renderer,\n  Scene,\n  PerspectiveCamera,\n  Raycaster,\n  \n  //Elemnts\n  PointLight,\n  Points,\n  Object3D,\n  Mesh,\n  \n  //Geo\n  SphereBufferGeometry\n}\n"},{"path":"@/webgl/System/Renderer.vue","src":"<template>\n  <div class=\"full pos-rel\">\n    <div class=\"full layer\" ref=\"mounter\"></div>\n    <div class=\"full layer\" ref=\"toucher\"><slot></slot></div>\n  </div>\n</template>\n\n<script>\nvar THREE = window.THREE\n\nexport default {\n  data () {\n    return {\n      // THREE,\n      renderer: false\n    }\n  },\n  props: {\n    size: { default () { return { width: 500, height: 500 } } },\n    alpha: { default: true },\n    antialias: { default: true }\n  },\n  mounted () {\n    this.renderer = new THREE.WebGLRenderer({\n      alpha: this.alpha,\n      antialias: this.antialias\n    })\n    this.resize()\n    this.renderer.domElement.style.marginBottom = '-6px'\n    this.$refs.mounter.appendChild(this.renderer.domElement)\n    \n    this.$emit('toucher', this.$refs['toucher'])\n    this.$emit('renderer', this.renderer)\n  },\n  beforeDestroy () {\n    this.$refs.mounter.removeChild(this.renderer.domElement)\n  },\n  watch: {\n    size () {\n      this.resize()\n    }\n  },\n  methods: {\n    resize () {\n      let ratio = window.devicePixelRatio || 1\n      this.renderer.setPixelRatio(ratio)\n      this.renderer.setSize(this.size.width, this.size.height)\n    }\n  }\n}\n</script>\n\n<style scoped>\n.full{\n  width: 100%;\n  height: 100%;\n}\n.pos-rel{\n  position: relative;\n}\n.layer{\n  position: absolute;\n  top: 0px;\n  left: 0px;\n}\n</style>\n"},{"path":"@/webgl/System/Scene.vue","src":"<template>\n  <div ref=\"mounter\" class=\"mounter\"><slot></slot></div>\n</template>\n\n<script>\nvar THREE = window.THREE\nexport default {\n  data () {\n    return {\n      scene: false\n    }\n  },\n  props: {\n    size: { default () { return { width: 500, height: 500 } } },\n    alpha: { default: true },\n    antialias: { default: true }\n  },\n  created () {\n    this.scene = new THREE.Scene()\n    this.$on('add', (v) => {\n      this.scene.add(v)\n    })\n    this.$on('remove', (v) => {\n      this.scene.remove(v)\n    })\n  },\n  mounted () {\n    this.$emit('scene', this.scene)\n  }\n}\n</script>\n\n<style scoped>\n.mounter {\n  display: none;\n}\n</style>\n"},{"path":"@/webgl/System/PerspectiveCamera.vue","src":"<script>\nvar THREE = window.THREE;\nexport default {\n  abstract: true,\n  render () {\n    return null\n  },\n  props: ['fov', 'aspect', 'near', 'far', 'position'],\n  data () {\n    return {\n      camera: null\n    }\n  },\n  created () {\n    this.camera = new THREE.PerspectiveCamera(this.fov, this.aspect, this.near, this.far)\n\n    if (this.position) {\n      this.camera.position.x = this.position.x\n      this.camera.position.y = this.position.y\n      this.camera.position.z = this.position.z\n    }\n    this.$emit('camera', this.camera)\n  },\n  watch: {\n    position () {\n      if (this.position) {\n        this.camera.position.x = this.position.x\n        this.camera.position.y = this.position.y\n        this.camera.position.z = this.position.z\n      }\n    },\n    aspect () {\n      if (this.camera) {\n        this.camera.aspect = this.aspect\n        this.camera.updateProjectionMatrix()\n      }\n    }\n  }\n}\n</script>\n\n<style scoped>\n.perspective-camera{\n  display: none;\n}\n</style>\n"},{"path":"@/webgl/System/Raycaster.vue","src":"<template>\n<div></div>\n</template>\n\n<script>\n\nexport default {\n  data () {\n    return {\n      rAFID: 0,\n      mouse: null,\n      raycast () {},\n      clean () {},\n      intersects: []\n    }\n  },\n  props: {\n    scene: {},\n    camera: {},\n    toucher: {}\n  },\n  created () {\n  },\n  activated () {\n    var raycaster = new THREE.Raycaster();\n    this.mouse = new THREE.Vector2();\n    \n    this.toucher.addEventListener('mousemove', this.handleMV, false);\n    this.toucher.addEventListener('click', this.handleClick, false);\n    this.clean = () => {\n      this.toucher.removeEventListener('click', this.handleClick, false);\n      this.toucher.removeEventListener('mousemove', this.handleMV);\n    }\n    \n    var raycast = () => {\n      var mouse = this.mouse;\n      var scene = this.scene;\n      var camera = this.camera;\n      \n      var restore = [];\n      this.scene.traverse((ele) => {\n        if (ele.$skipRayCast) {\n          restore.push({\n            parent: ele.parent,\n            ele: ele\n          })\n          ele.parent.remove(ele);\n        }\n      })\n      \n      \n    \t// update the picking ray with the camera and mouse position\n    \traycaster.setFromCamera( mouse, camera );\n    \t// calculate objects intersecting the picking ray\n    \tvar intersects = raycaster.intersectObjects( scene.children, true );\n    \t\n    \trestore.forEach((item) => {\n        item.parent.add(item.ele);\n      })\n    \t\n    \treturn intersects\n  \t};\n    this.raycast = raycast; \n    \n    var rAF = () => {\n      this.rAFID = window.requestAnimationFrame(rAF);\n      // this.raycast();\n    }\n    this.rAFID = window.requestAnimationFrame(rAF);\n  },\n  deactivated () {\n    window.cancelAnimationFrame(this.rAFID);\n    this.clean();\n  },\n  methods: {\n    handleClick (event) {\n      this.$emit('click', {\n        event,\n        intersects: this.raycast()\n      })\n    },\n    handleMV (event) {\n      this.mouse.x = (event.clientX / window.innerWidth) * 2 - 1;\n\t    this.mouse.y = - (event.clientY / window.innerHeight) * 2 + 1;\n    }\n    \n  }\n}\n</script>\n\n<style>\n\n</style>\n"},{"path":"@/webgl/Material/MeshPhongMaterial.vue","src":"<template>\n<div class=\"mesh-phong-material\"></div>\n</template>\n\n<script>\nvar THREE = window.THREE;\n\nexport default {\n  props: {\n    color: {\n      default () {\n        return Math.random() * 0xffffff\n      }\n    }\n  },\n  data () {\n    return {\n      material: false\n    }\n  },\n  created () {\n    this.material = new THREE.MeshPhongMaterial({\n      color: new THREE.Color(this.color),\n      specular: new THREE.Color(0x111111),\n      shininess: 50\n    })\n    this.$parent.$emit('material', this.material)\n  }\n}\n</script>\n\n<style>\n\n</style>\n"},{"path":"@/webgl/Material/ShaderMaterial.vue","src":"<template>\n<div class=\"mesh-basic-material\"></div>\n</template>\n\n<script>\nvar THREE = window.THREE;\n\nexport default {\n  data () {\n    return {\n      material: false\n    }\n  },\n  props: {\n    vs: {\n      default:\n`void main ( void ) {\n  vec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\n  vec4 outputPos = projectionMatrix * mvPosition;\n  gl_Position = outputPos;\n}`\n    },\n    fs: {\n      default:\n`void main () {\n  gl_FragColor = vec4(vec3(0.5), 1.0);\n}`\n    },\n    uniforms: {\n      default () {\n        return {}\n      }\n    }\n  },\n  watch: {\n    vs () { this.initShader() },\n    fs () { this.initShader() },\n    uniforms () { this.initShader() }\n  },\n  mounted () {\n    this.initShader()\n  },\n  methods: {\n    initShader () {\n      try {\n        this.material = new THREE.ShaderMaterial({\n          uniforms: {\n            ...this.uniforms// ,\n            // ...THREE.UniformsUtils.merge([\n            //   THREE.UniformsLib.common,\n            //   THREE.UniformsLib.aomap,\n            //   THREE.UniformsLib.lightmap,\n            //   THREE.UniformsLib.emissivemap,\n            //   THREE.UniformsLib.bumpmap,\n            //   THREE.UniformsLib.normalmap,\n            //   THREE.UniformsLib.displacementmap,\n            //   THREE.UniformsLib.fog,\n            //   THREE.UniformsLib.lights,\n            //   THREE.UniformsLib.shadowmap,\n            //   {\n            //     flipEnvMap: {\n            //       value: 1\n            //     },\n            //     emissive: {\n            //       value: new THREE.Color(0x000000)\n            //     },\n            //     specular: {\n            //       value: new THREE.Color(0x111111)\n            //     },\n            //     shininess: {\n            //       value: 30\n            //     },\n            //     envMap: {\n            //       // value: cubeCamera.renderTarget\n            //     }\n            //   }\n            // ])\n          },\n          vertexShader: this.vs || this.$options.props.vs.default,\n          fragmentShader: this.fs || this.$options.props.fs.default\n        })\n        this.$parent.$emit('material', this.material)\n      } catch (e) {\n        console.log(e)\n      }\n    }\n  }\n}\n</script>\n\n<style>\n\n</style>\n"},{"path":"@/webgl/Element/PointLight.vue","src":"<template>\n  <div class=\"light-point\"></div>\n</template>\n\n<script>\nvar THREE = window.THREE;\n\nexport default {\n  props: {\n    color: {\n      default () {\n        return 0xffffff\n      }\n    }\n  },\n  data () {\n    return {\n      light: false\n    }\n  },\n  mounted () {\n    this.light = new THREE.PointLight({ color: new THREE.Color(this.color) })\n    this.$emit('element', this.light)\n    this.$parent.$emit('add', this.light)\n  },\n  beforeDestroy () {\n    this.$parent.$emit('remove', this.light)\n  }\n}\n</script>\n\n<style>\n\n</style>\n"},{"path":"@/webgl/Element/Object3D.vue","src":"<template>\n<div class=\"object-3d\"><slot></slot></div>\n</template>\n\n<script>\nvar THREE = window.THREE;\nexport default {\n  data () {\n    return {\n      object3d: false\n    }\n  },\n  props: {\n    visible: { default: true },\n    px: { default: 0 },\n    py: { default: 0 },\n    pz: { default: 0 },\n\n    sx: { default: 1 },\n    sy: { default: 1 },\n    sz: { default: 1 },\n\n    rx: { default: 0 },\n    ry: { default: 0 },\n    rz: { default: 0 }\n  },\n  watch: {\n    visible () { this.object3d.setVisible(this.visible) },\n    px () { this.updatePosition('x', this.px) },\n    py () { this.updatePosition('y', this.py) },\n    pz () { this.updatePosition('z', this.pz) },\n\n    sx () { this.updateScale('x', this.sx) },\n    sy () { this.updateScale('y', this.sy) },\n    sz () { this.updateScale('z', this.sz) },\n\n    rx () { this.updateRotation('x', this.rx) },\n    ry () { this.updateRotation('y', this.ry) },\n    rz () { this.updateRotation('z', this.rz) }\n  },\n  created () {\n    this.object3d = new THREE.Object3D()\n    this.$emit('element', this.object3d)\n    this.object3d.visible = true\n    this.updatePosition()\n    this.updateScale()\n    this.updateRotation()\n    this.$on('add', (v) => {\n      this.object3d.add(v)\n    })\n    this.$on('remove', (v) => {\n      this.object3d.remove(v)\n    })\n  },\n  mounted () {\n    this.$parent.$emit('add', this.object3d)\n  },\n  beforeDestroy () {\n    this.$parent.$emit('remove', this.object3d)\n  },\n  methods: {\n    updatePosition (key, val) {\n      if (key) {\n        this.object3d.position[key] = val\n      } else {\n        this.object3d.position.set(this.px, this.py, this.pz)\n      }\n    },\n    updateScale (key, val) {\n      if (key) {\n        this.object3d.scale[key] = val\n      } else {\n        this.object3d.scale.set(this.sx, this.sy, this.sz)\n      }\n    },\n    updateRotation (key, val) {\n      if (key) {\n        this.object3d.rotation[key] = val\n      } else {\n        this.object3d.rotation.set(this.rx, this.ry, this.rz)\n      }\n    }\n  }\n}\n</script>\n\n<style>\n\n</style>\n"},{"path":"@/webgl/Element/Points.vue","src":"<template>\n  <div class=\"points\">\n    <slot>\n    </slot>\n  </div>\n</template>\n\n<script>\nimport THREE from '@/three.js'\n\nexport default {\n  props: {\n    position: {}\n  },\n  data () {\n    return {\n      element: false,\n      points: false,\n      material: false,\n      geometry: false\n    }\n  },\n  created () {\n    this.element = this.points = new THREE.Points()\n    this.$parent.$emit('add', this.points)\n    this.$emit('element', this.points)\n    this.$on('material', (v) => {\n      this.material = v\n      this.tryUpdateMaterial()\n    })\n    this.$on('geometry', (v) => {\n      this.geometry = v\n      this.tryUpdateGeometry()\n    })\n  },\n  beforeDestroy () {\n    this.uninstall()\n  },\n  methods: {\n    tryUpdateGeometry (v) {\n      if (this.points) {\n        this.points.geometry = this.geometry\n      }\n    },\n    tryUpdateMaterial (v) {\n      if (this.points) {\n        this.points.material = this.material\n      }\n    },\n    uninstall () {\n      this.$parent.$emit('remove', this.points)\n    }\n  }\n}\n</script>\n\n<style>\n\n</style>\n"},{"path":"@/webgl/Element/Mesh.vue","src":"<template>\n  <div class=\"mesh\">\n    <slot>\n    </slot>\n  </div>\n</template>\n\n<script>\nvar THREE = window.THREE;\nexport default {\n  props: {\n  },\n  data () {\n    return {\n      element: false,\n      mesh: false,\n      material: false,\n      geometry: false\n    }\n  },\n  created () {\n    this.element = this.mesh = new THREE.Mesh()\n    this.$parent.$emit('add', this.mesh)\n    this.$emit('element', this.mesh)\n\n    this.$on('material', (v) => {\n      this.material = v\n      this.tryUpdateMaterial()\n    })\n    this.$on('geometry', (v) => {\n      this.geometry = v\n      this.tryUpdateGeometry()\n    })\n  },\n  beforeDestroy () {\n    this.uninstall()\n  },\n  methods: {\n    tryUpdateGeometry (v) {\n      if (this.mesh) {\n        this.mesh.geometry = this.geometry\n      }\n    },\n    tryUpdateMaterial (v) {\n      if (this.mesh) {\n        this.mesh.material = this.material\n      }\n    },\n    uninstall () {\n      this.$parent.$emit('remove', this.mesh)\n    }\n  }\n}\n</script>\n\n<style>\n\n</style>\n"},{"path":"@/webgl/Geo/SphereBufferGeometry.vue","src":"<template>\n  <div class=\"geo-sphere\"></div>\n</template>\n\n<script>\nvar THREE = window.THREE\nexport default {\n  data () {\n    return {\n      geometry: false\n    }\n  },\n  mounted () {\n    let geometry = new THREE.SphereBufferGeometry(2, 256, 256)\n    this.$parent.$emit('geometry', geometry)\n  }\n}\n</script>\n\n<style>\n\n</style>\n"},{"path":"@/shader/Simple/vs.vert","src":"varying vec3 vPos;\nuniform float time;\n\nvoid main (void) {\n  vPos = position;\n  vPos.x = vPos.x + sin(vPos.x + time);\n  vPos.y = vPos.y + cos(vPos.y + time);\n  vPos.z = vPos.z + tan(vPos.z + time);\n  \n  vec4 mvPosition = modelViewMatrix * vec4(position, 1.0);\n  vec4 outputPos = projectionMatrix * mvPosition;\n  gl_Position = outputPos;\n}"},{"path":"@/shader/Simple/fs.frag","src":"varying vec3 vPos;\n\nvoid main () {\n  gl_FragColor = vec4(vec3(vPos), 1.0);\n}"},{"path":"@/shader/Fling/vs.vert","src":"varying vec3 vPos;\nuniform float time;\n\nvoid main (void) {\n  vPos = position;\n  vPos.x = vPos.x + sin(vPos.x + time);\n  vPos.y = vPos.y + cos(vPos.y + time);\n  vPos.z = vPos.z + tan(vPos.z + time);\n  \n  vec4 mvPosition = modelViewMatrix * vec4(vPos, 1.0);\n  vec4 outputPos = projectionMatrix * mvPosition;\n  gl_Position = outputPos;\n}"},{"path":"@/three.js","src":"var THREE = window.THREE\nexport default THREE\n"}],"date":"Thu Feb 15 2018 22:02:54 GMT+0800 (HKT)"},{"currentFilePath":"@/index.html","openedFiles":[{"path":"@/index.html"}],"files":[{"path":"@/index.html","src":"<!DOCTYPE html>\n<html>\n  <head>\n    <meta charset=\"UTF-8\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge,chrome=1\">\n    <meta name=\"viewport\" content=\"width=device-width,initial-scale=1\">\n\n    <title>WebGL</title>\n\n    <meta name=\"author\" content=\"loklok\">\n    <meta name=\"description\" content=\"WebGL Art\">\n    <meta name=\"keywords\" content=\"WebGL, Art\">\n\n    <style type=\"text/css\">\n    </style>\n\n  </head>\n  <body>\n    <div id=\"app-attach-point\"></div>\n    \n    <script required src=\"https://cdnjs.cloudflare.com/ajax/libs/vue/2.5.2/vue.min.js\"></script>\n    <script required src=\"https://cdnjs.cloudflare.com/ajax/libs/vue-router/3.0.1/vue-router.min.js\"></script>\n    <script required src=\"https://cdnjs.cloudflare.com/ajax/libs/tween.js/16.3.5/Tween.min.js\"></script>\n    <script required src=\"https://cdnjs.cloudflare.com/ajax/libs/three.js/88/three.min.js\" integrity=\"sha256-6fhm481uY9c152qGWIVgE7KbzaCj5WjCi3BGIpZef2E=\" crossorigin=\"anonymous\"></script>\n    <script required src=\"https://threejs.org/examples/js/GPUComputationRenderer.js\"></script>\n  </body>\n</html>\n"},{"path":"@/style.css","src":"html, body {\n  width: 100%;\n  height: 100%;\n  margin: 0px;\n  padding: 0px;\n}\nhtml, body, #app {\n  box-sizing: border-box;\n  width: 100%;\n  height: 100%;\n  overflow: hidden;\n}\n.full{\n  width: 100%;\n  height: 100%;\n}"},{"path":"@/main.js","src":"import '@/style.css'\nimport App from '@/app.vue'\nimport router from '@/router.js'\n\nvar oldDOM = document.querySelector('#app-attach-point');\nvar newDOM = document.createElement('div');\nnewDOM.id = '#app-attach-point';\ndocument.body.appendChild(newDOM);\nvar target = oldDOM || newDOM;\n\nvar app = new Vue({\n  router,\n  el: target,\n  components: {\n    App\n  },\n  template: '<div id=\"app\"><App /></div>'\n})\n\nwindow.addEventListener('message', (evt) => {\n  var { type, data } = evt.data;\n  window.dispatchEvent(new CustomEvent(type, { detail: data }))\n}, false);\n\nwindow.addEventListener('slider', ({ detail }) => {\n  console.log(detail);\n  (window.opener || window.top).dispatchEvent(new CustomEvent('loklok', { detail: { rand: Math.random() } }))\n});\n\nexport default app;\n"},{"path":"@/router.js","src":"import Player from '@/webgl/layout/Player.vue'\nimport Home from '@/webgl/pages/Home.vue'\nimport Happy from '@/webgl/pages/Happy.vue'\n\nconst router = new VueRouter({\n  mode: 'hash',\n  routes: [\n    {\n      path: '/',\n      component: Player,\n      children: [\n        {\n          path: '',\n          component: Home\n        },\n        {\n          path: 'happy',\n          component: Happy\n        }\n      ]\n    }\n  ]\n})\n\nexport default router\n"},{"path":"@/app.vue","src":"<template>\n  <div>\n    <router-view></router-view>\n  </div>\n</template>\n\n<script>\nimport THREE from '@/three.js'\n\nexport default {\n  data () {\n    return {\n      \n    }\n  },\n  created () {\n    \n  },\n  beforeDestroy () {\n    \n  },\n  methods: {\n    \n  }\n}\n</script>\n\n<style>\n\n</style>\n"},{"path":"@/webgl/layout/Player.vue","src":"<template>\n  <div class=\"full\" ref=\"full\">\n\n    <Renderer\n      ref=\"renderer\"\n      :size=\"size\"\n      @renderer=\"(v) => { renderer = v }\"\n      @toucher=\"(v) => { toucher = v }\"\n    >\n    </Renderer>\n    \n    <keep-alive>\n      <component\n        class=\"hidden\"\n        :is=\"'router-view'\"\n        v-if=\"renderer\"\n        :size=\"size\"\n        :toucher=\"toucher\"\n        :renderer=\"renderer\"\n      >\n      </component>\n    </keep-alive>\n\n  </div>\n</template>\n\n<script>\nimport Bundle from '@/webgl/Bundle.js';\n\nexport default {\n  components: {\n    ...Bundle\n  },\n  computed: {\n  },\n  methods: {\n    \n  },\n  data () {\n    return {\n      toucher: false,\n      resizer: () => {},\n      renderer: false,\n      size: {\n        width: 100,\n        height: 100,\n        aspect: 1\n      }\n    }\n  },\n  created () {\n    \n  },\n  mounted () {\n    var resizer = this.resizer = () => {\n      this.$nextTick(() => {\n        var rect = this.$refs.full.getBoundingClientRect()\n        this.size = {\n          width: rect.width,\n          height: rect.height,\n          aspect: rect.width / rect.height\n        }\n      })\n    }\n    window.addEventListener('resize', resizer.bind(this))\n    resizer()\n  }\n}\n</script>\n\n<style scoped>\n.hidden{\n  display: none;\n}\n.full{\n  width: 100%;\n  height: 100%;\n}\n</style>\n"},{"path":"@/webgl/pages/Home.vue","src":"<template>\n  <div class=\"\">\n    <PerspectiveCamera\n      :fov=\"75\"\n      :aspect=\"size.aspect\"\n      :near=\"1\"\n      :far=\"1000\"\n      :position=\"{ x: 0, y: 0, z: 15 }\"\n      @camera=\"(v) => { camera = v; }\"\n    />\n    \n    <Scene @scene=\"(v) => { scene = v }\">\n      <Object3D pz=\"10\">\n        <PointLight />\n      </Object3D>\n      \n      <Object3D pz=\"0\">\n        <Mesh>\n          <SphereBufferGeometry />\n          <ShaderMaterial :vs=\"simpleVS\" :fs=\"simpleFS\" :uniforms=\"animatable\" />\n        </Mesh>\n      </Object3D>\n    </Scene>\n    \n    <Raycaster v-if=\"camera && toucher && scene\" :scene=\"scene\" :toucher=\"toucher\" :camera=\"camera\" @found=\"(v) => { found = v; }\" @click=\"onClick\">\n    </Raycaster>\n    \n  </div>\n</template>\n\n<script>\nimport Bundle from '@/webgl/Bundle.js';\n\nimport simpleVS from '@/shader/Simple/vs.vert'\nimport simpleFS from '@/shader/Simple/fs.frag'\n\nexport default {\n  name: 'Home',\n  props: {\n    toucher: {},\n    size: {},\n    renderer: {},\n    doc: {}\n  },\n  components: {\n    ...Bundle\n  },\n  computed: {\n  },\n  data () {\n    return {\n      cam: {\n        pos: { x: 3, y: 5, z: 10 }\n      },\n      ready: false,\n      cubeCamera: false,\n      visible: true,\n      resizer: () => {},\n      scene: false,\n      camera: false,\n      \n      found: [],\n      \n      animatable: {\n        time: { value: 0 }\n      },\n      simpleVS,\n      simpleFS\n      \n    }\n  },\n  methods: {\n    onClick ({ event, intersects }) {\n      this.$router.push({\n        path: '/happy'\n      })\n      this.$forceUpdate()\n      console.log('Click to happy');\n    },\n    setup () {\n    },\n    renderWebGL () {\n      TWEEN.update()\n      \n      this.animatable.time.value += 0.01;\n      \n      if (this.scene && this.camera && this.renderer) {\n        this.renderer.render(this.scene, this.camera)\n      }\n    }\n  },\n  watch: {\n    camera () {\n      if (this.camera && this.renderer) {\n        this.ready = true\n      }\n    },\n    renderer () {\n      if (this.camera && this.renderer) {\n        this.ready = true\n      }\n    },\n    ready () {\n      if (this.ready) {\n        this.setup()\n      }\n    }\n  },\n  created () {\n    \n  },\n  activated () {\n    var self = this\n    function loop (rAFT) {\n      self.rAFID = window.requestAnimationFrame(loop)\n      self.renderWebGL(rAFT)\n    }\n    self.rAFID = window.requestAnimationFrame(loop)\n  },\n  deactivated () {\n    window.cancelAnimationFrame(this.rAFID)\n  }\n}\n</script>\n\n<style scoped>\n.full{\n  width: 100%;\n  height: 100%;\n}\n</style>\n"},{"path":"@/webgl/pages/Happy.vue","src":"<template>\n  <div class=\"\">\n\n    <PerspectiveCamera\n      :fov=\"75\"\n      :aspect=\"size.aspect\"\n      :near=\"1\"\n      :far=\"1000\"\n      :position=\"{ x: 0, y: 0, z: 15 }\"\n      @camera=\"(v) => { camera = v; }\"\n    />\n    \n    <Scene @scene=\"(v) => { scene = v }\">\n      <Object3D pz=\"10\">\n        <PointLight />\n      </Object3D>\n      \n      <Object3D pz=\"0\">\n        <Points @element=\"(v) => { v.$skipRayCast = true }\">\n          <SphereBufferGeometry />\n          <ShaderMaterial :vs=\"simpleVS2\" :fs=\"simpleFS\" :uniforms=\"animatable\" />\n        </Points>\n      </Object3D>\n      \n      <Object3D pz=\"1\">\n        <Mesh>\n          <SphereBufferGeometry />\n          <ShaderMaterial :vs=\"simpleVS\" :fs=\"simpleFS\" :uniforms=\"animatable\" />\n        </Mesh>\n      </Object3D>\n    </Scene>\n    \n    <Raycaster v-if=\"renderer && camera && toucher && scene\" :scene=\"scene\" :toucher=\"toucher\" :camera=\"camera\" @found=\"(v) => { found = v; }\" @click=\"onClick\">\n    </Raycaster>\n\n  </div>\n</template>\n\n<script>\nimport Bundle from '@/webgl/Bundle.js';\n\nimport simpleVS2 from '@/shader/Fling/vs.vert'\nimport simpleVS from '@/shader/Simple/vs.vert'\nimport simpleFS from '@/shader/Simple/fs.frag'\n\nexport default {\n  name: 'Happy',\n  props: {\n    toucher: {},\n    size: {},\n    renderer: {},\n    doc: {}\n  },\n  components: {\n    ...Bundle\n  },\n  computed: {\n  },\n  data () {\n    return {\n      cam: {\n        pos: { x: 3, y: 5, z: 10 }\n      },\n      ready: false,\n      cubeCamera: false,\n      visible: true,\n      resizer: () => {},\n      scene: false,\n      camera: false,\n      \n      found: [],\n      \n      animatable: {\n        time: { value: 0 }\n      },\n      simpleVS,\n      simpleFS,\n      simpleVS2\n      \n    }\n  },\n  methods: {\n    onClick ({ event, intersects }) {\n      console.log(event, intersects)\n      this.$router.push('/')\n    },\n    setup () {\n    },\n    renderWebGL () {\n      TWEEN.update()\n      \n      this.animatable.time.value += 0.01;\n      \n      if (this.scene && this.camera && this.renderer) {\n        this.renderer.render(this.scene, this.camera)\n      }\n    }\n  },\n  watch: {\n    camera () {\n      if (this.camera && this.renderer) {\n        this.ready = true\n      }\n    },\n    renderer () {\n      if (this.camera && this.renderer) {\n        this.ready = true\n      }\n    },\n    ready () {\n      if (this.ready) {\n        this.setup()\n      }\n    }\n  },\n  created () {\n    \n  },\n  activated () {\n    var self = this\n    function loop (rAFT) {\n      self.rAFID = window.requestAnimationFrame(loop)\n      self.renderWebGL(rAFT)\n    }\n    self.rAFID = window.requestAnimationFrame(loop)\n  },\n  deactivated () {\n    window.cancelAnimationFrame(this.rAFID);\n    console.log('cancel animation frame')\n  }\n}\n</script>\n\n<style scoped>\n.full{\n  width: 100%;\n  height: 100%;\n}\n</style>\n"},{"path":"@/webgl/sample.vue","src":"<template>\n  <div class=\"full\">\n\n    <Renderer\n      ref=\"renderer\"\n      :size=\"size\"\n      @renderer=\"(v) => { renderer = v }\"\n    >\n    </Renderer>\n\n    <PerspectiveCamera\n      :fov=\"75\"\n      :aspect=\"size.aspect\"\n      :near=\"1\"\n      :far=\"1000\"\n      :position=\"{ x: 0, y: 0, z: 10 }\"\n      @camera=\"(v) => { camera = v; }\"\n    />\n\n    <Scene @scene=\"(v) => { scene = v }\">\n      <Object3D pz=\"10\">\n        <PointLight />\n      </Object3D>\n      \n      <Object3D pz=\"0\">\n        <Points>\n          <SphereBufferGeometry />\n          <ShaderMaterial :vs=\"simpleVS\" :fs=\"simpleFS\" :uniforms=\"animatable\" />\n        </Points>\n      </Object3D>\n      \n    </Scene>\n\n  </div>\n</template>\n\n<script>\nimport Bundle from '@/webgl/Bundle.js';\nimport simpleVS from '@/shader/Simple/vs.vert'\nimport simpleFS from '@/shader/Simple/fs.frag'\n\nexport default {\n  components: {\n    ...Bundle\n  },\n  computed: {\n  },\n  methods: {\n    renderWebGL () {\n      this.animatable.time.value = window.performance.now() * 0.001;\n      \n      if (this.scene && this.camera && this.renderer) {\n        this.renderer.render(this.scene, this.camera)\n      }\n    }\n  },\n  data () {\n    return {\n      animatable: {\n        time: { value: 0 }\n      },\n      simpleVS,\n      simpleFS,\n      size: {\n        width: window.innerWidth,\n        height: window.innerHeight,\n        aspect: window.innerWidth / window.innerHeight\n      },\n      renderer: false,\n      scene: false,\n      camera: false\n    }\n  },\n  created () {\n    \n  },\n  mounted () {\n    var self = this\n    function loop () {\n      self.rAFID = window.requestAnimationFrame(loop)\n      self.renderWebGL()\n    }\n    self.rAFID = window.requestAnimationFrame(loop)\n  }\n}\n</script>\n\n<style scoped>\n.full{\n  width: 100%;\n  height: 100%;\n}\n</style>\n"},{"path":"@/webgl/Bundle.js","src":"import Renderer from '@/webgl/System/Renderer.vue';\nimport Scene from '@/webgl/System/Scene.vue';\nimport PerspectiveCamera from '@/webgl/System/PerspectiveCamera.vue';\nimport Raycaster from '@/webgl/System/Raycaster.vue';\n\nimport MeshPhongMaterial from '@/webgl/Material/MeshPhongMaterial.vue';\nimport ShaderMaterial from '@/webgl/Material/ShaderMaterial.vue';\n\nimport Object3D from '@/webgl/Element/Object3D.vue';\nimport Mesh from '@/webgl/Element/Mesh.vue';\nimport Points from '@/webgl/Element/Points.vue';\nimport PointLight from '@/webgl/Element/PointLight.vue';\n\nimport SphereBufferGeometry from '@/webgl/Geo/SphereBufferGeometry.vue';\n\n\nexport default {\n  //materials\n  MeshPhongMaterial,\n  ShaderMaterial,\n  \n  //system\n  Renderer,\n  Scene,\n  PerspectiveCamera,\n  Raycaster,\n  \n  //Elemnts\n  PointLight,\n  Points,\n  Object3D,\n  Mesh,\n  \n  //Geo\n  SphereBufferGeometry\n}\n"},{"path":"@/webgl/System/Renderer.vue","src":"<template>\n  <div class=\"full pos-rel\">\n    <div class=\"full layer\" ref=\"mounter\"></div>\n    <div class=\"full layer\" ref=\"toucher\"><slot></slot></div>\n  </div>\n</template>\n\n<script>\nvar THREE = window.THREE\n\nexport default {\n  data () {\n    return {\n      // THREE,\n      renderer: false\n    }\n  },\n  props: {\n    size: { default () { return { width: 500, height: 500 } } },\n    alpha: { default: true },\n    antialias: { default: true }\n  },\n  mounted () {\n    this.renderer = new THREE.WebGLRenderer({\n      alpha: this.alpha,\n      antialias: this.antialias\n    })\n    this.resize()\n    this.renderer.domElement.style.marginBottom = '-6px'\n    this.$refs.mounter.appendChild(this.renderer.domElement)\n    \n    this.$emit('toucher', this.$refs['toucher'])\n    this.$emit('renderer', this.renderer)\n  },\n  beforeDestroy () {\n    this.$refs.mounter.removeChild(this.renderer.domElement)\n  },\n  watch: {\n    size () {\n      this.resize()\n    }\n  },\n  methods: {\n    resize () {\n      let ratio = window.devicePixelRatio || 1\n      this.renderer.setPixelRatio(ratio)\n      this.renderer.setSize(this.size.width, this.size.height)\n    }\n  }\n}\n</script>\n\n<style scoped>\n.full{\n  width: 100%;\n  height: 100%;\n}\n.pos-rel{\n  position: relative;\n}\n.layer{\n  position: absolute;\n  top: 0px;\n  left: 0px;\n}\n</style>\n"},{"path":"@/webgl/System/Scene.vue","src":"<template>\n  <div ref=\"mounter\" class=\"mounter\"><slot></slot></div>\n</template>\n\n<script>\nvar THREE = window.THREE\nexport default {\n  data () {\n    return {\n      scene: false\n    }\n  },\n  props: {\n    size: { default () { return { width: 500, height: 500 } } },\n    alpha: { default: true },\n    antialias: { default: true }\n  },\n  created () {\n    this.scene = new THREE.Scene()\n    this.$on('add', (v) => {\n      this.scene.add(v)\n    })\n    this.$on('remove', (v) => {\n      this.scene.remove(v)\n    })\n  },\n  mounted () {\n    this.$emit('scene', this.scene)\n  }\n}\n</script>\n\n<style scoped>\n.mounter {\n  display: none;\n}\n</style>\n"},{"path":"@/webgl/System/PerspectiveCamera.vue","src":"<script>\nvar THREE = window.THREE;\nexport default {\n  abstract: true,\n  render () {\n    return null\n  },\n  props: ['fov', 'aspect', 'near', 'far', 'position'],\n  data () {\n    return {\n      camera: null\n    }\n  },\n  created () {\n    this.camera = new THREE.PerspectiveCamera(this.fov, this.aspect, this.near, this.far)\n\n    if (this.position) {\n      this.camera.position.x = this.position.x\n      this.camera.position.y = this.position.y\n      this.camera.position.z = this.position.z\n    }\n    this.$emit('camera', this.camera)\n  },\n  watch: {\n    position () {\n      if (this.position) {\n        this.camera.position.x = this.position.x\n        this.camera.position.y = this.position.y\n        this.camera.position.z = this.position.z\n      }\n    },\n    aspect () {\n      if (this.camera) {\n        this.camera.aspect = this.aspect\n        this.camera.updateProjectionMatrix()\n      }\n    }\n  }\n}\n</script>\n\n<style scoped>\n.perspective-camera{\n  display: none;\n}\n</style>\n"},{"path":"@/webgl/System/Raycaster.vue","src":"<template>\n<div></div>\n</template>\n\n<script>\n\nexport default {\n  data () {\n    return {\n      rAFID: 0,\n      mouse: null,\n      raycast () {},\n      clean () {},\n      intersects: []\n    }\n  },\n  props: {\n    scene: {},\n    camera: {},\n    toucher: {}\n  },\n  created () {\n  },\n  activated () {\n    var raycaster = new THREE.Raycaster();\n    this.mouse = new THREE.Vector2();\n    \n    this.toucher.addEventListener('mousemove', this.handleMV, false);\n    this.toucher.addEventListener('click', this.handleClick, false);\n    this.clean = () => {\n      this.toucher.removeEventListener('click', this.handleClick, false);\n      this.toucher.removeEventListener('mousemove', this.handleMV);\n    }\n    \n    var raycast = () => {\n      var mouse = this.mouse;\n      var scene = this.scene;\n      var camera = this.camera;\n      \n      var restore = [];\n      this.scene.traverse((ele) => {\n        if (ele.$skipRayCast) {\n          restore.push({\n            parent: ele.parent,\n            ele: ele\n          })\n          ele.parent.remove(ele);\n        }\n      })\n      \n      \n    \t// update the picking ray with the camera and mouse position\n    \traycaster.setFromCamera( mouse, camera );\n    \t// calculate objects intersecting the picking ray\n    \tvar intersects = raycaster.intersectObjects( scene.children, true );\n    \t\n    \trestore.forEach((item) => {\n        item.parent.add(item.ele);\n      })\n    \t\n    \treturn intersects\n  \t};\n    this.raycast = raycast; \n    \n    var rAF = () => {\n      this.rAFID = window.requestAnimationFrame(rAF);\n      // this.raycast();\n    }\n    this.rAFID = window.requestAnimationFrame(rAF);\n  },\n  deactivated () {\n    window.cancelAnimationFrame(this.rAFID);\n    this.clean();\n  },\n  methods: {\n    handleClick (event) {\n      this.$emit('click', {\n        event,\n        intersects: this.raycast()\n      })\n    },\n    handleMV (event) {\n      this.mouse.x = (event.clientX / window.innerWidth) * 2 - 1;\n\t    this.mouse.y = - (event.clientY / window.innerHeight) * 2 + 1;\n    }\n    \n  }\n}\n</script>\n\n<style>\n\n</style>\n"},{"path":"@/webgl/Material/MeshPhongMaterial.vue","src":"<template>\n<div class=\"mesh-phong-material\"></div>\n</template>\n\n<script>\nvar THREE = window.THREE;\n\nexport default {\n  props: {\n    color: {\n      default () {\n        return Math.random() * 0xffffff\n      }\n    }\n  },\n  data () {\n    return {\n      material: false\n    }\n  },\n  created () {\n    this.material = new THREE.MeshPhongMaterial({\n      color: new THREE.Color(this.color),\n      specular: new THREE.Color(0x111111),\n      shininess: 50\n    })\n    this.$parent.$emit('material', this.material)\n  }\n}\n</script>\n\n<style>\n\n</style>\n"},{"path":"@/webgl/Material/ShaderMaterial.vue","src":"<template>\n<div class=\"mesh-basic-material\"></div>\n</template>\n\n<script>\nvar THREE = window.THREE;\n\nexport default {\n  data () {\n    return {\n      material: false\n    }\n  },\n  props: {\n    vs: {\n      default:\n`void main ( void ) {\n  vec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\n  vec4 outputPos = projectionMatrix * mvPosition;\n  gl_Position = outputPos;\n}`\n    },\n    fs: {\n      default:\n`void main () {\n  gl_FragColor = vec4(vec3(0.5), 1.0);\n}`\n    },\n    uniforms: {\n      default () {\n        return {}\n      }\n    }\n  },\n  watch: {\n    vs () { this.initShader() },\n    fs () { this.initShader() },\n    uniforms () { this.initShader() }\n  },\n  mounted () {\n    this.initShader()\n  },\n  methods: {\n    initShader () {\n      try {\n        this.material = new THREE.ShaderMaterial({\n          uniforms: {\n            ...this.uniforms// ,\n            // ...THREE.UniformsUtils.merge([\n            //   THREE.UniformsLib.common,\n            //   THREE.UniformsLib.aomap,\n            //   THREE.UniformsLib.lightmap,\n            //   THREE.UniformsLib.emissivemap,\n            //   THREE.UniformsLib.bumpmap,\n            //   THREE.UniformsLib.normalmap,\n            //   THREE.UniformsLib.displacementmap,\n            //   THREE.UniformsLib.fog,\n            //   THREE.UniformsLib.lights,\n            //   THREE.UniformsLib.shadowmap,\n            //   {\n            //     flipEnvMap: {\n            //       value: 1\n            //     },\n            //     emissive: {\n            //       value: new THREE.Color(0x000000)\n            //     },\n            //     specular: {\n            //       value: new THREE.Color(0x111111)\n            //     },\n            //     shininess: {\n            //       value: 30\n            //     },\n            //     envMap: {\n            //       // value: cubeCamera.renderTarget\n            //     }\n            //   }\n            // ])\n          },\n          vertexShader: this.vs || this.$options.props.vs.default,\n          fragmentShader: this.fs || this.$options.props.fs.default\n        })\n        this.$parent.$emit('material', this.material)\n      } catch (e) {\n        console.log(e)\n      }\n    }\n  }\n}\n</script>\n\n<style>\n\n</style>\n"},{"path":"@/webgl/Element/PointLight.vue","src":"<template>\n  <div class=\"light-point\"></div>\n</template>\n\n<script>\nvar THREE = window.THREE;\n\nexport default {\n  props: {\n    color: {\n      default () {\n        return 0xffffff\n      }\n    }\n  },\n  data () {\n    return {\n      light: false\n    }\n  },\n  mounted () {\n    this.light = new THREE.PointLight({ color: new THREE.Color(this.color) })\n    this.$emit('element', this.light)\n    this.$parent.$emit('add', this.light)\n  },\n  beforeDestroy () {\n    this.$parent.$emit('remove', this.light)\n  }\n}\n</script>\n\n<style>\n\n</style>\n"},{"path":"@/webgl/Element/Object3D.vue","src":"<template>\n<div class=\"object-3d\"><slot></slot></div>\n</template>\n\n<script>\nvar THREE = window.THREE;\nexport default {\n  data () {\n    return {\n      object3d: false\n    }\n  },\n  props: {\n    visible: { default: true },\n    px: { default: 0 },\n    py: { default: 0 },\n    pz: { default: 0 },\n\n    sx: { default: 1 },\n    sy: { default: 1 },\n    sz: { default: 1 },\n\n    rx: { default: 0 },\n    ry: { default: 0 },\n    rz: { default: 0 }\n  },\n  watch: {\n    visible () { this.object3d.setVisible(this.visible) },\n    px () { this.updatePosition('x', this.px) },\n    py () { this.updatePosition('y', this.py) },\n    pz () { this.updatePosition('z', this.pz) },\n\n    sx () { this.updateScale('x', this.sx) },\n    sy () { this.updateScale('y', this.sy) },\n    sz () { this.updateScale('z', this.sz) },\n\n    rx () { this.updateRotation('x', this.rx) },\n    ry () { this.updateRotation('y', this.ry) },\n    rz () { this.updateRotation('z', this.rz) }\n  },\n  created () {\n    this.object3d = new THREE.Object3D()\n    this.$emit('element', this.object3d)\n    this.object3d.visible = true\n    this.updatePosition()\n    this.updateScale()\n    this.updateRotation()\n    this.$on('add', (v) => {\n      this.object3d.add(v)\n    })\n    this.$on('remove', (v) => {\n      this.object3d.remove(v)\n    })\n  },\n  mounted () {\n    this.$parent.$emit('add', this.object3d)\n  },\n  beforeDestroy () {\n    this.$parent.$emit('remove', this.object3d)\n  },\n  methods: {\n    updatePosition (key, val) {\n      if (key) {\n        this.object3d.position[key] = val\n      } else {\n        this.object3d.position.set(this.px, this.py, this.pz)\n      }\n    },\n    updateScale (key, val) {\n      if (key) {\n        this.object3d.scale[key] = val\n      } else {\n        this.object3d.scale.set(this.sx, this.sy, this.sz)\n      }\n    },\n    updateRotation (key, val) {\n      if (key) {\n        this.object3d.rotation[key] = val\n      } else {\n        this.object3d.rotation.set(this.rx, this.ry, this.rz)\n      }\n    }\n  }\n}\n</script>\n\n<style>\n\n</style>\n"},{"path":"@/webgl/Element/Points.vue","src":"<template>\n  <div class=\"points\">\n    <slot>\n    </slot>\n  </div>\n</template>\n\n<script>\nimport THREE from '@/three.js'\n\nexport default {\n  props: {\n    position: {}\n  },\n  data () {\n    return {\n      element: false,\n      points: false,\n      material: false,\n      geometry: false\n    }\n  },\n  created () {\n    this.element = this.points = new THREE.Points()\n    this.$parent.$emit('add', this.points)\n    this.$emit('element', this.points)\n    this.$on('material', (v) => {\n      this.material = v\n      this.tryUpdateMaterial()\n    })\n    this.$on('geometry', (v) => {\n      this.geometry = v\n      this.tryUpdateGeometry()\n    })\n  },\n  beforeDestroy () {\n    this.uninstall()\n  },\n  methods: {\n    tryUpdateGeometry (v) {\n      if (this.points) {\n        this.points.geometry = this.geometry\n      }\n    },\n    tryUpdateMaterial (v) {\n      if (this.points) {\n        this.points.material = this.material\n      }\n    },\n    uninstall () {\n      this.$parent.$emit('remove', this.points)\n    }\n  }\n}\n</script>\n\n<style>\n\n</style>\n"},{"path":"@/webgl/Element/Mesh.vue","src":"<template>\n  <div class=\"mesh\">\n    <slot>\n    </slot>\n  </div>\n</template>\n\n<script>\nvar THREE = window.THREE;\nexport default {\n  props: {\n  },\n  data () {\n    return {\n      element: false,\n      mesh: false,\n      material: false,\n      geometry: false\n    }\n  },\n  created () {\n    this.element = this.mesh = new THREE.Mesh()\n    this.$parent.$emit('add', this.mesh)\n    this.$emit('element', this.mesh)\n\n    this.$on('material', (v) => {\n      this.material = v\n      this.tryUpdateMaterial()\n    })\n    this.$on('geometry', (v) => {\n      this.geometry = v\n      this.tryUpdateGeometry()\n    })\n  },\n  beforeDestroy () {\n    this.uninstall()\n  },\n  methods: {\n    tryUpdateGeometry (v) {\n      if (this.mesh) {\n        this.mesh.geometry = this.geometry\n      }\n    },\n    tryUpdateMaterial (v) {\n      if (this.mesh) {\n        this.mesh.material = this.material\n      }\n    },\n    uninstall () {\n      this.$parent.$emit('remove', this.mesh)\n    }\n  }\n}\n</script>\n\n<style>\n\n</style>\n"},{"path":"@/webgl/Geo/SphereBufferGeometry.vue","src":"<template>\n  <div class=\"geo-sphere\"></div>\n</template>\n\n<script>\nvar THREE = window.THREE\nexport default {\n  data () {\n    return {\n      geometry: false\n    }\n  },\n  mounted () {\n    let geometry = new THREE.SphereBufferGeometry(2, 256, 256)\n    this.$parent.$emit('geometry', geometry)\n  }\n}\n</script>\n\n<style>\n\n</style>\n"},{"path":"@/shader/Simple/vs.vert","src":"varying vec3 vPos;\nuniform float time;\n\nvoid main (void) {\n  vPos = position;\n  vPos.x = vPos.x + sin(vPos.x + time);\n  vPos.y = vPos.y + cos(vPos.y + time);\n  vPos.z = vPos.z + tan(vPos.z + time);\n  \n  vec4 mvPosition = modelViewMatrix * vec4(position, 1.0);\n  vec4 outputPos = projectionMatrix * mvPosition;\n  gl_Position = outputPos;\n}"},{"path":"@/shader/Simple/fs.frag","src":"varying vec3 vPos;\n\nvoid main () {\n  gl_FragColor = vec4(vec3(vPos), 1.0);\n}"},{"path":"@/shader/Fling/vs.vert","src":"varying vec3 vPos;\nuniform float time;\n\nvoid main (void) {\n  vPos = position;\n  vPos.x = vPos.x + sin(vPos.x + time);\n  vPos.y = vPos.y + cos(vPos.y + time);\n  vPos.z = vPos.z + tan(vPos.z + time);\n  \n  vec4 mvPosition = modelViewMatrix * vec4(vPos, 1.0);\n  vec4 outputPos = projectionMatrix * mvPosition;\n  gl_Position = outputPos;\n}"},{"path":"@/three.js","src":"var THREE = window.THREE\nexport default THREE\n"}],"date":"Fri Feb 16 2018 05:33:22 GMT+0800 (HKT)"},{"currentFilePath":"@/index.html","openedFiles":[{"path":"@/index.html"}],"files":[{"path":"@/index.html","src":"<!DOCTYPE html>\n<html>\n  <head>\n    <meta charset=\"UTF-8\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge,chrome=1\">\n    <meta name=\"viewport\" content=\"width=device-width,initial-scale=1\">\n\n    <title>WebGL</title>\n\n    <meta name=\"author\" content=\"loklok\">\n    <meta name=\"description\" content=\"WebGL Art\">\n    <meta name=\"keywords\" content=\"WebGL, Art\">\n\n    <style type=\"text/css\">\n    </style>\n\n  </head>\n  <body>\n    <div id=\"app-attach-point\"></div>\n    \n    <script required src=\"https://cdnjs.cloudflare.com/ajax/libs/vue/2.5.2/vue.min.js\"></script>\n    <script required src=\"https://cdnjs.cloudflare.com/ajax/libs/vue-router/3.0.1/vue-router.min.js\"></script>\n    <script required src=\"https://cdnjs.cloudflare.com/ajax/libs/tween.js/16.3.5/Tween.min.js\"></script>\n    <script required src=\"https://cdnjs.cloudflare.com/ajax/libs/three.js/88/three.min.js\" integrity=\"sha256-6fhm481uY9c152qGWIVgE7KbzaCj5WjCi3BGIpZef2E=\" crossorigin=\"anonymous\"></script>\n    <script required src=\"https://threejs.org/examples/js/GPUComputationRenderer.js\"></script>\n  </body>\n</html>\n"},{"path":"@/style.css","src":"html, body {\n  width: 100%;\n  height: 100%;\n  margin: 0px;\n  padding: 0px;\n}\nhtml, body, #app {\n  box-sizing: border-box;\n  width: 100%;\n  height: 100%;\n  overflow: hidden;\n}\n.full{\n  width: 100%;\n  height: 100%;\n}"},{"path":"@/main.js","src":"import '@/style.css'\nimport App from '@/app.vue'\nimport router from '@/router.js'\n\nvar oldDOM = document.querySelector('#app-attach-point');\nvar newDOM = document.createElement('div');\nnewDOM.id = '#app-attach-point';\ndocument.body.appendChild(newDOM);\nvar target = oldDOM || newDOM;\n\nvar app = new Vue({\n  router,\n  el: target,\n  components: {\n    App\n  },\n  template: '<div id=\"app\"><App /></div>'\n})\n\nwindow.addEventListener('message', (evt) => {\n  var { type, data } = evt.data;\n  window.dispatchEvent(new CustomEvent(type, { detail: data }))\n}, false);\n\nwindow.addEventListener('slider', ({ detail }) => {\n  console.log(detail);\n  (window.opener || window.top).dispatchEvent(new CustomEvent('loklok', { detail: { rand: Math.random() } }))\n});\n\nexport default app;\n"},{"path":"@/router.js","src":"import Player from '@/webgl/layout/Player.vue'\nimport Home from '@/webgl/pages/Home.vue'\nimport Happy from '@/webgl/pages/Happy.vue'\n\nconst router = new VueRouter({\n  mode: 'hash',\n  routes: [\n    {\n      path: '/',\n      component: Player,\n      children: [\n        {\n          path: '',\n          component: Home\n        },\n        {\n          path: 'happy',\n          component: Happy\n        }\n      ]\n    }\n  ]\n})\n\nexport default router\n"},{"path":"@/app.vue","src":"<template>\n  <div>\n    <router-view></router-view>\n  </div>\n</template>\n\n<script>\nimport THREE from '@/three.js'\n\nexport default {\n  data () {\n    return {\n      \n    }\n  },\n  created () {\n    \n  },\n  beforeDestroy () {\n    \n  },\n  methods: {\n    \n  }\n}\n</script>\n\n<style>\n\n</style>\n"},{"path":"@/webgl/layout/Player.vue","src":"<template>\n  <div class=\"full\" ref=\"full\">\n\n    <Renderer\n      ref=\"renderer\"\n      :size=\"size\"\n      @renderer=\"(v) => { renderer = v }\"\n      @toucher=\"(v) => { toucher = v }\"\n    >\n    </Renderer>\n    \n    <keep-alive>\n      <component\n        class=\"hidden\"\n        :is=\"'router-view'\"\n        v-if=\"renderer\"\n        :size=\"size\"\n        :toucher=\"toucher\"\n        :renderer=\"renderer\"\n      >\n      </component>\n    </keep-alive>\n\n  </div>\n</template>\n\n<script>\nimport Bundle from '@/webgl/Bundle.js';\n\nexport default {\n  components: {\n    ...Bundle\n  },\n  computed: {\n  },\n  methods: {\n    \n  },\n  data () {\n    return {\n      toucher: false,\n      resizer: () => {},\n      renderer: false,\n      size: {\n        width: 100,\n        height: 100,\n        aspect: 1\n      }\n    }\n  },\n  created () {\n    \n  },\n  mounted () {\n    var resizer = this.resizer = () => {\n      this.$nextTick(() => {\n        var rect = this.$refs.full.getBoundingClientRect()\n        this.size = {\n          width: rect.width,\n          height: rect.height,\n          aspect: rect.width / rect.height\n        }\n      })\n    }\n    window.addEventListener('resize', resizer.bind(this))\n    resizer()\n  }\n}\n</script>\n\n<style scoped>\n.hidden{\n  display: none;\n}\n.full{\n  width: 100%;\n  height: 100%;\n}\n</style>\n"},{"path":"@/webgl/pages/Home.vue","src":"<template>\n  <div class=\"\">\n    <PerspectiveCamera\n      :fov=\"75\"\n      :aspect=\"size.aspect\"\n      :near=\"1\"\n      :far=\"1000\"\n      :position=\"{ x: 0, y: 0, z: 15 }\"\n      @camera=\"(v) => { camera = v; }\"\n    />\n    \n    <Scene @scene=\"(v) => { scene = v }\">\n      <Object3D pz=\"10\">\n        <PointLight />\n      </Object3D>\n      \n      <Object3D pz=\"0\">\n        <Mesh>\n          <SphereBufferGeometry />\n          <ShaderMaterial :vs=\"simpleVS\" :fs=\"simpleFS\" :uniforms=\"animatable\" />\n        </Mesh>\n      </Object3D>\n    </Scene>\n    \n    <Raycaster v-if=\"camera && toucher && scene\" :scene=\"scene\" :toucher=\"toucher\" :camera=\"camera\" @found=\"(v) => { found = v; }\" @click=\"onClick\">\n    </Raycaster>\n    \n  </div>\n</template>\n\n<script>\nimport Bundle from '@/webgl/Bundle.js';\n\nimport simpleVS from '@/shader/Simple/vs.vert'\nimport simpleFS from '@/shader/Simple/fs.frag'\n\nexport default {\n  name: 'Home',\n  props: {\n    toucher: {},\n    size: {},\n    renderer: {},\n    doc: {}\n  },\n  components: {\n    ...Bundle\n  },\n  computed: {\n  },\n  data () {\n    return {\n      cam: {\n        pos: { x: 3, y: 5, z: 10 }\n      },\n      ready: false,\n      cubeCamera: false,\n      visible: true,\n      resizer: () => {},\n      scene: false,\n      camera: false,\n      \n      found: [],\n      \n      animatable: {\n        time: { value: 0 }\n      },\n      simpleVS,\n      simpleFS\n      \n    }\n  },\n  methods: {\n    onClick ({ event, intersects }) {\n      this.$router.push({\n        path: '/happy'\n      })\n      this.$forceUpdate()\n      console.log('Click to happy');\n    },\n    setup () {\n    },\n    renderWebGL () {\n      TWEEN.update()\n      \n      this.animatable.time.value += 0.01;\n      \n      if (this.scene && this.camera && this.renderer) {\n        this.renderer.render(this.scene, this.camera)\n      }\n    }\n  },\n  watch: {\n    camera () {\n      if (this.camera && this.renderer) {\n        this.ready = true\n      }\n    },\n    renderer () {\n      if (this.camera && this.renderer) {\n        this.ready = true\n      }\n    },\n    ready () {\n      if (this.ready) {\n        this.setup()\n      }\n    }\n  },\n  created () {\n    \n  },\n  activated () {\n    var self = this\n    function loop (rAFT) {\n      self.rAFID = window.requestAnimationFrame(loop)\n      self.renderWebGL(rAFT)\n    }\n    self.rAFID = window.requestAnimationFrame(loop)\n  },\n  deactivated () {\n    window.cancelAnimationFrame(this.rAFID)\n  }\n}\n</script>\n\n<style scoped>\n.full{\n  width: 100%;\n  height: 100%;\n}\n</style>\n"},{"path":"@/webgl/pages/Happy.vue","src":"<template>\n  <div class=\"\">\n\n    <PerspectiveCamera\n      :fov=\"75\"\n      :aspect=\"size.aspect\"\n      :near=\"1\"\n      :far=\"1000\"\n      :position=\"{ x: 0, y: 0, z: 15 }\"\n      @camera=\"(v) => { camera = v; }\"\n    />\n    \n    <Scene @scene=\"(v) => { scene = v }\">\n      <Object3D pz=\"10\">\n        <PointLight />\n      </Object3D>\n      \n      <Object3D pz=\"0\">\n        <Points @element=\"(v) => { v.$skipRayCast = true }\">\n          <SphereBufferGeometry />\n          <ShaderMaterial :vs=\"simpleVS2\" :fs=\"simpleFS\" :uniforms=\"animatable\" />\n        </Points>\n      </Object3D>\n      \n      <Object3D pz=\"1\">\n        <Mesh>\n          <SphereBufferGeometry />\n          <ShaderMaterial :vs=\"simpleVS\" :fs=\"simpleFS\" :uniforms=\"animatable\" />\n        </Mesh>\n      </Object3D>\n    </Scene>\n    \n    <Raycaster v-if=\"renderer && camera && toucher && scene\" :scene=\"scene\" :toucher=\"toucher\" :camera=\"camera\" @found=\"(v) => { found = v; }\" @click=\"onClick\">\n    </Raycaster>\n\n  </div>\n</template>\n\n<script>\nimport Bundle from '@/webgl/Bundle.js';\n\nimport simpleVS2 from '@/shader/Fling/vs.vert'\nimport simpleVS from '@/shader/Simple/vs.vert'\nimport simpleFS from '@/shader/Simple/fs.frag'\n\nexport default {\n  name: 'Happy',\n  props: {\n    toucher: {},\n    size: {},\n    renderer: {},\n    doc: {}\n  },\n  components: {\n    ...Bundle\n  },\n  computed: {\n  },\n  data () {\n    return {\n      cam: {\n        pos: { x: 3, y: 5, z: 10 }\n      },\n      ready: false,\n      cubeCamera: false,\n      visible: true,\n      resizer: () => {},\n      scene: false,\n      camera: false,\n      \n      found: [],\n      \n      animatable: {\n        time: { value: 0 }\n      },\n      simpleVS,\n      simpleFS,\n      simpleVS2\n      \n    }\n  },\n  methods: {\n    onClick ({ event, intersects }) {\n      console.log(event, intersects)\n      this.$router.push('/')\n    },\n    setup () {\n    },\n    renderWebGL () {\n      TWEEN.update()\n      \n      this.animatable.time.value += 0.01;\n      \n      if (this.scene && this.camera && this.renderer) {\n        this.renderer.render(this.scene, this.camera)\n      }\n    }\n  },\n  watch: {\n    camera () {\n      if (this.camera && this.renderer) {\n        this.ready = true\n      }\n    },\n    renderer () {\n      if (this.camera && this.renderer) {\n        this.ready = true\n      }\n    },\n    ready () {\n      if (this.ready) {\n        this.setup()\n      }\n    }\n  },\n  created () {\n    \n  },\n  activated () {\n    var self = this\n    function loop (rAFT) {\n      self.rAFID = window.requestAnimationFrame(loop)\n      self.renderWebGL(rAFT)\n    }\n    self.rAFID = window.requestAnimationFrame(loop)\n  },\n  deactivated () {\n    window.cancelAnimationFrame(this.rAFID);\n    console.log('cancel animation frame')\n  }\n}\n</script>\n\n<style scoped>\n.full{\n  width: 100%;\n  height: 100%;\n}\n</style>\n"},{"path":"@/webgl/sample.vue","src":"<template>\n  <div class=\"full\">\n\n    <Renderer\n      ref=\"renderer\"\n      :size=\"size\"\n      @renderer=\"(v) => { renderer = v }\"\n    >\n    </Renderer>\n\n    <PerspectiveCamera\n      :fov=\"75\"\n      :aspect=\"size.aspect\"\n      :near=\"1\"\n      :far=\"1000\"\n      :position=\"{ x: 0, y: 0, z: 10 }\"\n      @camera=\"(v) => { camera = v; }\"\n    />\n\n    <Scene @scene=\"(v) => { scene = v }\">\n      <Object3D pz=\"10\">\n        <PointLight />\n      </Object3D>\n      \n      <Object3D pz=\"0\">\n        <Points>\n          <SphereBufferGeometry />\n          <ShaderMaterial :vs=\"simpleVS\" :fs=\"simpleFS\" :uniforms=\"animatable\" />\n        </Points>\n      </Object3D>\n      \n    </Scene>\n\n  </div>\n</template>\n\n<script>\nimport Bundle from '@/webgl/Bundle.js';\nimport simpleVS from '@/shader/Simple/vs.vert'\nimport simpleFS from '@/shader/Simple/fs.frag'\n\nexport default {\n  components: {\n    ...Bundle\n  },\n  computed: {\n  },\n  methods: {\n    renderWebGL () {\n      this.animatable.time.value = window.performance.now() * 0.001;\n      \n      if (this.scene && this.camera && this.renderer) {\n        this.renderer.render(this.scene, this.camera)\n      }\n    }\n  },\n  data () {\n    return {\n      animatable: {\n        time: { value: 0 }\n      },\n      simpleVS,\n      simpleFS,\n      size: {\n        width: window.innerWidth,\n        height: window.innerHeight,\n        aspect: window.innerWidth / window.innerHeight\n      },\n      renderer: false,\n      scene: false,\n      camera: false\n    }\n  },\n  created () {\n    \n  },\n  mounted () {\n    var self = this\n    function loop () {\n      self.rAFID = window.requestAnimationFrame(loop)\n      self.renderWebGL()\n    }\n    self.rAFID = window.requestAnimationFrame(loop)\n  }\n}\n</script>\n\n<style scoped>\n.full{\n  width: 100%;\n  height: 100%;\n}\n</style>\n"},{"path":"@/webgl/Bundle.js","src":"import Renderer from '@/webgl/System/Renderer.vue';\nimport Scene from '@/webgl/System/Scene.vue';\nimport PerspectiveCamera from '@/webgl/System/PerspectiveCamera.vue';\nimport Raycaster from '@/webgl/System/Raycaster.vue';\n\nimport MeshPhongMaterial from '@/webgl/Material/MeshPhongMaterial.vue';\nimport ShaderMaterial from '@/webgl/Material/ShaderMaterial.vue';\n\nimport Object3D from '@/webgl/Element/Object3D.vue';\nimport Mesh from '@/webgl/Element/Mesh.vue';\nimport Points from '@/webgl/Element/Points.vue';\nimport PointLight from '@/webgl/Element/PointLight.vue';\n\nimport SphereBufferGeometry from '@/webgl/Geo/SphereBufferGeometry.vue';\n\n\nexport default {\n  //materials\n  MeshPhongMaterial,\n  ShaderMaterial,\n  \n  //system\n  Renderer,\n  Scene,\n  PerspectiveCamera,\n  Raycaster,\n  \n  //Elemnts\n  PointLight,\n  Points,\n  Object3D,\n  Mesh,\n  \n  //Geo\n  SphereBufferGeometry\n}\n"},{"path":"@/webgl/System/Renderer.vue","src":"<template>\n  <div class=\"full pos-rel\">\n    <div class=\"full layer\" ref=\"mounter\"></div>\n    <div class=\"full layer\" ref=\"toucher\"><slot></slot></div>\n  </div>\n</template>\n\n<script>\nvar THREE = window.THREE\n\nexport default {\n  data () {\n    return {\n      // THREE,\n      renderer: false\n    }\n  },\n  props: {\n    size: { default () { return { width: 500, height: 500 } } },\n    alpha: { default: true },\n    antialias: { default: true }\n  },\n  mounted () {\n    this.renderer = new THREE.WebGLRenderer({\n      alpha: this.alpha,\n      antialias: this.antialias\n    })\n    this.resize()\n    this.renderer.domElement.style.marginBottom = '-6px'\n    this.$refs.mounter.appendChild(this.renderer.domElement)\n    \n    this.$emit('toucher', this.$refs['toucher'])\n    this.$emit('renderer', this.renderer)\n  },\n  beforeDestroy () {\n    this.$refs.mounter.removeChild(this.renderer.domElement)\n  },\n  watch: {\n    size () {\n      this.resize()\n    }\n  },\n  methods: {\n    resize () {\n      let ratio = window.devicePixelRatio || 1\n      this.renderer.setPixelRatio(ratio)\n      this.renderer.setSize(this.size.width, this.size.height)\n    }\n  }\n}\n</script>\n\n<style scoped>\n.full{\n  width: 100%;\n  height: 100%;\n}\n.pos-rel{\n  position: relative;\n}\n.layer{\n  position: absolute;\n  top: 0px;\n  left: 0px;\n}\n</style>\n"},{"path":"@/webgl/System/Scene.vue","src":"<template>\n  <div ref=\"mounter\" class=\"mounter\"><slot></slot></div>\n</template>\n\n<script>\nvar THREE = window.THREE\nexport default {\n  data () {\n    return {\n      scene: false\n    }\n  },\n  props: {\n    size: { default () { return { width: 500, height: 500 } } },\n    alpha: { default: true },\n    antialias: { default: true }\n  },\n  created () {\n    this.scene = new THREE.Scene()\n    this.$on('add', (v) => {\n      this.scene.add(v)\n    })\n    this.$on('remove', (v) => {\n      this.scene.remove(v)\n    })\n  },\n  mounted () {\n    this.$emit('scene', this.scene)\n  }\n}\n</script>\n\n<style scoped>\n.mounter {\n  display: none;\n}\n</style>\n"},{"path":"@/webgl/System/PerspectiveCamera.vue","src":"<script>\nvar THREE = window.THREE;\nexport default {\n  abstract: true,\n  render () {\n    return null\n  },\n  props: ['fov', 'aspect', 'near', 'far', 'position'],\n  data () {\n    return {\n      camera: null\n    }\n  },\n  created () {\n    this.camera = new THREE.PerspectiveCamera(this.fov, this.aspect, this.near, this.far)\n\n    if (this.position) {\n      this.camera.position.x = this.position.x\n      this.camera.position.y = this.position.y\n      this.camera.position.z = this.position.z\n    }\n    this.$emit('camera', this.camera)\n  },\n  watch: {\n    position () {\n      if (this.position) {\n        this.camera.position.x = this.position.x\n        this.camera.position.y = this.position.y\n        this.camera.position.z = this.position.z\n      }\n    },\n    aspect () {\n      if (this.camera) {\n        this.camera.aspect = this.aspect\n        this.camera.updateProjectionMatrix()\n      }\n    }\n  }\n}\n</script>\n\n<style scoped>\n.perspective-camera{\n  display: none;\n}\n</style>\n"},{"path":"@/webgl/System/Raycaster.vue","src":"<template>\n<div></div>\n</template>\n\n<script>\n\nexport default {\n  data () {\n    return {\n      rAFID: 0,\n      mouse: null,\n      raycast () {},\n      clean () {},\n      intersects: []\n    }\n  },\n  props: {\n    scene: {},\n    camera: {},\n    toucher: {}\n  },\n  created () {\n  },\n  activated () {\n    var raycaster = new THREE.Raycaster();\n    this.mouse = new THREE.Vector2();\n    \n    this.toucher.addEventListener('mousemove', this.handleMV, false);\n    this.toucher.addEventListener('click', this.handleClick, false);\n    this.clean = () => {\n      this.toucher.removeEventListener('click', this.handleClick, false);\n      this.toucher.removeEventListener('mousemove', this.handleMV);\n    }\n    \n    var raycast = () => {\n      var mouse = this.mouse;\n      var scene = this.scene;\n      var camera = this.camera;\n      \n      var restore = [];\n      this.scene.traverse((ele) => {\n        if (ele.$skipRayCast) {\n          restore.push({\n            parent: ele.parent,\n            ele: ele\n          })\n          ele.parent.remove(ele);\n        }\n      })\n      \n      \n    \t// update the picking ray with the camera and mouse position\n    \traycaster.setFromCamera( mouse, camera );\n    \t// calculate objects intersecting the picking ray\n    \tvar intersects = raycaster.intersectObjects( scene.children, true );\n    \t\n    \trestore.forEach((item) => {\n        item.parent.add(item.ele);\n      })\n    \t\n    \treturn intersects\n  \t};\n    this.raycast = raycast; \n    \n    var rAF = () => {\n      this.rAFID = window.requestAnimationFrame(rAF);\n      // this.raycast();\n    }\n    this.rAFID = window.requestAnimationFrame(rAF);\n  },\n  deactivated () {\n    window.cancelAnimationFrame(this.rAFID);\n    this.clean();\n  },\n  methods: {\n    handleClick (event) {\n      this.$emit('click', {\n        event,\n        intersects: this.raycast()\n      })\n    },\n    handleMV (event) {\n      this.mouse.x = (event.clientX / window.innerWidth) * 2 - 1;\n\t    this.mouse.y = - (event.clientY / window.innerHeight) * 2 + 1;\n    }\n    \n  }\n}\n</script>\n\n<style>\n\n</style>\n"},{"path":"@/webgl/Material/MeshPhongMaterial.vue","src":"<template>\n<div class=\"mesh-phong-material\"></div>\n</template>\n\n<script>\nvar THREE = window.THREE;\n\nexport default {\n  props: {\n    color: {\n      default () {\n        return Math.random() * 0xffffff\n      }\n    }\n  },\n  data () {\n    return {\n      material: false\n    }\n  },\n  created () {\n    this.material = new THREE.MeshPhongMaterial({\n      color: new THREE.Color(this.color),\n      specular: new THREE.Color(0x111111),\n      shininess: 50\n    })\n    this.$parent.$emit('material', this.material)\n  }\n}\n</script>\n\n<style>\n\n</style>\n"},{"path":"@/webgl/Material/ShaderMaterial.vue","src":"<template>\n<div class=\"mesh-basic-material\"></div>\n</template>\n\n<script>\nvar THREE = window.THREE;\n\nexport default {\n  data () {\n    return {\n      material: false\n    }\n  },\n  props: {\n    vs: {\n      default:\n`void main ( void ) {\n  vec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\n  vec4 outputPos = projectionMatrix * mvPosition;\n  gl_Position = outputPos;\n}`\n    },\n    fs: {\n      default:\n`void main () {\n  gl_FragColor = vec4(vec3(0.5), 1.0);\n}`\n    },\n    uniforms: {\n      default () {\n        return {}\n      }\n    }\n  },\n  watch: {\n    vs () { this.initShader() },\n    fs () { this.initShader() },\n    uniforms () { this.initShader() }\n  },\n  mounted () {\n    this.initShader()\n  },\n  methods: {\n    initShader () {\n      try {\n        this.material = new THREE.ShaderMaterial({\n          uniforms: {\n            ...this.uniforms// ,\n            // ...THREE.UniformsUtils.merge([\n            //   THREE.UniformsLib.common,\n            //   THREE.UniformsLib.aomap,\n            //   THREE.UniformsLib.lightmap,\n            //   THREE.UniformsLib.emissivemap,\n            //   THREE.UniformsLib.bumpmap,\n            //   THREE.UniformsLib.normalmap,\n            //   THREE.UniformsLib.displacementmap,\n            //   THREE.UniformsLib.fog,\n            //   THREE.UniformsLib.lights,\n            //   THREE.UniformsLib.shadowmap,\n            //   {\n            //     flipEnvMap: {\n            //       value: 1\n            //     },\n            //     emissive: {\n            //       value: new THREE.Color(0x000000)\n            //     },\n            //     specular: {\n            //       value: new THREE.Color(0x111111)\n            //     },\n            //     shininess: {\n            //       value: 30\n            //     },\n            //     envMap: {\n            //       // value: cubeCamera.renderTarget\n            //     }\n            //   }\n            // ])\n          },\n          vertexShader: this.vs || this.$options.props.vs.default,\n          fragmentShader: this.fs || this.$options.props.fs.default\n        })\n        this.$parent.$emit('material', this.material)\n      } catch (e) {\n        console.log(e)\n      }\n    }\n  }\n}\n</script>\n\n<style>\n\n</style>\n"},{"path":"@/webgl/Element/PointLight.vue","src":"<template>\n  <div class=\"light-point\"></div>\n</template>\n\n<script>\nvar THREE = window.THREE;\n\nexport default {\n  props: {\n    color: {\n      default () {\n        return 0xffffff\n      }\n    }\n  },\n  data () {\n    return {\n      light: false\n    }\n  },\n  mounted () {\n    this.light = new THREE.PointLight({ color: new THREE.Color(this.color) })\n    this.$emit('element', this.light)\n    this.$parent.$emit('add', this.light)\n  },\n  beforeDestroy () {\n    this.$parent.$emit('remove', this.light)\n  }\n}\n</script>\n\n<style>\n\n</style>\n"},{"path":"@/webgl/Element/Object3D.vue","src":"<template>\n<div class=\"object-3d\"><slot></slot></div>\n</template>\n\n<script>\nvar THREE = window.THREE;\nexport default {\n  data () {\n    return {\n      object3d: false\n    }\n  },\n  props: {\n    visible: { default: true },\n    px: { default: 0 },\n    py: { default: 0 },\n    pz: { default: 0 },\n\n    sx: { default: 1 },\n    sy: { default: 1 },\n    sz: { default: 1 },\n\n    rx: { default: 0 },\n    ry: { default: 0 },\n    rz: { default: 0 }\n  },\n  watch: {\n    visible () { this.object3d.setVisible(this.visible) },\n    px () { this.updatePosition('x', this.px) },\n    py () { this.updatePosition('y', this.py) },\n    pz () { this.updatePosition('z', this.pz) },\n\n    sx () { this.updateScale('x', this.sx) },\n    sy () { this.updateScale('y', this.sy) },\n    sz () { this.updateScale('z', this.sz) },\n\n    rx () { this.updateRotation('x', this.rx) },\n    ry () { this.updateRotation('y', this.ry) },\n    rz () { this.updateRotation('z', this.rz) }\n  },\n  created () {\n    this.object3d = new THREE.Object3D()\n    this.$emit('element', this.object3d)\n    this.object3d.visible = true\n    this.updatePosition()\n    this.updateScale()\n    this.updateRotation()\n    this.$on('add', (v) => {\n      this.object3d.add(v)\n    })\n    this.$on('remove', (v) => {\n      this.object3d.remove(v)\n    })\n  },\n  mounted () {\n    this.$parent.$emit('add', this.object3d)\n  },\n  beforeDestroy () {\n    this.$parent.$emit('remove', this.object3d)\n  },\n  methods: {\n    updatePosition (key, val) {\n      if (key) {\n        this.object3d.position[key] = val\n      } else {\n        this.object3d.position.set(this.px, this.py, this.pz)\n      }\n    },\n    updateScale (key, val) {\n      if (key) {\n        this.object3d.scale[key] = val\n      } else {\n        this.object3d.scale.set(this.sx, this.sy, this.sz)\n      }\n    },\n    updateRotation (key, val) {\n      if (key) {\n        this.object3d.rotation[key] = val\n      } else {\n        this.object3d.rotation.set(this.rx, this.ry, this.rz)\n      }\n    }\n  }\n}\n</script>\n\n<style>\n\n</style>\n"},{"path":"@/webgl/Element/Points.vue","src":"<template>\n  <div class=\"points\">\n    <slot>\n    </slot>\n  </div>\n</template>\n\n<script>\nimport THREE from '@/three.js'\n\nexport default {\n  props: {\n    position: {}\n  },\n  data () {\n    return {\n      element: false,\n      points: false,\n      material: false,\n      geometry: false\n    }\n  },\n  created () {\n    this.element = this.points = new THREE.Points()\n    this.$parent.$emit('add', this.points)\n    this.$emit('element', this.points)\n    this.$on('material', (v) => {\n      this.material = v\n      this.tryUpdateMaterial()\n    })\n    this.$on('geometry', (v) => {\n      this.geometry = v\n      this.tryUpdateGeometry()\n    })\n  },\n  beforeDestroy () {\n    this.uninstall()\n  },\n  methods: {\n    tryUpdateGeometry (v) {\n      if (this.points) {\n        this.points.geometry = this.geometry\n      }\n    },\n    tryUpdateMaterial (v) {\n      if (this.points) {\n        this.points.material = this.material\n      }\n    },\n    uninstall () {\n      this.$parent.$emit('remove', this.points)\n    }\n  }\n}\n</script>\n\n<style>\n\n</style>\n"},{"path":"@/webgl/Element/Mesh.vue","src":"<template>\n  <div class=\"mesh\">\n    <slot>\n    </slot>\n  </div>\n</template>\n\n<script>\nvar THREE = window.THREE;\nexport default {\n  props: {\n  },\n  data () {\n    return {\n      element: false,\n      mesh: false,\n      material: false,\n      geometry: false\n    }\n  },\n  created () {\n    this.element = this.mesh = new THREE.Mesh()\n    this.$parent.$emit('add', this.mesh)\n    this.$emit('element', this.mesh)\n\n    this.$on('material', (v) => {\n      this.material = v\n      this.tryUpdateMaterial()\n    })\n    this.$on('geometry', (v) => {\n      this.geometry = v\n      this.tryUpdateGeometry()\n    })\n  },\n  beforeDestroy () {\n    this.uninstall()\n  },\n  methods: {\n    tryUpdateGeometry (v) {\n      if (this.mesh) {\n        this.mesh.geometry = this.geometry\n      }\n    },\n    tryUpdateMaterial (v) {\n      if (this.mesh) {\n        this.mesh.material = this.material\n      }\n    },\n    uninstall () {\n      this.$parent.$emit('remove', this.mesh)\n    }\n  }\n}\n</script>\n\n<style>\n\n</style>\n"},{"path":"@/webgl/Geo/SphereBufferGeometry.vue","src":"<template>\n  <div class=\"geo-sphere\"></div>\n</template>\n\n<script>\nvar THREE = window.THREE\nexport default {\n  data () {\n    return {\n      geometry: false\n    }\n  },\n  mounted () {\n    let geometry = new THREE.SphereBufferGeometry(2, 256, 256)\n    this.$parent.$emit('geometry', geometry)\n  }\n}\n</script>\n\n<style>\n\n</style>\n"},{"path":"@/shader/Simple/vs.vert","src":"varying vec3 vPos;\nuniform float time;\n\nvoid main (void) {\n  vPos = position;\n  vPos.x = vPos.x + sin(vPos.x + time);\n  vPos.y = vPos.y + cos(vPos.y + time);\n  vPos.z = vPos.z + tan(vPos.z + time);\n  \n  vec4 mvPosition = modelViewMatrix * vec4(position, 1.0);\n  vec4 outputPos = projectionMatrix * mvPosition;\n  gl_Position = outputPos;\n}"},{"path":"@/shader/Simple/fs.frag","src":"varying vec3 vPos;\n\nvoid main () {\n  gl_FragColor = vec4(vec3(vPos), 1.0);\n}"},{"path":"@/shader/Fling/vs.vert","src":"varying vec3 vPos;\nuniform float time;\n\nvoid main (void) {\n  vPos = position;\n  vPos.x = vPos.x + sin(vPos.x + time);\n  vPos.y = vPos.y + cos(vPos.y + time);\n  vPos.z = vPos.z + tan(vPos.z + time);\n  \n  vec4 mvPosition = modelViewMatrix * vec4(vPos, 1.0);\n  vec4 outputPos = projectionMatrix * mvPosition;\n  gl_Position = outputPos;\n}"},{"path":"@/three.js","src":"var THREE = window.THREE\nexport default THREE\n"}],"date":"Fri Feb 16 2018 05:36:25 GMT+0800 (HKT)"},{"currentFilePath":"@/index.html","openedFiles":[{"path":"@/index.html"}],"files":[{"path":"@/index.html","src":"<!DOCTYPE html>\n<html>\n  <head>\n    <meta charset=\"UTF-8\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge,chrome=1\">\n    <meta name=\"viewport\" content=\"width=device-width,initial-scale=1\">\n\n    <title>WebGL</title>\n\n    <meta name=\"author\" content=\"loklok\">\n    <meta name=\"description\" content=\"WebGL Art\">\n    <meta name=\"keywords\" content=\"WebGL, Art\">\n\n    <style type=\"text/css\">\n    </style>\n\n  </head>\n  <body>\n    <div id=\"app-attach-point\"></div>\n    \n    <script required src=\"https://cdnjs.cloudflare.com/ajax/libs/vue/2.5.2/vue.min.js\"></script>\n    <script required src=\"https://cdnjs.cloudflare.com/ajax/libs/vue-router/3.0.1/vue-router.min.js\"></script>\n    <script required src=\"https://cdnjs.cloudflare.com/ajax/libs/tween.js/16.3.5/Tween.min.js\"></script>\n    <script required src=\"https://cdnjs.cloudflare.com/ajax/libs/three.js/88/three.min.js\" integrity=\"sha256-6fhm481uY9c152qGWIVgE7KbzaCj5WjCi3BGIpZef2E=\" crossorigin=\"anonymous\"></script>\n    <script required src=\"https://threejs.org/examples/js/GPUComputationRenderer.js\"></script>\n  </body>\n</html>\n"},{"path":"@/style.css","src":"html, body {\n  width: 100%;\n  height: 100%;\n  margin: 0px;\n  padding: 0px;\n}\nhtml, body, #app {\n  box-sizing: border-box;\n  width: 100%;\n  height: 100%;\n  overflow: hidden;\n}\n.full{\n  width: 100%;\n  height: 100%;\n}"},{"path":"@/main.js","src":"import '@/style.css'\nimport App from '@/app.vue'\nimport router from '@/router.js'\n\nvar oldDOM = document.querySelector('#app-attach-point');\nvar newDOM = document.createElement('div');\nnewDOM.id = '#app-attach-point';\ndocument.body.appendChild(newDOM);\nvar target = oldDOM || newDOM;\n\nvar app = new Vue({\n  router,\n  el: target,\n  components: {\n    App\n  },\n  template: '<div id=\"app\"><App /></div>'\n})\n\nwindow.addEventListener('message', (evt) => {\n  var { type, data } = evt.data;\n  window.dispatchEvent(new CustomEvent(type, { detail: data }))\n}, false);\n\nwindow.addEventListener('slider', ({ detail }) => {\n  console.log(detail);\n  (window.opener || window.top).dispatchEvent(new CustomEvent('loklok', { detail: { rand: Math.random() } }))\n});\n\nexport default app;\n"},{"path":"@/router.js","src":"import Player from '@/webgl/layout/Player.vue'\nimport Home from '@/webgl/pages/Home.vue'\nimport Happy from '@/webgl/pages/Happy.vue'\n\nconst router = new VueRouter({\n  mode: 'hash',\n  routes: [\n    {\n      path: '/',\n      component: Player,\n      children: [\n        {\n          path: '',\n          component: Home\n        },\n        {\n          path: 'happy',\n          component: Happy\n        }\n      ]\n    }\n  ]\n})\n\nexport default router\n"},{"path":"@/app.vue","src":"<template>\n  <div>\n    <router-view></router-view>\n  </div>\n</template>\n\n<script>\nimport THREE from '@/three.js'\n\nexport default {\n  data () {\n    return {\n      \n    }\n  },\n  created () {\n    \n  },\n  beforeDestroy () {\n    \n  },\n  methods: {\n    \n  }\n}\n</script>\n\n<style>\n\n</style>\n"},{"path":"@/webgl/layout/Player.vue","src":"<template>\n  <div class=\"full\" ref=\"full\">\n\n    <Renderer\n      ref=\"renderer\"\n      :size=\"size\"\n      @renderer=\"(v) => { renderer = v }\"\n      @toucher=\"(v) => { toucher = v }\"\n    >\n    </Renderer>\n    \n    <keep-alive>\n      <component\n        class=\"hidden\"\n        :is=\"'router-view'\"\n        v-if=\"renderer\"\n        :size=\"size\"\n        :toucher=\"toucher\"\n        :renderer=\"renderer\"\n      >\n      </component>\n    </keep-alive>\n\n  </div>\n</template>\n\n<script>\nimport Bundle from '@/webgl/Bundle.js';\n\nexport default {\n  components: {\n    ...Bundle\n  },\n  computed: {\n  },\n  methods: {\n    \n  },\n  data () {\n    return {\n      toucher: false,\n      resizer: () => {},\n      renderer: false,\n      size: {\n        width: 100,\n        height: 100,\n        aspect: 1\n      }\n    }\n  },\n  created () {\n    \n  },\n  mounted () {\n    var resizer = this.resizer = () => {\n      this.$nextTick(() => {\n        var rect = this.$refs.full.getBoundingClientRect()\n        this.size = {\n          width: rect.width,\n          height: rect.height,\n          aspect: rect.width / rect.height\n        }\n      })\n    }\n    window.addEventListener('resize', resizer.bind(this))\n    resizer()\n  }\n}\n</script>\n\n<style scoped>\n.hidden{\n  display: none;\n}\n.full{\n  width: 100%;\n  height: 100%;\n}\n</style>\n"},{"path":"@/webgl/pages/Home.vue","src":"<template>\n  <div class=\"\">\n    <PerspectiveCamera\n      :fov=\"75\"\n      :aspect=\"size.aspect\"\n      :near=\"1\"\n      :far=\"1000\"\n      :position=\"{ x: 0, y: 0, z: 15 }\"\n      @camera=\"(v) => { camera = v; }\"\n    />\n    \n    <Scene @scene=\"(v) => { scene = v }\">\n      <Object3D pz=\"10\">\n        <PointLight />\n      </Object3D>\n      \n      <Object3D pz=\"0\">\n        <Mesh>\n          <SphereBufferGeometry />\n          <ShaderMaterial :vs=\"simpleVS\" :fs=\"simpleFS\" :uniforms=\"animatable\" />\n        </Mesh>\n      </Object3D>\n    </Scene>\n    \n    <Raycaster v-if=\"camera && toucher && scene\" :scene=\"scene\" :toucher=\"toucher\" :camera=\"camera\" @found=\"(v) => { found = v; }\" @click=\"onClick\">\n    </Raycaster>\n    \n  </div>\n</template>\n\n<script>\nimport Bundle from '@/webgl/Bundle.js';\n\nimport simpleVS from '@/shader/Simple/vs.vert'\nimport simpleFS from '@/shader/Simple/fs.frag'\n\nexport default {\n  name: 'Home',\n  props: {\n    toucher: {},\n    size: {},\n    renderer: {},\n    doc: {}\n  },\n  components: {\n    ...Bundle\n  },\n  computed: {\n  },\n  data () {\n    return {\n      cam: {\n        pos: { x: 3, y: 5, z: 10 }\n      },\n      ready: false,\n      cubeCamera: false,\n      visible: true,\n      resizer: () => {},\n      scene: false,\n      camera: false,\n      \n      found: [],\n      \n      animatable: {\n        time: { value: 0 }\n      },\n      simpleVS,\n      simpleFS\n      \n    }\n  },\n  methods: {\n    onClick ({ event, intersects }) {\n      this.$router.push({\n        path: '/happy'\n      })\n      this.$forceUpdate()\n      console.log('Click to happy');\n    },\n    setup () {\n    },\n    renderWebGL () {\n      TWEEN.update()\n      \n      this.animatable.time.value += 0.01;\n      \n      if (this.scene && this.camera && this.renderer) {\n        this.renderer.render(this.scene, this.camera)\n      }\n    }\n  },\n  watch: {\n    camera () {\n      if (this.camera && this.renderer) {\n        this.ready = true\n      }\n    },\n    renderer () {\n      if (this.camera && this.renderer) {\n        this.ready = true\n      }\n    },\n    ready () {\n      if (this.ready) {\n        this.setup()\n      }\n    }\n  },\n  created () {\n    \n  },\n  activated () {\n    var self = this\n    function loop (rAFT) {\n      self.rAFID = window.requestAnimationFrame(loop)\n      self.renderWebGL(rAFT)\n    }\n    self.rAFID = window.requestAnimationFrame(loop)\n  },\n  deactivated () {\n    window.cancelAnimationFrame(this.rAFID)\n  }\n}\n</script>\n\n<style scoped>\n.full{\n  width: 100%;\n  height: 100%;\n}\n</style>\n"},{"path":"@/webgl/pages/Happy.vue","src":"<template>\n  <div class=\"\">\n\n    <PerspectiveCamera\n      :fov=\"75\"\n      :aspect=\"size.aspect\"\n      :near=\"1\"\n      :far=\"1000\"\n      :position=\"{ x: 0, y: 0, z: 15 }\"\n      @camera=\"(v) => { camera = v; }\"\n    />\n    \n    <Scene @scene=\"(v) => { scene = v }\">\n      <Object3D pz=\"10\">\n        <PointLight />\n      </Object3D>\n      \n      <Object3D pz=\"0\">\n        <Points @element=\"(v) => { v.$skipRayCast = true }\">\n          <SphereBufferGeometry />\n          <ShaderMaterial :vs=\"simpleVS2\" :fs=\"simpleFS\" :uniforms=\"animatable\" />\n        </Points>\n      </Object3D>\n      \n      <Object3D pz=\"1\">\n        <Mesh>\n          <SphereBufferGeometry />\n          <ShaderMaterial :vs=\"simpleVS\" :fs=\"simpleFS\" :uniforms=\"animatable\" />\n        </Mesh>\n      </Object3D>\n    </Scene>\n    \n    <Raycaster v-if=\"renderer && camera && toucher && scene\" :scene=\"scene\" :toucher=\"toucher\" :camera=\"camera\" @found=\"(v) => { found = v; }\" @click=\"onClick\">\n    </Raycaster>\n\n  </div>\n</template>\n\n<script>\nimport Bundle from '@/webgl/Bundle.js';\n\nimport simpleVS2 from '@/shader/Fling/vs.vert'\nimport simpleVS from '@/shader/Simple/vs.vert'\nimport simpleFS from '@/shader/Simple/fs.frag'\n\nexport default {\n  name: 'Happy',\n  props: {\n    toucher: {},\n    size: {},\n    renderer: {},\n    doc: {}\n  },\n  components: {\n    ...Bundle\n  },\n  computed: {\n  },\n  data () {\n    return {\n      cam: {\n        pos: { x: 3, y: 5, z: 10 }\n      },\n      ready: false,\n      cubeCamera: false,\n      visible: true,\n      resizer: () => {},\n      scene: false,\n      camera: false,\n      \n      found: [],\n      \n      animatable: {\n        time: { value: 0 }\n      },\n      simpleVS,\n      simpleFS,\n      simpleVS2\n      \n    }\n  },\n  methods: {\n    onClick ({ event, intersects }) {\n      console.log(event, intersects)\n      this.$router.push('/')\n    },\n    setup () {\n    },\n    renderWebGL () {\n      TWEEN.update()\n      \n      this.animatable.time.value += 0.01;\n      \n      if (this.scene && this.camera && this.renderer) {\n        this.renderer.render(this.scene, this.camera)\n      }\n    }\n  },\n  watch: {\n    camera () {\n      if (this.camera && this.renderer) {\n        this.ready = true\n      }\n    },\n    renderer () {\n      if (this.camera && this.renderer) {\n        this.ready = true\n      }\n    },\n    ready () {\n      if (this.ready) {\n        this.setup()\n      }\n    }\n  },\n  created () {\n    \n  },\n  activated () {\n    var self = this\n    function loop (rAFT) {\n      self.rAFID = window.requestAnimationFrame(loop)\n      self.renderWebGL(rAFT)\n    }\n    self.rAFID = window.requestAnimationFrame(loop)\n  },\n  deactivated () {\n    window.cancelAnimationFrame(this.rAFID);\n    console.log('cancel animation frame')\n  }\n}\n</script>\n\n<style scoped>\n.full{\n  width: 100%;\n  height: 100%;\n}\n</style>\n"},{"path":"@/webgl/sample.vue","src":"<template>\n  <div class=\"full\">\n\n    <Renderer\n      ref=\"renderer\"\n      :size=\"size\"\n      @renderer=\"(v) => { renderer = v }\"\n    >\n    </Renderer>\n\n    <PerspectiveCamera\n      :fov=\"75\"\n      :aspect=\"size.aspect\"\n      :near=\"1\"\n      :far=\"1000\"\n      :position=\"{ x: 0, y: 0, z: 10 }\"\n      @camera=\"(v) => { camera = v; }\"\n    />\n\n    <Scene @scene=\"(v) => { scene = v }\">\n      <Object3D pz=\"10\">\n        <PointLight />\n      </Object3D>\n      \n      <Object3D pz=\"0\">\n        <Points>\n          <SphereBufferGeometry />\n          <ShaderMaterial :vs=\"simpleVS\" :fs=\"simpleFS\" :uniforms=\"animatable\" />\n        </Points>\n      </Object3D>\n      \n    </Scene>\n\n  </div>\n</template>\n\n<script>\nimport Bundle from '@/webgl/Bundle.js';\nimport simpleVS from '@/shader/Simple/vs.vert'\nimport simpleFS from '@/shader/Simple/fs.frag'\n\nexport default {\n  components: {\n    ...Bundle\n  },\n  computed: {\n  },\n  methods: {\n    renderWebGL () {\n      this.animatable.time.value = window.performance.now() * 0.001;\n      \n      if (this.scene && this.camera && this.renderer) {\n        this.renderer.render(this.scene, this.camera)\n      }\n    }\n  },\n  data () {\n    return {\n      animatable: {\n        time: { value: 0 }\n      },\n      simpleVS,\n      simpleFS,\n      size: {\n        width: window.innerWidth,\n        height: window.innerHeight,\n        aspect: window.innerWidth / window.innerHeight\n      },\n      renderer: false,\n      scene: false,\n      camera: false\n    }\n  },\n  created () {\n    \n  },\n  mounted () {\n    var self = this\n    function loop () {\n      self.rAFID = window.requestAnimationFrame(loop)\n      self.renderWebGL()\n    }\n    self.rAFID = window.requestAnimationFrame(loop)\n  }\n}\n</script>\n\n<style scoped>\n.full{\n  width: 100%;\n  height: 100%;\n}\n</style>\n"},{"path":"@/webgl/Bundle.js","src":"import Renderer from '@/webgl/System/Renderer.vue';\nimport Scene from '@/webgl/System/Scene.vue';\nimport PerspectiveCamera from '@/webgl/System/PerspectiveCamera.vue';\nimport Raycaster from '@/webgl/System/Raycaster.vue';\n\nimport MeshPhongMaterial from '@/webgl/Material/MeshPhongMaterial.vue';\nimport ShaderMaterial from '@/webgl/Material/ShaderMaterial.vue';\n\nimport Object3D from '@/webgl/Element/Object3D.vue';\nimport Mesh from '@/webgl/Element/Mesh.vue';\nimport Points from '@/webgl/Element/Points.vue';\nimport PointLight from '@/webgl/Element/PointLight.vue';\n\nimport SphereBufferGeometry from '@/webgl/Geo/SphereBufferGeometry.vue';\n\n\nexport default {\n  //materials\n  MeshPhongMaterial,\n  ShaderMaterial,\n  \n  //system\n  Renderer,\n  Scene,\n  PerspectiveCamera,\n  Raycaster,\n  \n  //Elemnts\n  PointLight,\n  Points,\n  Object3D,\n  Mesh,\n  \n  //Geo\n  SphereBufferGeometry\n}\n"},{"path":"@/webgl/System/Renderer.vue","src":"<template>\n  <div class=\"full pos-rel\">\n    <div class=\"full layer\" ref=\"mounter\"></div>\n    <div class=\"full layer\" ref=\"toucher\"><slot></slot></div>\n  </div>\n</template>\n\n<script>\nvar THREE = window.THREE\n\nexport default {\n  data () {\n    return {\n      // THREE,\n      renderer: false\n    }\n  },\n  props: {\n    size: { default () { return { width: 500, height: 500 } } },\n    alpha: { default: true },\n    antialias: { default: true }\n  },\n  mounted () {\n    this.renderer = new THREE.WebGLRenderer({\n      alpha: this.alpha,\n      antialias: this.antialias\n    })\n    this.resize()\n    this.renderer.domElement.style.marginBottom = '-6px'\n    this.$refs.mounter.appendChild(this.renderer.domElement)\n    \n    this.$emit('toucher', this.$refs['toucher'])\n    this.$emit('renderer', this.renderer)\n  },\n  beforeDestroy () {\n    this.$refs.mounter.removeChild(this.renderer.domElement)\n  },\n  watch: {\n    size () {\n      this.resize()\n    }\n  },\n  methods: {\n    resize () {\n      let ratio = window.devicePixelRatio || 1\n      this.renderer.setPixelRatio(ratio)\n      this.renderer.setSize(this.size.width, this.size.height)\n    }\n  }\n}\n</script>\n\n<style scoped>\n.full{\n  width: 100%;\n  height: 100%;\n}\n.pos-rel{\n  position: relative;\n}\n.layer{\n  position: absolute;\n  top: 0px;\n  left: 0px;\n}\n</style>\n"},{"path":"@/webgl/System/Scene.vue","src":"<template>\n  <div ref=\"mounter\" class=\"mounter\"><slot></slot></div>\n</template>\n\n<script>\nvar THREE = window.THREE\nexport default {\n  data () {\n    return {\n      scene: false\n    }\n  },\n  props: {\n    size: { default () { return { width: 500, height: 500 } } },\n    alpha: { default: true },\n    antialias: { default: true }\n  },\n  created () {\n    this.scene = new THREE.Scene()\n    this.$on('add', (v) => {\n      this.scene.add(v)\n    })\n    this.$on('remove', (v) => {\n      this.scene.remove(v)\n    })\n  },\n  mounted () {\n    this.$emit('scene', this.scene)\n  }\n}\n</script>\n\n<style scoped>\n.mounter {\n  display: none;\n}\n</style>\n"},{"path":"@/webgl/System/PerspectiveCamera.vue","src":"<script>\nvar THREE = window.THREE;\nexport default {\n  abstract: true,\n  render () {\n    return null\n  },\n  props: ['fov', 'aspect', 'near', 'far', 'position'],\n  data () {\n    return {\n      camera: null\n    }\n  },\n  created () {\n    this.camera = new THREE.PerspectiveCamera(this.fov, this.aspect, this.near, this.far)\n\n    if (this.position) {\n      this.camera.position.x = this.position.x\n      this.camera.position.y = this.position.y\n      this.camera.position.z = this.position.z\n    }\n    this.$emit('camera', this.camera)\n  },\n  watch: {\n    position () {\n      if (this.position) {\n        this.camera.position.x = this.position.x\n        this.camera.position.y = this.position.y\n        this.camera.position.z = this.position.z\n      }\n    },\n    aspect () {\n      if (this.camera) {\n        this.camera.aspect = this.aspect\n        this.camera.updateProjectionMatrix()\n      }\n    }\n  }\n}\n</script>\n\n<style scoped>\n.perspective-camera{\n  display: none;\n}\n</style>\n"},{"path":"@/webgl/System/Raycaster.vue","src":"<template>\n<div></div>\n</template>\n\n<script>\n\nexport default {\n  data () {\n    return {\n      rAFID: 0,\n      mouse: null,\n      raycast () {},\n      clean () {},\n      intersects: []\n    }\n  },\n  props: {\n    scene: {},\n    camera: {},\n    toucher: {}\n  },\n  created () {\n  },\n  activated () {\n    var raycaster = new THREE.Raycaster();\n    this.mouse = new THREE.Vector2();\n    \n    this.toucher.addEventListener('mousemove', this.handleMV, false);\n    this.toucher.addEventListener('click', this.handleClick, false);\n    this.clean = () => {\n      this.toucher.removeEventListener('click', this.handleClick, false);\n      this.toucher.removeEventListener('mousemove', this.handleMV);\n    }\n    \n    var raycast = () => {\n      var mouse = this.mouse;\n      var scene = this.scene;\n      var camera = this.camera;\n      \n      var restore = [];\n      this.scene.traverse((ele) => {\n        if (ele.$skipRayCast) {\n          restore.push({\n            parent: ele.parent,\n            ele: ele\n          })\n          ele.parent.remove(ele);\n        }\n      })\n      \n      \n    \t// update the picking ray with the camera and mouse position\n    \traycaster.setFromCamera( mouse, camera );\n    \t// calculate objects intersecting the picking ray\n    \tvar intersects = raycaster.intersectObjects( scene.children, true );\n    \t\n    \trestore.forEach((item) => {\n        item.parent.add(item.ele);\n      })\n    \t\n    \treturn intersects\n  \t};\n    this.raycast = raycast; \n    \n    var rAF = () => {\n      this.rAFID = window.requestAnimationFrame(rAF);\n      // this.raycast();\n    }\n    this.rAFID = window.requestAnimationFrame(rAF);\n  },\n  deactivated () {\n    window.cancelAnimationFrame(this.rAFID);\n    this.clean();\n  },\n  methods: {\n    handleClick (event) {\n      this.$emit('click', {\n        event,\n        intersects: this.raycast()\n      })\n    },\n    handleMV (event) {\n      this.mouse.x = (event.clientX / window.innerWidth) * 2 - 1;\n\t    this.mouse.y = - (event.clientY / window.innerHeight) * 2 + 1;\n    }\n    \n  }\n}\n</script>\n\n<style>\n\n</style>\n"},{"path":"@/webgl/Material/MeshPhongMaterial.vue","src":"<template>\n<div class=\"mesh-phong-material\"></div>\n</template>\n\n<script>\nvar THREE = window.THREE;\n\nexport default {\n  props: {\n    color: {\n      default () {\n        return Math.random() * 0xffffff\n      }\n    }\n  },\n  data () {\n    return {\n      material: false\n    }\n  },\n  created () {\n    this.material = new THREE.MeshPhongMaterial({\n      color: new THREE.Color(this.color),\n      specular: new THREE.Color(0x111111),\n      shininess: 50\n    })\n    this.$parent.$emit('material', this.material)\n  }\n}\n</script>\n\n<style>\n\n</style>\n"},{"path":"@/webgl/Material/ShaderMaterial.vue","src":"<template>\n<div class=\"mesh-basic-material\"></div>\n</template>\n\n<script>\nvar THREE = window.THREE;\n\nexport default {\n  data () {\n    return {\n      material: false\n    }\n  },\n  props: {\n    vs: {\n      default:\n`void main ( void ) {\n  vec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\n  vec4 outputPos = projectionMatrix * mvPosition;\n  gl_Position = outputPos;\n}`\n    },\n    fs: {\n      default:\n`void main () {\n  gl_FragColor = vec4(vec3(0.5), 1.0);\n}`\n    },\n    uniforms: {\n      default () {\n        return {}\n      }\n    }\n  },\n  watch: {\n    vs () { this.initShader() },\n    fs () { this.initShader() },\n    uniforms () { this.initShader() }\n  },\n  mounted () {\n    this.initShader()\n  },\n  methods: {\n    initShader () {\n      try {\n        this.material = new THREE.ShaderMaterial({\n          uniforms: {\n            ...this.uniforms// ,\n            // ...THREE.UniformsUtils.merge([\n            //   THREE.UniformsLib.common,\n            //   THREE.UniformsLib.aomap,\n            //   THREE.UniformsLib.lightmap,\n            //   THREE.UniformsLib.emissivemap,\n            //   THREE.UniformsLib.bumpmap,\n            //   THREE.UniformsLib.normalmap,\n            //   THREE.UniformsLib.displacementmap,\n            //   THREE.UniformsLib.fog,\n            //   THREE.UniformsLib.lights,\n            //   THREE.UniformsLib.shadowmap,\n            //   {\n            //     flipEnvMap: {\n            //       value: 1\n            //     },\n            //     emissive: {\n            //       value: new THREE.Color(0x000000)\n            //     },\n            //     specular: {\n            //       value: new THREE.Color(0x111111)\n            //     },\n            //     shininess: {\n            //       value: 30\n            //     },\n            //     envMap: {\n            //       // value: cubeCamera.renderTarget\n            //     }\n            //   }\n            // ])\n          },\n          vertexShader: this.vs || this.$options.props.vs.default,\n          fragmentShader: this.fs || this.$options.props.fs.default\n        })\n        this.$parent.$emit('material', this.material)\n      } catch (e) {\n        console.log(e)\n      }\n    }\n  }\n}\n</script>\n\n<style>\n\n</style>\n"},{"path":"@/webgl/Element/PointLight.vue","src":"<template>\n  <div class=\"light-point\"></div>\n</template>\n\n<script>\nvar THREE = window.THREE;\n\nexport default {\n  props: {\n    color: {\n      default () {\n        return 0xffffff\n      }\n    }\n  },\n  data () {\n    return {\n      light: false\n    }\n  },\n  mounted () {\n    this.light = new THREE.PointLight({ color: new THREE.Color(this.color) })\n    this.$emit('element', this.light)\n    this.$parent.$emit('add', this.light)\n  },\n  beforeDestroy () {\n    this.$parent.$emit('remove', this.light)\n  }\n}\n</script>\n\n<style>\n\n</style>\n"},{"path":"@/webgl/Element/Object3D.vue","src":"<template>\n<div class=\"object-3d\"><slot></slot></div>\n</template>\n\n<script>\nvar THREE = window.THREE;\nexport default {\n  data () {\n    return {\n      object3d: false\n    }\n  },\n  props: {\n    visible: { default: true },\n    px: { default: 0 },\n    py: { default: 0 },\n    pz: { default: 0 },\n\n    sx: { default: 1 },\n    sy: { default: 1 },\n    sz: { default: 1 },\n\n    rx: { default: 0 },\n    ry: { default: 0 },\n    rz: { default: 0 }\n  },\n  watch: {\n    visible () { this.object3d.setVisible(this.visible) },\n    px () { this.updatePosition('x', this.px) },\n    py () { this.updatePosition('y', this.py) },\n    pz () { this.updatePosition('z', this.pz) },\n\n    sx () { this.updateScale('x', this.sx) },\n    sy () { this.updateScale('y', this.sy) },\n    sz () { this.updateScale('z', this.sz) },\n\n    rx () { this.updateRotation('x', this.rx) },\n    ry () { this.updateRotation('y', this.ry) },\n    rz () { this.updateRotation('z', this.rz) }\n  },\n  created () {\n    this.object3d = new THREE.Object3D()\n    this.$emit('element', this.object3d)\n    this.object3d.visible = true\n    this.updatePosition()\n    this.updateScale()\n    this.updateRotation()\n    this.$on('add', (v) => {\n      this.object3d.add(v)\n    })\n    this.$on('remove', (v) => {\n      this.object3d.remove(v)\n    })\n  },\n  mounted () {\n    this.$parent.$emit('add', this.object3d)\n  },\n  beforeDestroy () {\n    this.$parent.$emit('remove', this.object3d)\n  },\n  methods: {\n    updatePosition (key, val) {\n      if (key) {\n        this.object3d.position[key] = val\n      } else {\n        this.object3d.position.set(this.px, this.py, this.pz)\n      }\n    },\n    updateScale (key, val) {\n      if (key) {\n        this.object3d.scale[key] = val\n      } else {\n        this.object3d.scale.set(this.sx, this.sy, this.sz)\n      }\n    },\n    updateRotation (key, val) {\n      if (key) {\n        this.object3d.rotation[key] = val\n      } else {\n        this.object3d.rotation.set(this.rx, this.ry, this.rz)\n      }\n    }\n  }\n}\n</script>\n\n<style>\n\n</style>\n"},{"path":"@/webgl/Element/Points.vue","src":"<template>\n  <div class=\"points\">\n    <slot>\n    </slot>\n  </div>\n</template>\n\n<script>\nimport THREE from '@/three.js'\n\nexport default {\n  props: {\n    position: {}\n  },\n  data () {\n    return {\n      element: false,\n      points: false,\n      material: false,\n      geometry: false\n    }\n  },\n  created () {\n    this.element = this.points = new THREE.Points()\n    this.$parent.$emit('add', this.points)\n    this.$emit('element', this.points)\n    this.$on('material', (v) => {\n      this.material = v\n      this.tryUpdateMaterial()\n    })\n    this.$on('geometry', (v) => {\n      this.geometry = v\n      this.tryUpdateGeometry()\n    })\n  },\n  beforeDestroy () {\n    this.uninstall()\n  },\n  methods: {\n    tryUpdateGeometry (v) {\n      if (this.points) {\n        this.points.geometry = this.geometry\n      }\n    },\n    tryUpdateMaterial (v) {\n      if (this.points) {\n        this.points.material = this.material\n      }\n    },\n    uninstall () {\n      this.$parent.$emit('remove', this.points)\n    }\n  }\n}\n</script>\n\n<style>\n\n</style>\n"},{"path":"@/webgl/Element/Mesh.vue","src":"<template>\n  <div class=\"mesh\">\n    <slot>\n    </slot>\n  </div>\n</template>\n\n<script>\nvar THREE = window.THREE;\nexport default {\n  props: {\n  },\n  data () {\n    return {\n      element: false,\n      mesh: false,\n      material: false,\n      geometry: false\n    }\n  },\n  created () {\n    this.element = this.mesh = new THREE.Mesh()\n    this.$parent.$emit('add', this.mesh)\n    this.$emit('element', this.mesh)\n\n    this.$on('material', (v) => {\n      this.material = v\n      this.tryUpdateMaterial()\n    })\n    this.$on('geometry', (v) => {\n      this.geometry = v\n      this.tryUpdateGeometry()\n    })\n  },\n  beforeDestroy () {\n    this.uninstall()\n  },\n  methods: {\n    tryUpdateGeometry (v) {\n      if (this.mesh) {\n        this.mesh.geometry = this.geometry\n      }\n    },\n    tryUpdateMaterial (v) {\n      if (this.mesh) {\n        this.mesh.material = this.material\n      }\n    },\n    uninstall () {\n      this.$parent.$emit('remove', this.mesh)\n    }\n  }\n}\n</script>\n\n<style>\n\n</style>\n"},{"path":"@/webgl/Geo/SphereBufferGeometry.vue","src":"<template>\n  <div class=\"geo-sphere\"></div>\n</template>\n\n<script>\nvar THREE = window.THREE\nexport default {\n  data () {\n    return {\n      geometry: false\n    }\n  },\n  mounted () {\n    let geometry = new THREE.SphereBufferGeometry(2, 256, 256)\n    this.$parent.$emit('geometry', geometry)\n  }\n}\n</script>\n\n<style>\n\n</style>\n"},{"path":"@/shader/Simple/vs.vert","src":"varying vec3 vPos;\nuniform float time;\n\nvoid main (void) {\n  vPos = position;\n  vPos.x = vPos.x + sin(vPos.x + time);\n  vPos.y = vPos.y + cos(vPos.y + time);\n  vPos.z = vPos.z + tan(vPos.z + time);\n  \n  vec4 mvPosition = modelViewMatrix * vec4(position, 1.0);\n  vec4 outputPos = projectionMatrix * mvPosition;\n  gl_Position = outputPos;\n}"},{"path":"@/shader/Simple/fs.frag","src":"varying vec3 vPos;\n\nvoid main () {\n  gl_FragColor = vec4(vec3(vPos), 1.0);\n}"},{"path":"@/shader/Fling/vs.vert","src":"varying vec3 vPos;\nuniform float time;\n\nvoid main (void) {\n  vPos = position;\n  vPos.x = vPos.x + sin(vPos.x + time);\n  vPos.y = vPos.y + cos(vPos.y + time);\n  vPos.z = vPos.z + tan(vPos.z + time);\n  \n  vec4 mvPosition = modelViewMatrix * vec4(vPos, 1.0);\n  vec4 outputPos = projectionMatrix * mvPosition;\n  gl_Position = outputPos;\n}"},{"path":"@/three.js","src":"var THREE = window.THREE\nexport default THREE\n"}],"date":"Fri Feb 16 2018 05:36:27 GMT+0800 (HKT)"},{"currentFilePath":"@/index.html","openedFiles":[{"path":"@/index.html"}],"files":[{"path":"@/index.html","src":"<!DOCTYPE html>\n<html>\n  <head>\n    <meta charset=\"UTF-8\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge,chrome=1\">\n    <meta name=\"viewport\" content=\"width=device-width,initial-scale=1\">\n\n    <title>WebGL</title>\n\n    <meta name=\"author\" content=\"loklok\">\n    <meta name=\"description\" content=\"WebGL Art\">\n    <meta name=\"keywords\" content=\"WebGL, Art\">\n\n    <style type=\"text/css\">\n    </style>\n\n  </head>\n  <body>\n    <div id=\"app-attach-point\"></div>\n    \n    <script required src=\"https://cdnjs.cloudflare.com/ajax/libs/vue/2.5.2/vue.min.js\"></script>\n    <script required src=\"https://cdnjs.cloudflare.com/ajax/libs/vue-router/3.0.1/vue-router.min.js\"></script>\n    <script required src=\"https://cdnjs.cloudflare.com/ajax/libs/tween.js/16.3.5/Tween.min.js\"></script>\n    <script required src=\"https://cdnjs.cloudflare.com/ajax/libs/three.js/88/three.min.js\" integrity=\"sha256-6fhm481uY9c152qGWIVgE7KbzaCj5WjCi3BGIpZef2E=\" crossorigin=\"anonymous\"></script>\n    <script required src=\"https://threejs.org/examples/js/GPUComputationRenderer.js\"></script>\n  </body>\n</html>\n"},{"path":"@/style.css","src":"html, body {\n  width: 100%;\n  height: 100%;\n  margin: 0px;\n  padding: 0px;\n}\nhtml, body, #app {\n  box-sizing: border-box;\n  width: 100%;\n  height: 100%;\n  overflow: hidden;\n}\n.full{\n  width: 100%;\n  height: 100%;\n}"},{"path":"@/main.js","src":"import '@/style.css'\nimport App from '@/app.vue'\nimport router from '@/router.js'\n\nvar oldDOM = document.querySelector('#app-attach-point');\nvar newDOM = document.createElement('div');\nnewDOM.id = '#app-attach-point';\ndocument.body.appendChild(newDOM);\nvar target = oldDOM || newDOM;\n\nvar app = new Vue({\n  router,\n  el: target,\n  components: {\n    App\n  },\n  template: '<div id=\"app\"><App /></div>'\n})\n\nwindow.addEventListener('message', (evt) => {\n  var { type, data } = evt.data;\n  window.dispatchEvent(new CustomEvent(type, { detail: data }))\n}, false);\n\nwindow.addEventListener('slider', ({ detail }) => {\n  console.log(detail);\n  (window.opener || window.top).dispatchEvent(new CustomEvent('loklok', { detail: { rand: Math.random() } }))\n});\n\nexport default app;\n"},{"path":"@/router.js","src":"import Player from '@/webgl/layout/Player.vue'\nimport Home from '@/webgl/pages/Home.vue'\nimport Happy from '@/webgl/pages/Happy.vue'\n\nconst router = new VueRouter({\n  mode: 'hash',\n  routes: [\n    {\n      path: '/',\n      component: Player,\n      children: [\n        {\n          path: '',\n          component: Home\n        },\n        {\n          path: 'happy',\n          component: Happy\n        }\n      ]\n    }\n  ]\n})\n\nexport default router\n"},{"path":"@/app.vue","src":"<template>\n  <div>\n    <router-view></router-view>\n  </div>\n</template>\n\n<script>\nimport THREE from '@/three.js'\n\nexport default {\n  data () {\n    return {\n      \n    }\n  },\n  created () {\n    \n  },\n  beforeDestroy () {\n    \n  },\n  methods: {\n    \n  }\n}\n</script>\n\n<style>\n\n</style>\n"},{"path":"@/webgl/layout/Player.vue","src":"<template>\n  <div class=\"full\" ref=\"full\">\n\n    <Renderer\n      ref=\"renderer\"\n      :size=\"size\"\n      @renderer=\"(v) => { renderer = v }\"\n      @toucher=\"(v) => { toucher = v }\"\n    >\n    </Renderer>\n    \n    <keep-alive>\n      <component\n        class=\"hidden\"\n        :is=\"'router-view'\"\n        v-if=\"renderer\"\n        :size=\"size\"\n        :toucher=\"toucher\"\n        :renderer=\"renderer\"\n      >\n      </component>\n    </keep-alive>\n\n  </div>\n</template>\n\n<script>\nimport Bundle from '@/webgl/Bundle.js';\n\nexport default {\n  components: {\n    ...Bundle\n  },\n  computed: {\n  },\n  methods: {\n    \n  },\n  data () {\n    return {\n      toucher: false,\n      resizer: () => {},\n      renderer: false,\n      size: {\n        width: 100,\n        height: 100,\n        aspect: 1\n      }\n    }\n  },\n  created () {\n    \n  },\n  mounted () {\n    var resizer = this.resizer = () => {\n      this.$nextTick(() => {\n        var rect = this.$refs.full.getBoundingClientRect()\n        this.size = {\n          width: rect.width,\n          height: rect.height,\n          aspect: rect.width / rect.height\n        }\n      })\n    }\n    window.addEventListener('resize', resizer.bind(this))\n    resizer()\n  }\n}\n</script>\n\n<style scoped>\n.hidden{\n  display: none;\n}\n.full{\n  width: 100%;\n  height: 100%;\n}\n</style>\n"},{"path":"@/webgl/pages/Home.vue","src":"<template>\n  <div class=\"\">\n    <PerspectiveCamera\n      :fov=\"75\"\n      :aspect=\"size.aspect\"\n      :near=\"1\"\n      :far=\"1000\"\n      :position=\"{ x: 0, y: 0, z: 15 }\"\n      @camera=\"(v) => { camera = v; }\"\n    />\n    \n    <Scene @scene=\"(v) => { scene = v }\">\n      <Object3D pz=\"10\">\n        <PointLight />\n      </Object3D>\n      \n      <Object3D pz=\"0\">\n        <Mesh>\n          <SphereBufferGeometry />\n          <ShaderMaterial :vs=\"simpleVS\" :fs=\"simpleFS\" :uniforms=\"animatable\" />\n        </Mesh>\n      </Object3D>\n    </Scene>\n    \n    <Raycaster v-if=\"camera && toucher && scene\" :scene=\"scene\" :toucher=\"toucher\" :camera=\"camera\" @found=\"(v) => { found = v; }\" @click=\"onClick\">\n    </Raycaster>\n    \n  </div>\n</template>\n\n<script>\nimport Bundle from '@/webgl/Bundle.js';\n\nimport simpleVS from '@/shader/Simple/vs.vert'\nimport simpleFS from '@/shader/Simple/fs.frag'\n\nexport default {\n  name: 'Home',\n  props: {\n    toucher: {},\n    size: {},\n    renderer: {},\n    doc: {}\n  },\n  components: {\n    ...Bundle\n  },\n  computed: {\n  },\n  data () {\n    return {\n      cam: {\n        pos: { x: 3, y: 5, z: 10 }\n      },\n      ready: false,\n      cubeCamera: false,\n      visible: true,\n      resizer: () => {},\n      scene: false,\n      camera: false,\n      \n      found: [],\n      \n      animatable: {\n        time: { value: 0 }\n      },\n      simpleVS,\n      simpleFS\n      \n    }\n  },\n  methods: {\n    onClick ({ event, intersects }) {\n      this.$router.push({\n        path: '/happy'\n      })\n      this.$forceUpdate()\n      console.log('Click to happy');\n    },\n    setup () {\n    },\n    renderWebGL () {\n      TWEEN.update()\n      \n      this.animatable.time.value += 0.01;\n      \n      if (this.scene && this.camera && this.renderer) {\n        this.renderer.render(this.scene, this.camera)\n      }\n    }\n  },\n  watch: {\n    camera () {\n      if (this.camera && this.renderer) {\n        this.ready = true\n      }\n    },\n    renderer () {\n      if (this.camera && this.renderer) {\n        this.ready = true\n      }\n    },\n    ready () {\n      if (this.ready) {\n        this.setup()\n      }\n    }\n  },\n  created () {\n    \n  },\n  activated () {\n    var self = this\n    function loop (rAFT) {\n      self.rAFID = window.requestAnimationFrame(loop)\n      self.renderWebGL(rAFT)\n    }\n    self.rAFID = window.requestAnimationFrame(loop)\n  },\n  deactivated () {\n    window.cancelAnimationFrame(this.rAFID)\n  }\n}\n</script>\n\n<style scoped>\n.full{\n  width: 100%;\n  height: 100%;\n}\n</style>\n"},{"path":"@/webgl/pages/Happy.vue","src":"<template>\n  <div class=\"\">\n\n    <PerspectiveCamera\n      :fov=\"75\"\n      :aspect=\"size.aspect\"\n      :near=\"1\"\n      :far=\"1000\"\n      :position=\"{ x: 0, y: 0, z: 15 }\"\n      @camera=\"(v) => { camera = v; }\"\n    />\n    \n    <Scene @scene=\"(v) => { scene = v }\">\n      <Object3D pz=\"10\">\n        <PointLight />\n      </Object3D>\n      \n      <Object3D pz=\"0\">\n        <Points @element=\"(v) => { v.$skipRayCast = true }\">\n          <SphereBufferGeometry />\n          <ShaderMaterial :vs=\"simpleVS2\" :fs=\"simpleFS\" :uniforms=\"animatable\" />\n        </Points>\n      </Object3D>\n      \n      <Object3D pz=\"1\">\n        <Mesh>\n          <SphereBufferGeometry />\n          <ShaderMaterial :vs=\"simpleVS\" :fs=\"simpleFS\" :uniforms=\"animatable\" />\n        </Mesh>\n      </Object3D>\n    </Scene>\n    \n    <Raycaster v-if=\"renderer && camera && toucher && scene\" :scene=\"scene\" :toucher=\"toucher\" :camera=\"camera\" @found=\"(v) => { found = v; }\" @click=\"onClick\">\n    </Raycaster>\n\n  </div>\n</template>\n\n<script>\nimport Bundle from '@/webgl/Bundle.js';\n\nimport simpleVS2 from '@/shader/Fling/vs.vert'\nimport simpleVS from '@/shader/Simple/vs.vert'\nimport simpleFS from '@/shader/Simple/fs.frag'\n\nexport default {\n  name: 'Happy',\n  props: {\n    toucher: {},\n    size: {},\n    renderer: {},\n    doc: {}\n  },\n  components: {\n    ...Bundle\n  },\n  computed: {\n  },\n  data () {\n    return {\n      cam: {\n        pos: { x: 3, y: 5, z: 10 }\n      },\n      ready: false,\n      cubeCamera: false,\n      visible: true,\n      resizer: () => {},\n      scene: false,\n      camera: false,\n      \n      found: [],\n      \n      animatable: {\n        time: { value: 0 }\n      },\n      simpleVS,\n      simpleFS,\n      simpleVS2\n      \n    }\n  },\n  methods: {\n    onClick ({ event, intersects }) {\n      console.log(event, intersects)\n      this.$router.push('/')\n    },\n    setup () {\n    },\n    renderWebGL () {\n      TWEEN.update()\n      \n      this.animatable.time.value += 0.01;\n      \n      if (this.scene && this.camera && this.renderer) {\n        this.renderer.render(this.scene, this.camera)\n      }\n    }\n  },\n  watch: {\n    camera () {\n      if (this.camera && this.renderer) {\n        this.ready = true\n      }\n    },\n    renderer () {\n      if (this.camera && this.renderer) {\n        this.ready = true\n      }\n    },\n    ready () {\n      if (this.ready) {\n        this.setup()\n      }\n    }\n  },\n  created () {\n    \n  },\n  activated () {\n    var self = this\n    function loop (rAFT) {\n      self.rAFID = window.requestAnimationFrame(loop)\n      self.renderWebGL(rAFT)\n    }\n    self.rAFID = window.requestAnimationFrame(loop)\n  },\n  deactivated () {\n    window.cancelAnimationFrame(this.rAFID);\n    console.log('cancel animation frame')\n  }\n}\n</script>\n\n<style scoped>\n.full{\n  width: 100%;\n  height: 100%;\n}\n</style>\n"},{"path":"@/webgl/sample.vue","src":"<template>\n  <div class=\"full\">\n\n    <Renderer\n      ref=\"renderer\"\n      :size=\"size\"\n      @renderer=\"(v) => { renderer = v }\"\n    >\n    </Renderer>\n\n    <PerspectiveCamera\n      :fov=\"75\"\n      :aspect=\"size.aspect\"\n      :near=\"1\"\n      :far=\"1000\"\n      :position=\"{ x: 0, y: 0, z: 10 }\"\n      @camera=\"(v) => { camera = v; }\"\n    />\n\n    <Scene @scene=\"(v) => { scene = v }\">\n      <Object3D pz=\"10\">\n        <PointLight />\n      </Object3D>\n      \n      <Object3D pz=\"0\">\n        <Points>\n          <SphereBufferGeometry />\n          <ShaderMaterial :vs=\"simpleVS\" :fs=\"simpleFS\" :uniforms=\"animatable\" />\n        </Points>\n      </Object3D>\n      \n    </Scene>\n\n  </div>\n</template>\n\n<script>\nimport Bundle from '@/webgl/Bundle.js';\nimport simpleVS from '@/shader/Simple/vs.vert'\nimport simpleFS from '@/shader/Simple/fs.frag'\n\nexport default {\n  components: {\n    ...Bundle\n  },\n  computed: {\n  },\n  methods: {\n    renderWebGL () {\n      this.animatable.time.value = window.performance.now() * 0.001;\n      \n      if (this.scene && this.camera && this.renderer) {\n        this.renderer.render(this.scene, this.camera)\n      }\n    }\n  },\n  data () {\n    return {\n      animatable: {\n        time: { value: 0 }\n      },\n      simpleVS,\n      simpleFS,\n      size: {\n        width: window.innerWidth,\n        height: window.innerHeight,\n        aspect: window.innerWidth / window.innerHeight\n      },\n      renderer: false,\n      scene: false,\n      camera: false\n    }\n  },\n  created () {\n    \n  },\n  mounted () {\n    var self = this\n    function loop () {\n      self.rAFID = window.requestAnimationFrame(loop)\n      self.renderWebGL()\n    }\n    self.rAFID = window.requestAnimationFrame(loop)\n  }\n}\n</script>\n\n<style scoped>\n.full{\n  width: 100%;\n  height: 100%;\n}\n</style>\n"},{"path":"@/webgl/Bundle.js","src":"import Renderer from '@/webgl/System/Renderer.vue';\nimport Scene from '@/webgl/System/Scene.vue';\nimport PerspectiveCamera from '@/webgl/System/PerspectiveCamera.vue';\nimport Raycaster from '@/webgl/System/Raycaster.vue';\n\nimport MeshPhongMaterial from '@/webgl/Material/MeshPhongMaterial.vue';\nimport ShaderMaterial from '@/webgl/Material/ShaderMaterial.vue';\n\nimport Object3D from '@/webgl/Element/Object3D.vue';\nimport Mesh from '@/webgl/Element/Mesh.vue';\nimport Points from '@/webgl/Element/Points.vue';\nimport PointLight from '@/webgl/Element/PointLight.vue';\n\nimport SphereBufferGeometry from '@/webgl/Geo/SphereBufferGeometry.vue';\n\n\nexport default {\n  //materials\n  MeshPhongMaterial,\n  ShaderMaterial,\n  \n  //system\n  Renderer,\n  Scene,\n  PerspectiveCamera,\n  Raycaster,\n  \n  //Elemnts\n  PointLight,\n  Points,\n  Object3D,\n  Mesh,\n  \n  //Geo\n  SphereBufferGeometry\n}\n"},{"path":"@/webgl/System/Renderer.vue","src":"<template>\n  <div class=\"full pos-rel\">\n    <div class=\"full layer\" ref=\"mounter\"></div>\n    <div class=\"full layer\" ref=\"toucher\"><slot></slot></div>\n  </div>\n</template>\n\n<script>\nvar THREE = window.THREE\n\nexport default {\n  data () {\n    return {\n      // THREE,\n      renderer: false\n    }\n  },\n  props: {\n    size: { default () { return { width: 500, height: 500 } } },\n    alpha: { default: true },\n    antialias: { default: true }\n  },\n  mounted () {\n    this.renderer = new THREE.WebGLRenderer({\n      alpha: this.alpha,\n      antialias: this.antialias\n    })\n    this.resize()\n    this.renderer.domElement.style.marginBottom = '-6px'\n    this.$refs.mounter.appendChild(this.renderer.domElement)\n    \n    this.$emit('toucher', this.$refs['toucher'])\n    this.$emit('renderer', this.renderer)\n  },\n  beforeDestroy () {\n    this.$refs.mounter.removeChild(this.renderer.domElement)\n  },\n  watch: {\n    size () {\n      this.resize()\n    }\n  },\n  methods: {\n    resize () {\n      let ratio = window.devicePixelRatio || 1\n      this.renderer.setPixelRatio(ratio)\n      this.renderer.setSize(this.size.width, this.size.height)\n    }\n  }\n}\n</script>\n\n<style scoped>\n.full{\n  width: 100%;\n  height: 100%;\n}\n.pos-rel{\n  position: relative;\n}\n.layer{\n  position: absolute;\n  top: 0px;\n  left: 0px;\n}\n</style>\n"},{"path":"@/webgl/System/Scene.vue","src":"<template>\n  <div ref=\"mounter\" class=\"mounter\"><slot></slot></div>\n</template>\n\n<script>\nvar THREE = window.THREE\nexport default {\n  data () {\n    return {\n      scene: false\n    }\n  },\n  props: {\n    size: { default () { return { width: 500, height: 500 } } },\n    alpha: { default: true },\n    antialias: { default: true }\n  },\n  created () {\n    this.scene = new THREE.Scene()\n    this.$on('add', (v) => {\n      this.scene.add(v)\n    })\n    this.$on('remove', (v) => {\n      this.scene.remove(v)\n    })\n  },\n  mounted () {\n    this.$emit('scene', this.scene)\n  }\n}\n</script>\n\n<style scoped>\n.mounter {\n  display: none;\n}\n</style>\n"},{"path":"@/webgl/System/PerspectiveCamera.vue","src":"<script>\nvar THREE = window.THREE;\nexport default {\n  abstract: true,\n  render () {\n    return null\n  },\n  props: ['fov', 'aspect', 'near', 'far', 'position'],\n  data () {\n    return {\n      camera: null\n    }\n  },\n  created () {\n    this.camera = new THREE.PerspectiveCamera(this.fov, this.aspect, this.near, this.far)\n\n    if (this.position) {\n      this.camera.position.x = this.position.x\n      this.camera.position.y = this.position.y\n      this.camera.position.z = this.position.z\n    }\n    this.$emit('camera', this.camera)\n  },\n  watch: {\n    position () {\n      if (this.position) {\n        this.camera.position.x = this.position.x\n        this.camera.position.y = this.position.y\n        this.camera.position.z = this.position.z\n      }\n    },\n    aspect () {\n      if (this.camera) {\n        this.camera.aspect = this.aspect\n        this.camera.updateProjectionMatrix()\n      }\n    }\n  }\n}\n</script>\n\n<style scoped>\n.perspective-camera{\n  display: none;\n}\n</style>\n"},{"path":"@/webgl/System/Raycaster.vue","src":"<template>\n<div></div>\n</template>\n\n<script>\n\nexport default {\n  data () {\n    return {\n      rAFID: 0,\n      mouse: null,\n      raycast () {},\n      clean () {},\n      intersects: []\n    }\n  },\n  props: {\n    scene: {},\n    camera: {},\n    toucher: {}\n  },\n  created () {\n  },\n  activated () {\n    var raycaster = new THREE.Raycaster();\n    this.mouse = new THREE.Vector2();\n    \n    this.toucher.addEventListener('mousemove', this.handleMV, false);\n    this.toucher.addEventListener('click', this.handleClick, false);\n    this.clean = () => {\n      this.toucher.removeEventListener('click', this.handleClick, false);\n      this.toucher.removeEventListener('mousemove', this.handleMV);\n    }\n    \n    var raycast = () => {\n      var mouse = this.mouse;\n      var scene = this.scene;\n      var camera = this.camera;\n      \n      var restore = [];\n      this.scene.traverse((ele) => {\n        if (ele.$skipRayCast) {\n          restore.push({\n            parent: ele.parent,\n            ele: ele\n          })\n          ele.parent.remove(ele);\n        }\n      })\n      \n      \n    \t// update the picking ray with the camera and mouse position\n    \traycaster.setFromCamera( mouse, camera );\n    \t// calculate objects intersecting the picking ray\n    \tvar intersects = raycaster.intersectObjects( scene.children, true );\n    \t\n    \trestore.forEach((item) => {\n        item.parent.add(item.ele);\n      })\n    \t\n    \treturn intersects\n  \t};\n    this.raycast = raycast; \n    \n    var rAF = () => {\n      this.rAFID = window.requestAnimationFrame(rAF);\n      // this.raycast();\n    }\n    this.rAFID = window.requestAnimationFrame(rAF);\n  },\n  deactivated () {\n    window.cancelAnimationFrame(this.rAFID);\n    this.clean();\n  },\n  methods: {\n    handleClick (event) {\n      this.$emit('click', {\n        event,\n        intersects: this.raycast()\n      })\n    },\n    handleMV (event) {\n      this.mouse.x = (event.clientX / window.innerWidth) * 2 - 1;\n\t    this.mouse.y = - (event.clientY / window.innerHeight) * 2 + 1;\n    }\n    \n  }\n}\n</script>\n\n<style>\n\n</style>\n"},{"path":"@/webgl/Material/MeshPhongMaterial.vue","src":"<template>\n<div class=\"mesh-phong-material\"></div>\n</template>\n\n<script>\nvar THREE = window.THREE;\n\nexport default {\n  props: {\n    color: {\n      default () {\n        return Math.random() * 0xffffff\n      }\n    }\n  },\n  data () {\n    return {\n      material: false\n    }\n  },\n  created () {\n    this.material = new THREE.MeshPhongMaterial({\n      color: new THREE.Color(this.color),\n      specular: new THREE.Color(0x111111),\n      shininess: 50\n    })\n    this.$parent.$emit('material', this.material)\n  }\n}\n</script>\n\n<style>\n\n</style>\n"},{"path":"@/webgl/Material/ShaderMaterial.vue","src":"<template>\n<div class=\"mesh-basic-material\"></div>\n</template>\n\n<script>\nvar THREE = window.THREE;\n\nexport default {\n  data () {\n    return {\n      material: false\n    }\n  },\n  props: {\n    vs: {\n      default:\n`void main ( void ) {\n  vec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\n  vec4 outputPos = projectionMatrix * mvPosition;\n  gl_Position = outputPos;\n}`\n    },\n    fs: {\n      default:\n`void main () {\n  gl_FragColor = vec4(vec3(0.5), 1.0);\n}`\n    },\n    uniforms: {\n      default () {\n        return {}\n      }\n    }\n  },\n  watch: {\n    vs () { this.initShader() },\n    fs () { this.initShader() },\n    uniforms () { this.initShader() }\n  },\n  mounted () {\n    this.initShader()\n  },\n  methods: {\n    initShader () {\n      try {\n        this.material = new THREE.ShaderMaterial({\n          uniforms: {\n            ...this.uniforms// ,\n            // ...THREE.UniformsUtils.merge([\n            //   THREE.UniformsLib.common,\n            //   THREE.UniformsLib.aomap,\n            //   THREE.UniformsLib.lightmap,\n            //   THREE.UniformsLib.emissivemap,\n            //   THREE.UniformsLib.bumpmap,\n            //   THREE.UniformsLib.normalmap,\n            //   THREE.UniformsLib.displacementmap,\n            //   THREE.UniformsLib.fog,\n            //   THREE.UniformsLib.lights,\n            //   THREE.UniformsLib.shadowmap,\n            //   {\n            //     flipEnvMap: {\n            //       value: 1\n            //     },\n            //     emissive: {\n            //       value: new THREE.Color(0x000000)\n            //     },\n            //     specular: {\n            //       value: new THREE.Color(0x111111)\n            //     },\n            //     shininess: {\n            //       value: 30\n            //     },\n            //     envMap: {\n            //       // value: cubeCamera.renderTarget\n            //     }\n            //   }\n            // ])\n          },\n          vertexShader: this.vs || this.$options.props.vs.default,\n          fragmentShader: this.fs || this.$options.props.fs.default\n        })\n        this.$parent.$emit('material', this.material)\n      } catch (e) {\n        console.log(e)\n      }\n    }\n  }\n}\n</script>\n\n<style>\n\n</style>\n"},{"path":"@/webgl/Element/PointLight.vue","src":"<template>\n  <div class=\"light-point\"></div>\n</template>\n\n<script>\nvar THREE = window.THREE;\n\nexport default {\n  props: {\n    color: {\n      default () {\n        return 0xffffff\n      }\n    }\n  },\n  data () {\n    return {\n      light: false\n    }\n  },\n  mounted () {\n    this.light = new THREE.PointLight({ color: new THREE.Color(this.color) })\n    this.$emit('element', this.light)\n    this.$parent.$emit('add', this.light)\n  },\n  beforeDestroy () {\n    this.$parent.$emit('remove', this.light)\n  }\n}\n</script>\n\n<style>\n\n</style>\n"},{"path":"@/webgl/Element/Object3D.vue","src":"<template>\n<div class=\"object-3d\"><slot></slot></div>\n</template>\n\n<script>\nvar THREE = window.THREE;\nexport default {\n  data () {\n    return {\n      object3d: false\n    }\n  },\n  props: {\n    visible: { default: true },\n    px: { default: 0 },\n    py: { default: 0 },\n    pz: { default: 0 },\n\n    sx: { default: 1 },\n    sy: { default: 1 },\n    sz: { default: 1 },\n\n    rx: { default: 0 },\n    ry: { default: 0 },\n    rz: { default: 0 }\n  },\n  watch: {\n    visible () { this.object3d.setVisible(this.visible) },\n    px () { this.updatePosition('x', this.px) },\n    py () { this.updatePosition('y', this.py) },\n    pz () { this.updatePosition('z', this.pz) },\n\n    sx () { this.updateScale('x', this.sx) },\n    sy () { this.updateScale('y', this.sy) },\n    sz () { this.updateScale('z', this.sz) },\n\n    rx () { this.updateRotation('x', this.rx) },\n    ry () { this.updateRotation('y', this.ry) },\n    rz () { this.updateRotation('z', this.rz) }\n  },\n  created () {\n    this.object3d = new THREE.Object3D()\n    this.$emit('element', this.object3d)\n    this.object3d.visible = true\n    this.updatePosition()\n    this.updateScale()\n    this.updateRotation()\n    this.$on('add', (v) => {\n      this.object3d.add(v)\n    })\n    this.$on('remove', (v) => {\n      this.object3d.remove(v)\n    })\n  },\n  mounted () {\n    this.$parent.$emit('add', this.object3d)\n  },\n  beforeDestroy () {\n    this.$parent.$emit('remove', this.object3d)\n  },\n  methods: {\n    updatePosition (key, val) {\n      if (key) {\n        this.object3d.position[key] = val\n      } else {\n        this.object3d.position.set(this.px, this.py, this.pz)\n      }\n    },\n    updateScale (key, val) {\n      if (key) {\n        this.object3d.scale[key] = val\n      } else {\n        this.object3d.scale.set(this.sx, this.sy, this.sz)\n      }\n    },\n    updateRotation (key, val) {\n      if (key) {\n        this.object3d.rotation[key] = val\n      } else {\n        this.object3d.rotation.set(this.rx, this.ry, this.rz)\n      }\n    }\n  }\n}\n</script>\n\n<style>\n\n</style>\n"},{"path":"@/webgl/Element/Points.vue","src":"<template>\n  <div class=\"points\">\n    <slot>\n    </slot>\n  </div>\n</template>\n\n<script>\nimport THREE from '@/three.js'\n\nexport default {\n  props: {\n    position: {}\n  },\n  data () {\n    return {\n      element: false,\n      points: false,\n      material: false,\n      geometry: false\n    }\n  },\n  created () {\n    this.element = this.points = new THREE.Points()\n    this.$parent.$emit('add', this.points)\n    this.$emit('element', this.points)\n    this.$on('material', (v) => {\n      this.material = v\n      this.tryUpdateMaterial()\n    })\n    this.$on('geometry', (v) => {\n      this.geometry = v\n      this.tryUpdateGeometry()\n    })\n  },\n  beforeDestroy () {\n    this.uninstall()\n  },\n  methods: {\n    tryUpdateGeometry (v) {\n      if (this.points) {\n        this.points.geometry = this.geometry\n      }\n    },\n    tryUpdateMaterial (v) {\n      if (this.points) {\n        this.points.material = this.material\n      }\n    },\n    uninstall () {\n      this.$parent.$emit('remove', this.points)\n    }\n  }\n}\n</script>\n\n<style>\n\n</style>\n"},{"path":"@/webgl/Element/Mesh.vue","src":"<template>\n  <div class=\"mesh\">\n    <slot>\n    </slot>\n  </div>\n</template>\n\n<script>\nvar THREE = window.THREE;\nexport default {\n  props: {\n  },\n  data () {\n    return {\n      element: false,\n      mesh: false,\n      material: false,\n      geometry: false\n    }\n  },\n  created () {\n    this.element = this.mesh = new THREE.Mesh()\n    this.$parent.$emit('add', this.mesh)\n    this.$emit('element', this.mesh)\n\n    this.$on('material', (v) => {\n      this.material = v\n      this.tryUpdateMaterial()\n    })\n    this.$on('geometry', (v) => {\n      this.geometry = v\n      this.tryUpdateGeometry()\n    })\n  },\n  beforeDestroy () {\n    this.uninstall()\n  },\n  methods: {\n    tryUpdateGeometry (v) {\n      if (this.mesh) {\n        this.mesh.geometry = this.geometry\n      }\n    },\n    tryUpdateMaterial (v) {\n      if (this.mesh) {\n        this.mesh.material = this.material\n      }\n    },\n    uninstall () {\n      this.$parent.$emit('remove', this.mesh)\n    }\n  }\n}\n</script>\n\n<style>\n\n</style>\n"},{"path":"@/webgl/Geo/SphereBufferGeometry.vue","src":"<template>\n  <div class=\"geo-sphere\"></div>\n</template>\n\n<script>\nvar THREE = window.THREE\nexport default {\n  data () {\n    return {\n      geometry: false\n    }\n  },\n  mounted () {\n    let geometry = new THREE.SphereBufferGeometry(2, 256, 256)\n    this.$parent.$emit('geometry', geometry)\n  }\n}\n</script>\n\n<style>\n\n</style>\n"},{"path":"@/shader/Simple/vs.vert","src":"varying vec3 vPos;\nuniform float time;\n\nvoid main (void) {\n  vPos = position;\n  vPos.x = vPos.x + sin(vPos.x + time);\n  vPos.y = vPos.y + cos(vPos.y + time);\n  vPos.z = vPos.z + tan(vPos.z + time);\n  \n  vec4 mvPosition = modelViewMatrix * vec4(position, 1.0);\n  vec4 outputPos = projectionMatrix * mvPosition;\n  gl_Position = outputPos;\n}"},{"path":"@/shader/Simple/fs.frag","src":"varying vec3 vPos;\n\nvoid main () {\n  gl_FragColor = vec4(vec3(vPos), 1.0);\n}"},{"path":"@/shader/Fling/vs.vert","src":"varying vec3 vPos;\nuniform float time;\n\nvoid main (void) {\n  vPos = position;\n  vPos.x = vPos.x + sin(vPos.x + time);\n  vPos.y = vPos.y + cos(vPos.y + time);\n  vPos.z = vPos.z + tan(vPos.z + time);\n  \n  vec4 mvPosition = modelViewMatrix * vec4(vPos, 1.0);\n  vec4 outputPos = projectionMatrix * mvPosition;\n  gl_Position = outputPos;\n}"},{"path":"@/three.js","src":"var THREE = window.THREE\nexport default THREE\n"}],"date":"Fri Feb 16 2018 05:36:54 GMT+0800 (HKT)"},{"currentFilePath":"@/shader/Simple/vs.vert","openedFiles":[{"path":"@/shader/Simple/vs.vert"},{"path":"@/webgl/pages/Happy.vue"},{"path":"@/webgl/pages/Home.vue"},{"path":"@/webgl/layout/Player.vue"},{"path":"@/index.html"}],"files":[{"path":"@/index.html","src":"<!DOCTYPE html>\n<html>\n  <head>\n    <meta charset=\"UTF-8\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge,chrome=1\">\n    <meta name=\"viewport\" content=\"width=device-width,initial-scale=1\">\n\n    <title>WebGL</title>\n\n    <meta name=\"author\" content=\"loklok\">\n    <meta name=\"description\" content=\"WebGL Art\">\n    <meta name=\"keywords\" content=\"WebGL, Art\">\n\n    <style type=\"text/css\">\n    </style>\n\n  </head>\n  <body>\n    <div id=\"app-attach-point\"></div>\n    \n    <script required src=\"https://cdnjs.cloudflare.com/ajax/libs/vue/2.5.2/vue.min.js\"></script>\n    <script required src=\"https://cdnjs.cloudflare.com/ajax/libs/vue-router/3.0.1/vue-router.min.js\"></script>\n    <script required src=\"https://cdnjs.cloudflare.com/ajax/libs/tween.js/16.3.5/Tween.min.js\"></script>\n    <script required src=\"https://cdnjs.cloudflare.com/ajax/libs/three.js/88/three.min.js\" integrity=\"sha256-6fhm481uY9c152qGWIVgE7KbzaCj5WjCi3BGIpZef2E=\" crossorigin=\"anonymous\"></script>\n    <script required src=\"https://threejs.org/examples/js/GPUComputationRenderer.js\"></script>\n  </body>\n</html>\n"},{"path":"@/style.css","src":"html, body {\n  width: 100%;\n  height: 100%;\n  margin: 0px;\n  padding: 0px;\n}\nhtml, body, #app {\n  box-sizing: border-box;\n  width: 100%;\n  height: 100%;\n  overflow: hidden;\n}\n.full{\n  width: 100%;\n  height: 100%;\n}"},{"path":"@/main.js","src":"import '@/style.css'\nimport App from '@/app.vue'\nimport router from '@/router.js'\n\nvar oldDOM = document.querySelector('#app-attach-point');\nvar newDOM = document.createElement('div');\nnewDOM.id = '#app-attach-point';\ndocument.body.appendChild(newDOM);\nvar target = oldDOM || newDOM;\n\nvar app = new Vue({\n  router,\n  el: target,\n  components: {\n    App\n  },\n  template: '<div id=\"app\"><App /></div>'\n})\n\nwindow.addEventListener('message', (evt) => {\n  var { type, data } = evt.data;\n  window.dispatchEvent(new CustomEvent(type, { detail: data }))\n}, false);\n\nwindow.addEventListener('slider', ({ detail }) => {\n  console.log(detail);\n  (window.opener || window.top).dispatchEvent(new CustomEvent('loklok', { detail: { rand: Math.random() } }))\n});\n\nexport default app;\n"},{"path":"@/router.js","src":"import Player from '@/webgl/layout/Player.vue'\nimport Home from '@/webgl/pages/Home.vue'\nimport Happy from '@/webgl/pages/Happy.vue'\n\nconst router = new VueRouter({\n  mode: 'hash',\n  routes: [\n    {\n      path: '/',\n      component: Player,\n      children: [\n        {\n          path: '',\n          component: Home\n        },\n        {\n          path: 'happy',\n          component: Happy\n        }\n      ]\n    }\n  ]\n})\n\nexport default router\n"},{"path":"@/app.vue","src":"<template>\n  <div>\n    <router-view></router-view>\n  </div>\n</template>\n\n<script>\nimport THREE from '@/three.js'\n\nexport default {\n  data () {\n    return {\n      \n    }\n  },\n  created () {\n    \n  },\n  beforeDestroy () {\n    \n  },\n  methods: {\n    \n  }\n}\n</script>\n\n<style>\n\n</style>\n"},{"path":"@/webgl/layout/Player.vue","src":"<template>\n  <div class=\"full\" ref=\"full\">\n\n    <Renderer\n      :alpha=\"false\"\n      ref=\"renderer\"\n      :size=\"size\"\n      @renderer=\"(v) => { renderer = v }\"\n      @toucher=\"(v) => { toucher = v }\"\n    >\n    </Renderer>\n    \n    <keep-alive>\n      <component\n        class=\"hidden\"\n        :is=\"'router-view'\"\n        v-if=\"renderer\"\n        :size=\"size\"\n        :toucher=\"toucher\"\n        :renderer=\"renderer\"\n      >\n      </component>\n    </keep-alive>\n\n  </div>\n</template>\n\n<script>\nimport Bundle from '@/webgl/Bundle.js';\n\nexport default {\n  components: {\n    ...Bundle\n  },\n  computed: {\n  },\n  methods: {\n    \n  },\n  data () {\n    return {\n      toucher: false,\n      resizer: () => {},\n      renderer: false,\n      size: {\n        width: 100,\n        height: 100,\n        aspect: 1\n      }\n    }\n  },\n  created () {\n    \n  },\n  mounted () {\n    var resizer = this.resizer = () => {\n      this.$nextTick(() => {\n        var rect = this.$refs.full.getBoundingClientRect()\n        this.size = {\n          width: rect.width,\n          height: rect.height,\n          aspect: rect.width / rect.height\n        }\n      })\n    }\n    window.addEventListener('resize', resizer.bind(this))\n    resizer()\n  }\n}\n</script>\n\n<style scoped>\n.hidden{\n  display: none;\n}\n.full{\n  width: 100%;\n  height: 100%;\n}\n</style>\n"},{"path":"@/webgl/pages/Home.vue","src":"<template>\n  <div class=\"\">\n    <PerspectiveCamera\n      :fov=\"75\"\n      :aspect=\"size.aspect\"\n      :near=\"1\"\n      :far=\"1000\"\n      :position=\"{ x: 0, y: 0, z: 15 }\"\n      @camera=\"(v) => { camera = v; }\"\n    />\n    \n    <Scene @scene=\"(v) => { scene = v; }\">\n      <Object3D pz=\"10\">\n        <PointLight />\n      </Object3D>\n      \n      <Object3D pz=\"0\">\n        <Mesh>\n          <SphereBufferGeometry />\n          <ShaderMaterial :vs=\"simpleVS\" :fs=\"simpleFS\" :uniforms=\"animatable\" />\n        </Mesh>\n      </Object3D>\n    </Scene>\n    \n    <Raycaster v-if=\"camera && toucher && scene\" :scene=\"scene\" :toucher=\"toucher\" :camera=\"camera\" @found=\"(v) => { found = v; }\" @click=\"onClick\">\n    </Raycaster>\n    \n  </div>\n</template>\n\n<script>\nimport Bundle from '@/webgl/Bundle.js';\n\nimport simpleVS from '@/shader/Simple/vs.vert'\nimport simpleFS from '@/shader/Simple/fs.frag'\n\nexport default {\n  name: 'Home',\n  props: {\n    toucher: {},\n    size: {},\n    renderer: {},\n    doc: {}\n  },\n  components: {\n    ...Bundle\n  },\n  computed: {\n  },\n  data () {\n    return {\n      cam: {\n        pos: { x: 3, y: 5, z: 10 }\n      },\n      ready: false,\n      cubeCamera: false,\n      visible: true,\n      resizer: () => {},\n      scene: false,\n      camera: false,\n      \n      found: [],\n      \n      animatable: {\n        time: { value: 0 }\n      },\n      simpleVS,\n      simpleFS\n      \n    }\n  },\n  methods: {\n    onClick ({ event, intersects }) {\n      this.$router.push({\n        path: '/happy'\n      })\n      this.$forceUpdate()\n      console.log('Click to happy');\n    },\n    setup () {\n      this.scene.background = new THREE.Color(0xffffff);\n    },\n    renderWebGL () {\n      TWEEN.update()\n      \n      this.animatable.time.value += 0.01;\n      \n      if (this.scene && this.camera && this.renderer) {\n        this.renderer.render(this.scene, this.camera)\n      }\n    }\n  },\n  watch: {\n    camera () {\n      if (this.camera && this.renderer) {\n        this.ready = true\n      }\n    },\n    renderer () {\n      if (this.camera && this.renderer) {\n        this.ready = true\n      }\n    },\n    ready () {\n      if (this.ready) {\n        this.setup()\n      }\n    }\n  },\n  created () {\n    \n  },\n  activated () {\n    var self = this\n    function loop (rAFT) {\n      self.rAFID = window.requestAnimationFrame(loop)\n      self.renderWebGL(rAFT)\n    }\n    self.rAFID = window.requestAnimationFrame(loop)\n  },\n  deactivated () {\n    window.cancelAnimationFrame(this.rAFID)\n  }\n}\n</script>\n\n<style scoped>\n.full{\n  width: 100%;\n  height: 100%;\n}\n</style>\n"},{"path":"@/webgl/pages/Happy.vue","src":"<template>\n  <div class=\"\">\n\n    <PerspectiveCamera\n      :fov=\"75\"\n      :aspect=\"size.aspect\"\n      :near=\"1\"\n      :far=\"1000\"\n      :position=\"{ x: 0, y: 0, z: 15 }\"\n      @camera=\"(v) => { camera = v; }\"\n    />\n    \n    <Scene @scene=\"(v) => { scene = v }\">\n      <Object3D pz=\"10\">\n        <PointLight />\n      </Object3D>\n      \n      <Object3D pz=\"0\">\n        <Points @element=\"(v) => { v.$skipRayCast = true }\">\n          <SphereBufferGeometry />\n          <ShaderMaterial :vs=\"simpleVS2\" :fs=\"simpleFS\" :uniforms=\"animatable\" />\n        </Points>\n      </Object3D>\n      \n      <Object3D pz=\"1\">\n        <Mesh>\n          <SphereBufferGeometry />\n          <ShaderMaterial :vs=\"simpleVS\" :fs=\"simpleFS\" :uniforms=\"animatable\" />\n        </Mesh>\n      </Object3D>\n    </Scene>\n    \n    <Raycaster v-if=\"renderer && camera && toucher && scene\" :scene=\"scene\" :toucher=\"toucher\" :camera=\"camera\" @found=\"(v) => { found = v; }\" @click=\"onClick\">\n    </Raycaster>\n\n  </div>\n</template>\n\n<script>\nimport Bundle from '@/webgl/Bundle.js';\n\nimport simpleVS2 from '@/shader/Fling/vs.vert'\nimport simpleVS from '@/shader/Simple/vs.vert'\nimport simpleFS from '@/shader/Simple/fs.frag'\n\nexport default {\n  name: 'Happy',\n  props: {\n    toucher: {},\n    size: {},\n    renderer: {},\n    doc: {}\n  },\n  components: {\n    ...Bundle\n  },\n  computed: {\n  },\n  data () {\n    return {\n      cam: {\n        pos: { x: 3, y: 5, z: 10 }\n      },\n      ready: false,\n      cubeCamera: false,\n      visible: true,\n      resizer: () => {},\n      scene: false,\n      camera: false,\n      \n      found: [],\n      \n      animatable: {\n        time: { value: 0 }\n      },\n      simpleVS,\n      simpleFS,\n      simpleVS2\n      \n    }\n  },\n  methods: {\n    onClick ({ event, intersects }) {\n      console.log(event, intersects)\n      this.$router.push('/')\n    },\n    setup () {\n      this.scene.background = new THREE.Color(0xffffff);\n    },\n    renderWebGL () {\n      TWEEN.update()\n      \n      this.animatable.time.value += 0.01;\n      \n      if (this.scene && this.camera && this.renderer) {\n        this.renderer.render(this.scene, this.camera)\n      }\n    }\n  },\n  watch: {\n    camera () {\n      if (this.camera && this.renderer) {\n        this.ready = true\n      }\n    },\n    renderer () {\n      if (this.camera && this.renderer) {\n        this.ready = true\n      }\n    },\n    ready () {\n      if (this.ready) {\n        this.setup()\n      }\n    }\n  },\n  created () {\n    \n  },\n  activated () {\n    var self = this\n    function loop (rAFT) {\n      self.rAFID = window.requestAnimationFrame(loop)\n      self.renderWebGL(rAFT)\n    }\n    self.rAFID = window.requestAnimationFrame(loop)\n  },\n  deactivated () {\n    window.cancelAnimationFrame(this.rAFID);\n    console.log('cancel animation frame')\n  }\n}\n</script>\n\n<style scoped>\n.full{\n  width: 100%;\n  height: 100%;\n}\n</style>\n"},{"path":"@/webgl/sample.vue","src":"<template>\n  <div class=\"full\">\n\n    <Renderer\n      ref=\"renderer\"\n      :size=\"size\"\n      @renderer=\"(v) => { renderer = v }\"\n    >\n    </Renderer>\n\n    <PerspectiveCamera\n      :fov=\"75\"\n      :aspect=\"size.aspect\"\n      :near=\"1\"\n      :far=\"1000\"\n      :position=\"{ x: 0, y: 0, z: 10 }\"\n      @camera=\"(v) => { camera = v; }\"\n    />\n\n    <Scene @scene=\"(v) => { scene = v }\">\n      <Object3D pz=\"10\">\n        <PointLight />\n      </Object3D>\n      \n      <Object3D pz=\"0\">\n        <Points>\n          <SphereBufferGeometry />\n          <ShaderMaterial :vs=\"simpleVS\" :fs=\"simpleFS\" :uniforms=\"animatable\" />\n        </Points>\n      </Object3D>\n      \n    </Scene>\n\n  </div>\n</template>\n\n<script>\nimport Bundle from '@/webgl/Bundle.js';\nimport simpleVS from '@/shader/Simple/vs.vert'\nimport simpleFS from '@/shader/Simple/fs.frag'\n\nexport default {\n  components: {\n    ...Bundle\n  },\n  computed: {\n  },\n  methods: {\n    renderWebGL () {\n      this.animatable.time.value = window.performance.now() * 0.001;\n      \n      if (this.scene && this.camera && this.renderer) {\n        this.renderer.render(this.scene, this.camera)\n      }\n    }\n  },\n  data () {\n    return {\n      animatable: {\n        time: { value: 0 }\n      },\n      simpleVS,\n      simpleFS,\n      size: {\n        width: window.innerWidth,\n        height: window.innerHeight,\n        aspect: window.innerWidth / window.innerHeight\n      },\n      renderer: false,\n      scene: false,\n      camera: false\n    }\n  },\n  created () {\n    \n  },\n  mounted () {\n    var self = this\n    function loop () {\n      self.rAFID = window.requestAnimationFrame(loop)\n      self.renderWebGL()\n    }\n    self.rAFID = window.requestAnimationFrame(loop)\n  }\n}\n</script>\n\n<style scoped>\n.full{\n  width: 100%;\n  height: 100%;\n}\n</style>\n"},{"path":"@/webgl/Bundle.js","src":"import Renderer from '@/webgl/System/Renderer.vue';\nimport Scene from '@/webgl/System/Scene.vue';\nimport PerspectiveCamera from '@/webgl/System/PerspectiveCamera.vue';\nimport Raycaster from '@/webgl/System/Raycaster.vue';\n\nimport MeshPhongMaterial from '@/webgl/Material/MeshPhongMaterial.vue';\nimport ShaderMaterial from '@/webgl/Material/ShaderMaterial.vue';\n\nimport Object3D from '@/webgl/Element/Object3D.vue';\nimport Mesh from '@/webgl/Element/Mesh.vue';\nimport Points from '@/webgl/Element/Points.vue';\nimport PointLight from '@/webgl/Element/PointLight.vue';\n\nimport SphereBufferGeometry from '@/webgl/Geo/SphereBufferGeometry.vue';\n\n\nexport default {\n  //materials\n  MeshPhongMaterial,\n  ShaderMaterial,\n  \n  //system\n  Renderer,\n  Scene,\n  PerspectiveCamera,\n  Raycaster,\n  \n  //Elemnts\n  PointLight,\n  Points,\n  Object3D,\n  Mesh,\n  \n  //Geo\n  SphereBufferGeometry\n}\n"},{"path":"@/webgl/System/Renderer.vue","src":"<template>\n  <div class=\"full pos-rel\">\n    <div class=\"full layer\" ref=\"mounter\"></div>\n    <div class=\"full layer\" ref=\"toucher\"><slot></slot></div>\n  </div>\n</template>\n\n<script>\nvar THREE = window.THREE\n\nexport default {\n  data () {\n    return {\n      // THREE,\n      renderer: false\n    }\n  },\n  props: {\n    size: { default () { return { width: 500, height: 500 } } },\n    alpha: { default: true },\n    antialias: { default: true }\n  },\n  mounted () {\n    this.renderer = new THREE.WebGLRenderer({\n      alpha: this.alpha,\n      antialias: this.antialias\n    })\n    this.resize()\n    this.renderer.domElement.style.marginBottom = '-6px'\n    this.$refs.mounter.appendChild(this.renderer.domElement)\n    \n    this.$emit('toucher', this.$refs['toucher'])\n    this.$emit('renderer', this.renderer)\n  },\n  beforeDestroy () {\n    this.$refs.mounter.removeChild(this.renderer.domElement)\n  },\n  watch: {\n    size () {\n      this.resize()\n    }\n  },\n  methods: {\n    resize () {\n      let ratio = window.devicePixelRatio || 1\n      this.renderer.setPixelRatio(ratio)\n      this.renderer.setSize(this.size.width, this.size.height)\n    }\n  }\n}\n</script>\n\n<style scoped>\n.full{\n  width: 100%;\n  height: 100%;\n}\n.pos-rel{\n  position: relative;\n}\n.layer{\n  position: absolute;\n  top: 0px;\n  left: 0px;\n}\n</style>\n"},{"path":"@/webgl/System/Scene.vue","src":"<template>\n  <div ref=\"mounter\" class=\"mounter\"><slot></slot></div>\n</template>\n\n<script>\nvar THREE = window.THREE\nexport default {\n  data () {\n    return {\n      scene: false\n    }\n  },\n  props: {\n    size: { default () { return { width: 500, height: 500 } } },\n    alpha: { default: true },\n    antialias: { default: true }\n  },\n  created () {\n    this.scene = new THREE.Scene()\n    this.$on('add', (v) => {\n      this.scene.add(v)\n    })\n    this.$on('remove', (v) => {\n      this.scene.remove(v)\n    })\n  },\n  mounted () {\n    this.$emit('scene', this.scene)\n  }\n}\n</script>\n\n<style scoped>\n.mounter {\n  display: none;\n}\n</style>\n"},{"path":"@/webgl/System/PerspectiveCamera.vue","src":"<script>\nvar THREE = window.THREE;\nexport default {\n  abstract: true,\n  render () {\n    return null\n  },\n  props: ['fov', 'aspect', 'near', 'far', 'position'],\n  data () {\n    return {\n      camera: null\n    }\n  },\n  created () {\n    this.camera = new THREE.PerspectiveCamera(this.fov, this.aspect, this.near, this.far)\n\n    if (this.position) {\n      this.camera.position.x = this.position.x\n      this.camera.position.y = this.position.y\n      this.camera.position.z = this.position.z\n    }\n    this.$emit('camera', this.camera)\n  },\n  watch: {\n    position () {\n      if (this.position) {\n        this.camera.position.x = this.position.x\n        this.camera.position.y = this.position.y\n        this.camera.position.z = this.position.z\n      }\n    },\n    aspect () {\n      if (this.camera) {\n        this.camera.aspect = this.aspect\n        this.camera.updateProjectionMatrix()\n      }\n    }\n  }\n}\n</script>\n\n<style scoped>\n.perspective-camera{\n  display: none;\n}\n</style>\n"},{"path":"@/webgl/System/Raycaster.vue","src":"<template>\n<div></div>\n</template>\n\n<script>\n\nexport default {\n  data () {\n    return {\n      rAFID: 0,\n      mouse: null,\n      raycast () {},\n      clean () {},\n      intersects: []\n    }\n  },\n  props: {\n    scene: {},\n    camera: {},\n    toucher: {}\n  },\n  created () {\n  },\n  activated () {\n    var raycaster = new THREE.Raycaster();\n    this.mouse = new THREE.Vector2();\n    \n    this.toucher.addEventListener('mousemove', this.handleMV, false);\n    this.toucher.addEventListener('click', this.handleClick, false);\n    this.clean = () => {\n      this.toucher.removeEventListener('click', this.handleClick, false);\n      this.toucher.removeEventListener('mousemove', this.handleMV);\n    }\n    \n    var raycast = () => {\n      var mouse = this.mouse;\n      var scene = this.scene;\n      var camera = this.camera;\n      \n      var restore = [];\n      this.scene.traverse((ele) => {\n        if (ele.$skipRayCast) {\n          restore.push({\n            parent: ele.parent,\n            ele: ele\n          })\n          ele.parent.remove(ele);\n        }\n      })\n      \n      \n    \t// update the picking ray with the camera and mouse position\n    \traycaster.setFromCamera( mouse, camera );\n    \t// calculate objects intersecting the picking ray\n    \tvar intersects = raycaster.intersectObjects( scene.children, true );\n    \t\n    \trestore.forEach((item) => {\n        item.parent.add(item.ele);\n      })\n    \t\n    \treturn intersects\n  \t};\n    this.raycast = raycast; \n    \n    var rAF = () => {\n      this.rAFID = window.requestAnimationFrame(rAF);\n      // this.raycast();\n    }\n    this.rAFID = window.requestAnimationFrame(rAF);\n  },\n  deactivated () {\n    window.cancelAnimationFrame(this.rAFID);\n    this.clean();\n  },\n  methods: {\n    handleClick (event) {\n      this.$emit('click', {\n        event,\n        intersects: this.raycast()\n      })\n    },\n    handleMV (event) {\n      this.mouse.x = (event.clientX / window.innerWidth) * 2 - 1;\n\t    this.mouse.y = - (event.clientY / window.innerHeight) * 2 + 1;\n    }\n    \n  }\n}\n</script>\n\n<style>\n\n</style>\n"},{"path":"@/webgl/Material/MeshPhongMaterial.vue","src":"<template>\n<div class=\"mesh-phong-material\"></div>\n</template>\n\n<script>\nvar THREE = window.THREE;\n\nexport default {\n  props: {\n    color: {\n      default () {\n        return Math.random() * 0xffffff\n      }\n    }\n  },\n  data () {\n    return {\n      material: false\n    }\n  },\n  created () {\n    this.material = new THREE.MeshPhongMaterial({\n      color: new THREE.Color(this.color),\n      specular: new THREE.Color(0x111111),\n      shininess: 50\n    })\n    this.$parent.$emit('material', this.material)\n  }\n}\n</script>\n\n<style>\n\n</style>\n"},{"path":"@/webgl/Material/ShaderMaterial.vue","src":"<template>\n<div class=\"mesh-basic-material\"></div>\n</template>\n\n<script>\nvar THREE = window.THREE;\n\nexport default {\n  data () {\n    return {\n      material: false\n    }\n  },\n  props: {\n    vs: {\n      default:\n`void main ( void ) {\n  vec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\n  vec4 outputPos = projectionMatrix * mvPosition;\n  gl_Position = outputPos;\n}`\n    },\n    fs: {\n      default:\n`void main () {\n  gl_FragColor = vec4(vec3(0.5), 1.0);\n}`\n    },\n    uniforms: {\n      default () {\n        return {}\n      }\n    }\n  },\n  watch: {\n    vs () { this.initShader() },\n    fs () { this.initShader() },\n    uniforms () { this.initShader() }\n  },\n  mounted () {\n    this.initShader()\n  },\n  methods: {\n    initShader () {\n      try {\n        this.material = new THREE.ShaderMaterial({\n          uniforms: {\n            ...this.uniforms// ,\n            // ...THREE.UniformsUtils.merge([\n            //   THREE.UniformsLib.common,\n            //   THREE.UniformsLib.aomap,\n            //   THREE.UniformsLib.lightmap,\n            //   THREE.UniformsLib.emissivemap,\n            //   THREE.UniformsLib.bumpmap,\n            //   THREE.UniformsLib.normalmap,\n            //   THREE.UniformsLib.displacementmap,\n            //   THREE.UniformsLib.fog,\n            //   THREE.UniformsLib.lights,\n            //   THREE.UniformsLib.shadowmap,\n            //   {\n            //     flipEnvMap: {\n            //       value: 1\n            //     },\n            //     emissive: {\n            //       value: new THREE.Color(0x000000)\n            //     },\n            //     specular: {\n            //       value: new THREE.Color(0x111111)\n            //     },\n            //     shininess: {\n            //       value: 30\n            //     },\n            //     envMap: {\n            //       // value: cubeCamera.renderTarget\n            //     }\n            //   }\n            // ])\n          },\n          vertexShader: this.vs || this.$options.props.vs.default,\n          fragmentShader: this.fs || this.$options.props.fs.default\n        })\n        this.$parent.$emit('material', this.material)\n      } catch (e) {\n        console.log(e)\n      }\n    }\n  }\n}\n</script>\n\n<style>\n\n</style>\n"},{"path":"@/webgl/Element/PointLight.vue","src":"<template>\n  <div class=\"light-point\"></div>\n</template>\n\n<script>\nvar THREE = window.THREE;\n\nexport default {\n  props: {\n    color: {\n      default () {\n        return 0xffffff\n      }\n    }\n  },\n  data () {\n    return {\n      light: false\n    }\n  },\n  mounted () {\n    this.light = new THREE.PointLight({ color: new THREE.Color(this.color) })\n    this.$emit('element', this.light)\n    this.$parent.$emit('add', this.light)\n  },\n  beforeDestroy () {\n    this.$parent.$emit('remove', this.light)\n  }\n}\n</script>\n\n<style>\n\n</style>\n"},{"path":"@/webgl/Element/Object3D.vue","src":"<template>\n<div class=\"object-3d\"><slot></slot></div>\n</template>\n\n<script>\nvar THREE = window.THREE;\nexport default {\n  data () {\n    return {\n      object3d: false\n    }\n  },\n  props: {\n    visible: { default: true },\n    px: { default: 0 },\n    py: { default: 0 },\n    pz: { default: 0 },\n\n    sx: { default: 1 },\n    sy: { default: 1 },\n    sz: { default: 1 },\n\n    rx: { default: 0 },\n    ry: { default: 0 },\n    rz: { default: 0 }\n  },\n  watch: {\n    visible () { this.object3d.setVisible(this.visible) },\n    px () { this.updatePosition('x', this.px) },\n    py () { this.updatePosition('y', this.py) },\n    pz () { this.updatePosition('z', this.pz) },\n\n    sx () { this.updateScale('x', this.sx) },\n    sy () { this.updateScale('y', this.sy) },\n    sz () { this.updateScale('z', this.sz) },\n\n    rx () { this.updateRotation('x', this.rx) },\n    ry () { this.updateRotation('y', this.ry) },\n    rz () { this.updateRotation('z', this.rz) }\n  },\n  created () {\n    this.object3d = new THREE.Object3D()\n    this.$emit('element', this.object3d)\n    this.object3d.visible = true\n    this.updatePosition()\n    this.updateScale()\n    this.updateRotation()\n    this.$on('add', (v) => {\n      this.object3d.add(v)\n    })\n    this.$on('remove', (v) => {\n      this.object3d.remove(v)\n    })\n  },\n  mounted () {\n    this.$parent.$emit('add', this.object3d)\n  },\n  beforeDestroy () {\n    this.$parent.$emit('remove', this.object3d)\n  },\n  methods: {\n    updatePosition (key, val) {\n      if (key) {\n        this.object3d.position[key] = val\n      } else {\n        this.object3d.position.set(this.px, this.py, this.pz)\n      }\n    },\n    updateScale (key, val) {\n      if (key) {\n        this.object3d.scale[key] = val\n      } else {\n        this.object3d.scale.set(this.sx, this.sy, this.sz)\n      }\n    },\n    updateRotation (key, val) {\n      if (key) {\n        this.object3d.rotation[key] = val\n      } else {\n        this.object3d.rotation.set(this.rx, this.ry, this.rz)\n      }\n    }\n  }\n}\n</script>\n\n<style>\n\n</style>\n"},{"path":"@/webgl/Element/Points.vue","src":"<template>\n  <div class=\"points\">\n    <slot>\n    </slot>\n  </div>\n</template>\n\n<script>\nimport THREE from '@/three.js'\n\nexport default {\n  props: {\n    position: {}\n  },\n  data () {\n    return {\n      element: false,\n      points: false,\n      material: false,\n      geometry: false\n    }\n  },\n  created () {\n    this.element = this.points = new THREE.Points()\n    this.$parent.$emit('add', this.points)\n    this.$emit('element', this.points)\n    this.$on('material', (v) => {\n      this.material = v\n      this.tryUpdateMaterial()\n    })\n    this.$on('geometry', (v) => {\n      this.geometry = v\n      this.tryUpdateGeometry()\n    })\n  },\n  beforeDestroy () {\n    this.uninstall()\n  },\n  methods: {\n    tryUpdateGeometry (v) {\n      if (this.points) {\n        this.points.geometry = this.geometry\n      }\n    },\n    tryUpdateMaterial (v) {\n      if (this.points) {\n        this.points.material = this.material\n      }\n    },\n    uninstall () {\n      this.$parent.$emit('remove', this.points)\n    }\n  }\n}\n</script>\n\n<style>\n\n</style>\n"},{"path":"@/webgl/Element/Mesh.vue","src":"<template>\n  <div class=\"mesh\">\n    <slot>\n    </slot>\n  </div>\n</template>\n\n<script>\nvar THREE = window.THREE;\nexport default {\n  props: {\n  },\n  data () {\n    return {\n      element: false,\n      mesh: false,\n      material: false,\n      geometry: false\n    }\n  },\n  created () {\n    this.element = this.mesh = new THREE.Mesh()\n    this.$parent.$emit('add', this.mesh)\n    this.$emit('element', this.mesh)\n\n    this.$on('material', (v) => {\n      this.material = v\n      this.tryUpdateMaterial()\n    })\n    this.$on('geometry', (v) => {\n      this.geometry = v\n      this.tryUpdateGeometry()\n    })\n  },\n  beforeDestroy () {\n    this.uninstall()\n  },\n  methods: {\n    tryUpdateGeometry (v) {\n      if (this.mesh) {\n        this.mesh.geometry = this.geometry\n      }\n    },\n    tryUpdateMaterial (v) {\n      if (this.mesh) {\n        this.mesh.material = this.material\n      }\n    },\n    uninstall () {\n      this.$parent.$emit('remove', this.mesh)\n    }\n  }\n}\n</script>\n\n<style>\n\n</style>\n"},{"path":"@/webgl/Geo/SphereBufferGeometry.vue","src":"<template>\n  <div class=\"geo-sphere\"></div>\n</template>\n\n<script>\nvar THREE = window.THREE\nexport default {\n  data () {\n    return {\n      geometry: false\n    }\n  },\n  mounted () {\n    let geometry = new THREE.SphereBufferGeometry(2, 256, 256)\n    this.$parent.$emit('geometry', geometry)\n  }\n}\n</script>\n\n<style>\n\n</style>\n"},{"path":"@/shader/Simple/vs.vert","src":"varying vec3 vPos;\nuniform float time;\n\nvoid main (void) {\n  vPos = position;\n  vPos.x = vPos.x + sin(vPos.x + time);\n  vPos.y = vPos.y + cos(vPos.y + time);\n  vPos.z = vPos.z + tan(vPos.z + time);\n  \n  vec4 mvPosition = modelViewMatrix * vec4(position, 1.0);\n  vec4 outputPos = projectionMatrix * mvPosition;\n  gl_Position = outputPos;\n  gl_PointSize = 1.0;\n}"},{"path":"@/shader/Simple/fs.frag","src":"varying vec3 vPos;\n\nvoid main () {\n  gl_FragColor = vec4(vec3(vPos), 1.0);\n}"},{"path":"@/shader/Fling/vs.vert","src":"varying vec3 vPos;\nuniform float time;\n\nvoid main (void) {\n  vPos = position;\n  vPos.x = vPos.x + sin(vPos.x + time);\n  vPos.y = vPos.y + cos(vPos.y + time);\n  vPos.z = vPos.z + tan(vPos.z + time);\n  \n  vec4 mvPosition = modelViewMatrix * vec4(vPos, 1.0);\n  vec4 outputPos = projectionMatrix * mvPosition;\n  gl_Position = outputPos;\n}"},{"path":"@/three.js","src":"var THREE = window.THREE\nexport default THREE\n"}],"date":"Fri Feb 16 2018 05:59:49 GMT+0800 (HKT)"},{"currentFilePath":"@/shader/Simple/vs.vert","openedFiles":[{"path":"@/shader/Simple/vs.vert"},{"path":"@/webgl/pages/Happy.vue"},{"path":"@/webgl/pages/Home.vue"},{"path":"@/webgl/layout/Player.vue"},{"path":"@/index.html"}],"files":[{"path":"@/index.html","src":"<!DOCTYPE html>\n<html>\n  <head>\n    <meta charset=\"UTF-8\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge,chrome=1\">\n    <meta name=\"viewport\" content=\"width=device-width,initial-scale=1\">\n\n    <title>WebGL</title>\n\n    <meta name=\"author\" content=\"loklok\">\n    <meta name=\"description\" content=\"WebGL Art\">\n    <meta name=\"keywords\" content=\"WebGL, Art\">\n\n    <style type=\"text/css\">\n    </style>\n\n  </head>\n  <body>\n    <div id=\"app-attach-point\"></div>\n    \n    <script required src=\"https://cdnjs.cloudflare.com/ajax/libs/vue/2.5.2/vue.min.js\"></script>\n    <script required src=\"https://cdnjs.cloudflare.com/ajax/libs/vue-router/3.0.1/vue-router.min.js\"></script>\n    <script required src=\"https://cdnjs.cloudflare.com/ajax/libs/tween.js/16.3.5/Tween.min.js\"></script>\n    <script required src=\"https://cdnjs.cloudflare.com/ajax/libs/three.js/88/three.min.js\" integrity=\"sha256-6fhm481uY9c152qGWIVgE7KbzaCj5WjCi3BGIpZef2E=\" crossorigin=\"anonymous\"></script>\n    <script required src=\"https://threejs.org/examples/js/GPUComputationRenderer.js\"></script>\n  </body>\n</html>\n"},{"path":"@/style.css","src":"html, body {\n  width: 100%;\n  height: 100%;\n  margin: 0px;\n  padding: 0px;\n}\nhtml, body, #app {\n  box-sizing: border-box;\n  width: 100%;\n  height: 100%;\n  overflow: hidden;\n}\n.full{\n  width: 100%;\n  height: 100%;\n}"},{"path":"@/main.js","src":"import '@/style.css'\nimport App from '@/app.vue'\nimport router from '@/router.js'\n\nvar oldDOM = document.querySelector('#app-attach-point');\nvar newDOM = document.createElement('div');\nnewDOM.id = '#app-attach-point';\ndocument.body.appendChild(newDOM);\nvar target = oldDOM || newDOM;\n\nvar app = new Vue({\n  router,\n  el: target,\n  components: {\n    App\n  },\n  template: '<div id=\"app\"><App /></div>'\n})\n\nwindow.addEventListener('message', (evt) => {\n  var { type, data } = evt.data;\n  window.dispatchEvent(new CustomEvent(type, { detail: data }))\n}, false);\n\nwindow.addEventListener('slider', ({ detail }) => {\n  console.log(detail);\n  (window.opener || window.top).dispatchEvent(new CustomEvent('loklok', { detail: { rand: Math.random() } }))\n});\n\nexport default app;\n"},{"path":"@/router.js","src":"import Player from '@/webgl/layout/Player.vue'\nimport Home from '@/webgl/pages/Home.vue'\nimport Happy from '@/webgl/pages/Happy.vue'\n\nconst router = new VueRouter({\n  mode: 'hash',\n  routes: [\n    {\n      path: '/',\n      component: Player,\n      children: [\n        {\n          path: '',\n          component: Home\n        },\n        {\n          path: 'happy',\n          component: Happy\n        }\n      ]\n    }\n  ]\n})\n\nexport default router\n"},{"path":"@/app.vue","src":"<template>\n  <div>\n    <router-view></router-view>\n  </div>\n</template>\n\n<script>\nimport THREE from '@/three.js'\n\nexport default {\n  data () {\n    return {\n      \n    }\n  },\n  created () {\n    \n  },\n  beforeDestroy () {\n    \n  },\n  methods: {\n    \n  }\n}\n</script>\n\n<style>\n\n</style>\n"},{"path":"@/webgl/layout/Player.vue","src":"<template>\n  <div class=\"full\" ref=\"full\">\n\n    <Renderer\n      :alpha=\"false\"\n      ref=\"renderer\"\n      :size=\"size\"\n      @renderer=\"(v) => { renderer = v }\"\n      @toucher=\"(v) => { toucher = v }\"\n    >\n    </Renderer>\n    \n    <keep-alive>\n      <component\n        class=\"hidden\"\n        :is=\"'router-view'\"\n        v-if=\"renderer\"\n        :size=\"size\"\n        :toucher=\"toucher\"\n        :renderer=\"renderer\"\n      >\n      </component>\n    </keep-alive>\n\n  </div>\n</template>\n\n<script>\nimport Bundle from '@/webgl/Bundle.js';\n\nexport default {\n  components: {\n    ...Bundle\n  },\n  computed: {\n  },\n  methods: {\n    \n  },\n  data () {\n    return {\n      toucher: false,\n      resizer: () => {},\n      renderer: false,\n      size: {\n        width: 100,\n        height: 100,\n        aspect: 1\n      }\n    }\n  },\n  created () {\n    \n  },\n  mounted () {\n    var resizer = this.resizer = () => {\n      this.$nextTick(() => {\n        var rect = this.$refs.full.getBoundingClientRect()\n        this.size = {\n          width: rect.width,\n          height: rect.height,\n          aspect: rect.width / rect.height\n        }\n      })\n    }\n    window.addEventListener('resize', resizer.bind(this))\n    resizer()\n  }\n}\n</script>\n\n<style scoped>\n.hidden{\n  display: none;\n}\n.full{\n  width: 100%;\n  height: 100%;\n}\n</style>\n"},{"path":"@/webgl/pages/Home.vue","src":"<template>\n  <div class=\"\">\n    <PerspectiveCamera\n      :fov=\"75\"\n      :aspect=\"size.aspect\"\n      :near=\"1\"\n      :far=\"1000\"\n      :position=\"{ x: 0, y: 0, z: 15 }\"\n      @camera=\"(v) => { camera = v; }\"\n    />\n    \n    <Scene @scene=\"(v) => { scene = v; }\">\n      <Object3D pz=\"10\">\n        <PointLight />\n      </Object3D>\n      \n      <Object3D pz=\"0\">\n        <Mesh>\n          <SphereBufferGeometry />\n          <ShaderMaterial :vs=\"simpleVS\" :fs=\"simpleFS\" :uniforms=\"animatable\" />\n        </Mesh>\n      </Object3D>\n    </Scene>\n    \n    <Raycaster v-if=\"camera && toucher && scene\" :scene=\"scene\" :toucher=\"toucher\" :camera=\"camera\" @found=\"(v) => { found = v; }\" @click=\"onClick\">\n    </Raycaster>\n    \n  </div>\n</template>\n\n<script>\nimport Bundle from '@/webgl/Bundle.js';\n\nimport simpleVS from '@/shader/Simple/vs.vert'\nimport simpleFS from '@/shader/Simple/fs.frag'\n\nexport default {\n  name: 'Home',\n  props: {\n    toucher: {},\n    size: {},\n    renderer: {},\n    doc: {}\n  },\n  components: {\n    ...Bundle\n  },\n  computed: {\n  },\n  data () {\n    return {\n      cam: {\n        pos: { x: 3, y: 5, z: 10 }\n      },\n      ready: false,\n      cubeCamera: false,\n      visible: true,\n      resizer: () => {},\n      scene: false,\n      camera: false,\n      \n      found: [],\n      \n      animatable: {\n        time: { value: 0 }\n      },\n      simpleVS,\n      simpleFS\n      \n    }\n  },\n  methods: {\n    onClick ({ event, intersects }) {\n      this.$router.push({\n        path: '/happy'\n      })\n      this.$forceUpdate()\n      console.log('Click to happy');\n    },\n    setup () {\n      this.scene.background = new THREE.Color(0xffffff);\n    },\n    renderWebGL () {\n      TWEEN.update()\n      \n      this.animatable.time.value += 0.01;\n      \n      if (this.scene && this.camera && this.renderer) {\n        this.renderer.render(this.scene, this.camera)\n      }\n    }\n  },\n  watch: {\n    camera () {\n      if (this.camera && this.renderer) {\n        this.ready = true\n      }\n    },\n    renderer () {\n      if (this.camera && this.renderer) {\n        this.ready = true\n      }\n    },\n    ready () {\n      if (this.ready) {\n        this.setup()\n      }\n    }\n  },\n  created () {\n    \n  },\n  activated () {\n    var self = this\n    function loop (rAFT) {\n      self.rAFID = window.requestAnimationFrame(loop)\n      self.renderWebGL(rAFT)\n    }\n    self.rAFID = window.requestAnimationFrame(loop)\n  },\n  deactivated () {\n    window.cancelAnimationFrame(this.rAFID)\n  }\n}\n</script>\n\n<style scoped>\n.full{\n  width: 100%;\n  height: 100%;\n}\n</style>\n"},{"path":"@/webgl/pages/Happy.vue","src":"<template>\n  <div class=\"\">\n\n    <PerspectiveCamera\n      :fov=\"75\"\n      :aspect=\"size.aspect\"\n      :near=\"1\"\n      :far=\"1000\"\n      :position=\"{ x: 0, y: 0, z: 15 }\"\n      @camera=\"(v) => { camera = v; }\"\n    />\n    \n    <Scene @scene=\"(v) => { scene = v }\">\n      <Object3D pz=\"10\">\n        <PointLight />\n      </Object3D>\n      \n      <Object3D pz=\"0\">\n        <Points @element=\"(v) => { v.$skipRayCast = true }\">\n          <SphereBufferGeometry />\n          <ShaderMaterial :vs=\"simpleVS2\" :fs=\"simpleFS\" :uniforms=\"animatable\" />\n        </Points>\n      </Object3D>\n      \n      <Object3D pz=\"1\">\n        <Mesh>\n          <SphereBufferGeometry />\n          <ShaderMaterial :vs=\"simpleVS\" :fs=\"simpleFS\" :uniforms=\"animatable\" />\n        </Mesh>\n      </Object3D>\n    </Scene>\n    \n    <Raycaster v-if=\"renderer && camera && toucher && scene\" :scene=\"scene\" :toucher=\"toucher\" :camera=\"camera\" @found=\"(v) => { found = v; }\" @click=\"onClick\">\n    </Raycaster>\n\n  </div>\n</template>\n\n<script>\nimport Bundle from '@/webgl/Bundle.js';\n\nimport simpleVS2 from '@/shader/Fling/vs.vert'\nimport simpleVS from '@/shader/Simple/vs.vert'\nimport simpleFS from '@/shader/Simple/fs.frag'\n\nexport default {\n  name: 'Happy',\n  props: {\n    toucher: {},\n    size: {},\n    renderer: {},\n    doc: {}\n  },\n  components: {\n    ...Bundle\n  },\n  computed: {\n  },\n  data () {\n    return {\n      cam: {\n        pos: { x: 3, y: 5, z: 10 }\n      },\n      ready: false,\n      cubeCamera: false,\n      visible: true,\n      resizer: () => {},\n      scene: false,\n      camera: false,\n      \n      found: [],\n      \n      animatable: {\n        time: { value: 0 }\n      },\n      simpleVS,\n      simpleFS,\n      simpleVS2\n      \n    }\n  },\n  methods: {\n    onClick ({ event, intersects }) {\n      console.log(event, intersects)\n      this.$router.push('/')\n    },\n    setup () {\n      this.scene.background = new THREE.Color(0xffffff);\n    },\n    renderWebGL () {\n      TWEEN.update()\n      \n      this.animatable.time.value += 0.01;\n      \n      if (this.scene && this.camera && this.renderer) {\n        this.renderer.render(this.scene, this.camera)\n      }\n    }\n  },\n  watch: {\n    camera () {\n      if (this.camera && this.renderer) {\n        this.ready = true\n      }\n    },\n    renderer () {\n      if (this.camera && this.renderer) {\n        this.ready = true\n      }\n    },\n    ready () {\n      if (this.ready) {\n        this.setup()\n      }\n    }\n  },\n  created () {\n    \n  },\n  activated () {\n    var self = this\n    function loop (rAFT) {\n      self.rAFID = window.requestAnimationFrame(loop)\n      self.renderWebGL(rAFT)\n    }\n    self.rAFID = window.requestAnimationFrame(loop)\n  },\n  deactivated () {\n    window.cancelAnimationFrame(this.rAFID);\n    console.log('cancel animation frame')\n  }\n}\n</script>\n\n<style scoped>\n.full{\n  width: 100%;\n  height: 100%;\n}\n</style>\n"},{"path":"@/webgl/sample.vue","src":"<template>\n  <div class=\"full\">\n\n    <Renderer\n      ref=\"renderer\"\n      :size=\"size\"\n      @renderer=\"(v) => { renderer = v }\"\n    >\n    </Renderer>\n\n    <PerspectiveCamera\n      :fov=\"75\"\n      :aspect=\"size.aspect\"\n      :near=\"1\"\n      :far=\"1000\"\n      :position=\"{ x: 0, y: 0, z: 10 }\"\n      @camera=\"(v) => { camera = v; }\"\n    />\n\n    <Scene @scene=\"(v) => { scene = v }\">\n      <Object3D pz=\"10\">\n        <PointLight />\n      </Object3D>\n      \n      <Object3D pz=\"0\">\n        <Points>\n          <SphereBufferGeometry />\n          <ShaderMaterial :vs=\"simpleVS\" :fs=\"simpleFS\" :uniforms=\"animatable\" />\n        </Points>\n      </Object3D>\n      \n    </Scene>\n\n  </div>\n</template>\n\n<script>\nimport Bundle from '@/webgl/Bundle.js';\nimport simpleVS from '@/shader/Simple/vs.vert'\nimport simpleFS from '@/shader/Simple/fs.frag'\n\nexport default {\n  components: {\n    ...Bundle\n  },\n  computed: {\n  },\n  methods: {\n    renderWebGL () {\n      this.animatable.time.value = window.performance.now() * 0.001;\n      \n      if (this.scene && this.camera && this.renderer) {\n        this.renderer.render(this.scene, this.camera)\n      }\n    }\n  },\n  data () {\n    return {\n      animatable: {\n        time: { value: 0 }\n      },\n      simpleVS,\n      simpleFS,\n      size: {\n        width: window.innerWidth,\n        height: window.innerHeight,\n        aspect: window.innerWidth / window.innerHeight\n      },\n      renderer: false,\n      scene: false,\n      camera: false\n    }\n  },\n  created () {\n    \n  },\n  mounted () {\n    var self = this\n    function loop () {\n      self.rAFID = window.requestAnimationFrame(loop)\n      self.renderWebGL()\n    }\n    self.rAFID = window.requestAnimationFrame(loop)\n  }\n}\n</script>\n\n<style scoped>\n.full{\n  width: 100%;\n  height: 100%;\n}\n</style>\n"},{"path":"@/webgl/Bundle.js","src":"import Renderer from '@/webgl/System/Renderer.vue';\nimport Scene from '@/webgl/System/Scene.vue';\nimport PerspectiveCamera from '@/webgl/System/PerspectiveCamera.vue';\nimport Raycaster from '@/webgl/System/Raycaster.vue';\n\nimport MeshPhongMaterial from '@/webgl/Material/MeshPhongMaterial.vue';\nimport ShaderMaterial from '@/webgl/Material/ShaderMaterial.vue';\n\nimport Object3D from '@/webgl/Element/Object3D.vue';\nimport Mesh from '@/webgl/Element/Mesh.vue';\nimport Points from '@/webgl/Element/Points.vue';\nimport PointLight from '@/webgl/Element/PointLight.vue';\n\nimport SphereBufferGeometry from '@/webgl/Geo/SphereBufferGeometry.vue';\n\n\nexport default {\n  //materials\n  MeshPhongMaterial,\n  ShaderMaterial,\n  \n  //system\n  Renderer,\n  Scene,\n  PerspectiveCamera,\n  Raycaster,\n  \n  //Elemnts\n  PointLight,\n  Points,\n  Object3D,\n  Mesh,\n  \n  //Geo\n  SphereBufferGeometry\n}\n"},{"path":"@/webgl/System/Renderer.vue","src":"<template>\n  <div class=\"full pos-rel\">\n    <div class=\"full layer\" ref=\"mounter\"></div>\n    <div class=\"full layer\" ref=\"toucher\"><slot></slot></div>\n  </div>\n</template>\n\n<script>\nvar THREE = window.THREE\n\nexport default {\n  data () {\n    return {\n      // THREE,\n      renderer: false\n    }\n  },\n  props: {\n    size: { default () { return { width: 500, height: 500 } } },\n    alpha: { default: true },\n    antialias: { default: true }\n  },\n  mounted () {\n    this.renderer = new THREE.WebGLRenderer({\n      alpha: this.alpha,\n      antialias: this.antialias\n    })\n    this.resize()\n    this.renderer.domElement.style.marginBottom = '-6px'\n    this.$refs.mounter.appendChild(this.renderer.domElement)\n    \n    this.$emit('toucher', this.$refs['toucher'])\n    this.$emit('renderer', this.renderer)\n  },\n  beforeDestroy () {\n    this.$refs.mounter.removeChild(this.renderer.domElement)\n  },\n  watch: {\n    size () {\n      this.resize()\n    }\n  },\n  methods: {\n    resize () {\n      let ratio = window.devicePixelRatio || 1\n      this.renderer.setPixelRatio(ratio)\n      this.renderer.setSize(this.size.width, this.size.height)\n    }\n  }\n}\n</script>\n\n<style scoped>\n.full{\n  width: 100%;\n  height: 100%;\n}\n.pos-rel{\n  position: relative;\n}\n.layer{\n  position: absolute;\n  top: 0px;\n  left: 0px;\n}\n</style>\n"},{"path":"@/webgl/System/Scene.vue","src":"<template>\n  <div ref=\"mounter\" class=\"mounter\"><slot></slot></div>\n</template>\n\n<script>\nvar THREE = window.THREE\nexport default {\n  data () {\n    return {\n      scene: false\n    }\n  },\n  props: {\n    size: { default () { return { width: 500, height: 500 } } },\n    alpha: { default: true },\n    antialias: { default: true }\n  },\n  created () {\n    this.scene = new THREE.Scene()\n    this.$on('add', (v) => {\n      this.scene.add(v)\n    })\n    this.$on('remove', (v) => {\n      this.scene.remove(v)\n    })\n  },\n  mounted () {\n    this.$emit('scene', this.scene)\n  }\n}\n</script>\n\n<style scoped>\n.mounter {\n  display: none;\n}\n</style>\n"},{"path":"@/webgl/System/PerspectiveCamera.vue","src":"<script>\nvar THREE = window.THREE;\nexport default {\n  abstract: true,\n  render () {\n    return null\n  },\n  props: ['fov', 'aspect', 'near', 'far', 'position'],\n  data () {\n    return {\n      camera: null\n    }\n  },\n  created () {\n    this.camera = new THREE.PerspectiveCamera(this.fov, this.aspect, this.near, this.far)\n\n    if (this.position) {\n      this.camera.position.x = this.position.x\n      this.camera.position.y = this.position.y\n      this.camera.position.z = this.position.z\n    }\n    this.$emit('camera', this.camera)\n  },\n  watch: {\n    position () {\n      if (this.position) {\n        this.camera.position.x = this.position.x\n        this.camera.position.y = this.position.y\n        this.camera.position.z = this.position.z\n      }\n    },\n    aspect () {\n      if (this.camera) {\n        this.camera.aspect = this.aspect\n        this.camera.updateProjectionMatrix()\n      }\n    }\n  }\n}\n</script>\n\n<style scoped>\n.perspective-camera{\n  display: none;\n}\n</style>\n"},{"path":"@/webgl/System/Raycaster.vue","src":"<template>\n<div></div>\n</template>\n\n<script>\n\nexport default {\n  data () {\n    return {\n      rAFID: 0,\n      mouse: null,\n      raycast () {},\n      clean () {},\n      intersects: []\n    }\n  },\n  props: {\n    scene: {},\n    camera: {},\n    toucher: {}\n  },\n  created () {\n  },\n  activated () {\n    var raycaster = new THREE.Raycaster();\n    this.mouse = new THREE.Vector2();\n    \n    this.toucher.addEventListener('mousemove', this.handleMV, false);\n    this.toucher.addEventListener('click', this.handleClick, false);\n    this.clean = () => {\n      this.toucher.removeEventListener('click', this.handleClick, false);\n      this.toucher.removeEventListener('mousemove', this.handleMV);\n    }\n    \n    var raycast = () => {\n      var mouse = this.mouse;\n      var scene = this.scene;\n      var camera = this.camera;\n      \n      var restore = [];\n      this.scene.traverse((ele) => {\n        if (ele.$skipRayCast) {\n          restore.push({\n            parent: ele.parent,\n            ele: ele\n          })\n          ele.parent.remove(ele);\n        }\n      })\n      \n      \n    \t// update the picking ray with the camera and mouse position\n    \traycaster.setFromCamera( mouse, camera );\n    \t// calculate objects intersecting the picking ray\n    \tvar intersects = raycaster.intersectObjects( scene.children, true );\n    \t\n    \trestore.forEach((item) => {\n        item.parent.add(item.ele);\n      })\n    \t\n    \treturn intersects\n  \t};\n    this.raycast = raycast; \n    \n    var rAF = () => {\n      this.rAFID = window.requestAnimationFrame(rAF);\n      // this.raycast();\n    }\n    this.rAFID = window.requestAnimationFrame(rAF);\n  },\n  deactivated () {\n    window.cancelAnimationFrame(this.rAFID);\n    this.clean();\n  },\n  methods: {\n    handleClick (event) {\n      this.$emit('click', {\n        event,\n        intersects: this.raycast()\n      })\n    },\n    handleMV (event) {\n      this.mouse.x = (event.clientX / window.innerWidth) * 2 - 1;\n\t    this.mouse.y = - (event.clientY / window.innerHeight) * 2 + 1;\n    }\n    \n  }\n}\n</script>\n\n<style>\n\n</style>\n"},{"path":"@/webgl/Material/MeshPhongMaterial.vue","src":"<template>\n<div class=\"mesh-phong-material\"></div>\n</template>\n\n<script>\nvar THREE = window.THREE;\n\nexport default {\n  props: {\n    color: {\n      default () {\n        return Math.random() * 0xffffff\n      }\n    }\n  },\n  data () {\n    return {\n      material: false\n    }\n  },\n  created () {\n    this.material = new THREE.MeshPhongMaterial({\n      color: new THREE.Color(this.color),\n      specular: new THREE.Color(0x111111),\n      shininess: 50\n    })\n    this.$parent.$emit('material', this.material)\n  }\n}\n</script>\n\n<style>\n\n</style>\n"},{"path":"@/webgl/Material/ShaderMaterial.vue","src":"<template>\n<div class=\"mesh-basic-material\"></div>\n</template>\n\n<script>\nvar THREE = window.THREE;\n\nexport default {\n  data () {\n    return {\n      material: false\n    }\n  },\n  props: {\n    vs: {\n      default:\n`void main ( void ) {\n  vec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\n  vec4 outputPos = projectionMatrix * mvPosition;\n  gl_Position = outputPos;\n}`\n    },\n    fs: {\n      default:\n`void main () {\n  gl_FragColor = vec4(vec3(0.5), 1.0);\n}`\n    },\n    uniforms: {\n      default () {\n        return {}\n      }\n    }\n  },\n  watch: {\n    vs () { this.initShader() },\n    fs () { this.initShader() },\n    uniforms () { this.initShader() }\n  },\n  mounted () {\n    this.initShader()\n  },\n  methods: {\n    initShader () {\n      try {\n        this.material = new THREE.ShaderMaterial({\n          uniforms: {\n            ...this.uniforms// ,\n            // ...THREE.UniformsUtils.merge([\n            //   THREE.UniformsLib.common,\n            //   THREE.UniformsLib.aomap,\n            //   THREE.UniformsLib.lightmap,\n            //   THREE.UniformsLib.emissivemap,\n            //   THREE.UniformsLib.bumpmap,\n            //   THREE.UniformsLib.normalmap,\n            //   THREE.UniformsLib.displacementmap,\n            //   THREE.UniformsLib.fog,\n            //   THREE.UniformsLib.lights,\n            //   THREE.UniformsLib.shadowmap,\n            //   {\n            //     flipEnvMap: {\n            //       value: 1\n            //     },\n            //     emissive: {\n            //       value: new THREE.Color(0x000000)\n            //     },\n            //     specular: {\n            //       value: new THREE.Color(0x111111)\n            //     },\n            //     shininess: {\n            //       value: 30\n            //     },\n            //     envMap: {\n            //       // value: cubeCamera.renderTarget\n            //     }\n            //   }\n            // ])\n          },\n          vertexShader: this.vs || this.$options.props.vs.default,\n          fragmentShader: this.fs || this.$options.props.fs.default\n        })\n        this.$parent.$emit('material', this.material)\n      } catch (e) {\n        console.log(e)\n      }\n    }\n  }\n}\n</script>\n\n<style>\n\n</style>\n"},{"path":"@/webgl/Element/PointLight.vue","src":"<template>\n  <div class=\"light-point\"></div>\n</template>\n\n<script>\nvar THREE = window.THREE;\n\nexport default {\n  props: {\n    color: {\n      default () {\n        return 0xffffff\n      }\n    }\n  },\n  data () {\n    return {\n      light: false\n    }\n  },\n  mounted () {\n    this.light = new THREE.PointLight({ color: new THREE.Color(this.color) })\n    this.$emit('element', this.light)\n    this.$parent.$emit('add', this.light)\n  },\n  beforeDestroy () {\n    this.$parent.$emit('remove', this.light)\n  }\n}\n</script>\n\n<style>\n\n</style>\n"},{"path":"@/webgl/Element/Object3D.vue","src":"<template>\n<div class=\"object-3d\"><slot></slot></div>\n</template>\n\n<script>\nvar THREE = window.THREE;\nexport default {\n  data () {\n    return {\n      object3d: false\n    }\n  },\n  props: {\n    visible: { default: true },\n    px: { default: 0 },\n    py: { default: 0 },\n    pz: { default: 0 },\n\n    sx: { default: 1 },\n    sy: { default: 1 },\n    sz: { default: 1 },\n\n    rx: { default: 0 },\n    ry: { default: 0 },\n    rz: { default: 0 }\n  },\n  watch: {\n    visible () { this.object3d.setVisible(this.visible) },\n    px () { this.updatePosition('x', this.px) },\n    py () { this.updatePosition('y', this.py) },\n    pz () { this.updatePosition('z', this.pz) },\n\n    sx () { this.updateScale('x', this.sx) },\n    sy () { this.updateScale('y', this.sy) },\n    sz () { this.updateScale('z', this.sz) },\n\n    rx () { this.updateRotation('x', this.rx) },\n    ry () { this.updateRotation('y', this.ry) },\n    rz () { this.updateRotation('z', this.rz) }\n  },\n  created () {\n    this.object3d = new THREE.Object3D()\n    this.$emit('element', this.object3d)\n    this.object3d.visible = true\n    this.updatePosition()\n    this.updateScale()\n    this.updateRotation()\n    this.$on('add', (v) => {\n      this.object3d.add(v)\n    })\n    this.$on('remove', (v) => {\n      this.object3d.remove(v)\n    })\n  },\n  mounted () {\n    this.$parent.$emit('add', this.object3d)\n  },\n  beforeDestroy () {\n    this.$parent.$emit('remove', this.object3d)\n  },\n  methods: {\n    updatePosition (key, val) {\n      if (key) {\n        this.object3d.position[key] = val\n      } else {\n        this.object3d.position.set(this.px, this.py, this.pz)\n      }\n    },\n    updateScale (key, val) {\n      if (key) {\n        this.object3d.scale[key] = val\n      } else {\n        this.object3d.scale.set(this.sx, this.sy, this.sz)\n      }\n    },\n    updateRotation (key, val) {\n      if (key) {\n        this.object3d.rotation[key] = val\n      } else {\n        this.object3d.rotation.set(this.rx, this.ry, this.rz)\n      }\n    }\n  }\n}\n</script>\n\n<style>\n\n</style>\n"},{"path":"@/webgl/Element/Points.vue","src":"<template>\n  <div class=\"points\">\n    <slot>\n    </slot>\n  </div>\n</template>\n\n<script>\nimport THREE from '@/three.js'\n\nexport default {\n  props: {\n    position: {}\n  },\n  data () {\n    return {\n      element: false,\n      points: false,\n      material: false,\n      geometry: false\n    }\n  },\n  created () {\n    this.element = this.points = new THREE.Points()\n    this.$parent.$emit('add', this.points)\n    this.$emit('element', this.points)\n    this.$on('material', (v) => {\n      this.material = v\n      this.tryUpdateMaterial()\n    })\n    this.$on('geometry', (v) => {\n      this.geometry = v\n      this.tryUpdateGeometry()\n    })\n  },\n  beforeDestroy () {\n    this.uninstall()\n  },\n  methods: {\n    tryUpdateGeometry (v) {\n      if (this.points) {\n        this.points.geometry = this.geometry\n      }\n    },\n    tryUpdateMaterial (v) {\n      if (this.points) {\n        this.points.material = this.material\n      }\n    },\n    uninstall () {\n      this.$parent.$emit('remove', this.points)\n    }\n  }\n}\n</script>\n\n<style>\n\n</style>\n"},{"path":"@/webgl/Element/Mesh.vue","src":"<template>\n  <div class=\"mesh\">\n    <slot>\n    </slot>\n  </div>\n</template>\n\n<script>\nvar THREE = window.THREE;\nexport default {\n  props: {\n  },\n  data () {\n    return {\n      element: false,\n      mesh: false,\n      material: false,\n      geometry: false\n    }\n  },\n  created () {\n    this.element = this.mesh = new THREE.Mesh()\n    this.$parent.$emit('add', this.mesh)\n    this.$emit('element', this.mesh)\n\n    this.$on('material', (v) => {\n      this.material = v\n      this.tryUpdateMaterial()\n    })\n    this.$on('geometry', (v) => {\n      this.geometry = v\n      this.tryUpdateGeometry()\n    })\n  },\n  beforeDestroy () {\n    this.uninstall()\n  },\n  methods: {\n    tryUpdateGeometry (v) {\n      if (this.mesh) {\n        this.mesh.geometry = this.geometry\n      }\n    },\n    tryUpdateMaterial (v) {\n      if (this.mesh) {\n        this.mesh.material = this.material\n      }\n    },\n    uninstall () {\n      this.$parent.$emit('remove', this.mesh)\n    }\n  }\n}\n</script>\n\n<style>\n\n</style>\n"},{"path":"@/webgl/Geo/SphereBufferGeometry.vue","src":"<template>\n  <div class=\"geo-sphere\"></div>\n</template>\n\n<script>\nvar THREE = window.THREE\nexport default {\n  data () {\n    return {\n      geometry: false\n    }\n  },\n  mounted () {\n    let geometry = new THREE.SphereBufferGeometry(2, 256, 256)\n    this.$parent.$emit('geometry', geometry)\n  }\n}\n</script>\n\n<style>\n\n</style>\n"},{"path":"@/shader/Simple/vs.vert","src":"varying vec3 vPos;\nuniform float time;\n\nvoid main (void) {\n  vPos = position;\n  vPos.x = vPos.x + sin(vPos.x + time);\n  vPos.y = vPos.y + cos(vPos.y + time);\n  vPos.z = vPos.z + tan(vPos.z + time);\n  \n  vec4 mvPosition = modelViewMatrix * vec4(position, 1.0);\n  vec4 outputPos = projectionMatrix * mvPosition;\n  gl_Position = outputPos;\n  gl_PointSize = 1.0;\n}"},{"path":"@/shader/Simple/fs.frag","src":"varying vec3 vPos;\n\nvoid main () {\n  gl_FragColor = vec4(vec3(vPos), 1.0);\n}"},{"path":"@/shader/Fling/vs.vert","src":"varying vec3 vPos;\nuniform float time;\n\nvoid main (void) {\n  vPos = position;\n  vPos.x = vPos.x + sin(vPos.x + time);\n  vPos.y = vPos.y + cos(vPos.y + time);\n  vPos.z = vPos.z + tan(vPos.z + time);\n  \n  vec4 mvPosition = modelViewMatrix * vec4(vPos, 1.0);\n  vec4 outputPos = projectionMatrix * mvPosition;\n  gl_Position = outputPos;\n}"},{"path":"@/three.js","src":"var THREE = window.THREE\nexport default THREE\n"}],"date":"Fri Feb 16 2018 06:02:19 GMT+0800 (HKT)"}]}